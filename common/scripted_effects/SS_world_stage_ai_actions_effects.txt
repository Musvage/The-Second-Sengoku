# indexes for theater
@spanish_cw		= 1
@mongolia		= 2
@poland			= 3
@ardennes		= 4
@alsace			= 5
@westphalia		= 6
@germany		= 7
@france			= 8
@belarus		= 9
@smolensk		= 10
@russia			= 11
@norway			= 12
@ethiopia		= 13
@lybia			= 14
@egypt			= 15
@india			= 16
@bengal			= 17
@tibet			= 18
@china			= 19
@indies			= 20
@philipines		= 21
@siberia		= 22
@italy			= 23
@sicily			= 24
@alpes			= 25
@austria		= 26
@netherlands	= 27
@guanxi			= 28
@urals			= 29
@england		= 30
@normandy		= 31
@sealion		= 32
@taiwan			= 33
@portugal		= 34
@madrid			= 35
@zaragoza		= 36
@barcelona		= 38
@marseille		= 38
@morocco		= 39

# indexes of World Stage actions
@action_none = 0
@action_reinforce = 1
@action_equipment = 2
@action_offensive = 3
@action_defenses = 4
@action_retreat = 5
# costs of World Stage actions	# reinforce/reatread will use some more dynamic variables, specific overall strength costs are not shown here
@reinforce_cp = 10
@reinforce_cooldown = 7
@supply_cp = 10
@supply_cooldown = 7
@supply_amount = 1000
@reinforce_cooldown_near = 7
@reinforce_cooldown_mid = 21
@reinforce_cooldown_distant = 42
@offensive_cp = 25
@offensive_cooldown = 14
@defenses_cp = 25
@defenses_cooldown = 14
@retreat_cp = 15
@retreat_cooldown = 7

set_up_ai_for_world_stage = {
	# 1st step: list theaters by priority order for each country
	# 2nd step: list theaters that the country does not want to interfere
	# 3nd step: set up variables for behaviour
	101 = { # Germany
		# priority
		add_to_array = { world_stage_priority_theater = @germany }		# the first theater (index 0 on this list) should always be the capital, where AI will defend to the death
		add_to_array = { world_stage_priority_theater = @westphalia }
		add_to_array = { world_stage_priority_theater = @austria }
		add_to_array = { world_stage_priority_theater = @poland }
		add_to_array = { world_stage_priority_theater = @alsace }
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @russia }
		add_to_array = { world_stage_priority_theater = @smolensk }
		add_to_array = { world_stage_priority_theater = @belarus }
		add_to_array = { world_stage_priority_theater = @sealion }
		add_to_array = { world_stage_priority_theater = @england }
		add_to_array = { world_stage_priority_theater = @normandy }
		# ignore
		add_to_array = { world_stage_ignore_theater = @mongolia }
		add_to_array = { world_stage_ignore_theater = @philipines }
		add_to_array = { world_stage_ignore_theater = @indies }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @bengal }
		add_to_array = { world_stage_ignore_theater = @india }
		add_to_array = { world_stage_ignore_theater = @guanxi }
		add_to_array = { world_stage_ignore_theater = @siberia }
		add_to_array = { world_stage_ignore_theater = @taiwan }
		add_to_array = { world_stage_ignore_theater = @china }
		#values
		#set_variable = { ai_prefers_reinforce = }
		#set_variable = { ai_prefers_supply = }		# DEPRICATED
		set_variable = { ai_prefers_offensive = 1.25 }	# Germany does not have that much raw power, prefers to use it intelligently
		set_variable = { ai_prefers_defenses = 1.25 }
		#set_variable = { ai_prefers_retreat = }
		set_variable = { ai_save_strength = 90 }	# barbarossa and blitzkrieg
	}
	102 = {	# England
		# priority
		add_to_array = { world_stage_priority_theater = @england }
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @germany }
		add_to_array = { world_stage_priority_theater = @westphalia }
		add_to_array = { world_stage_priority_theater = @egypt }
		add_to_array = { world_stage_priority_theater = @alsace }
		add_to_array = { world_stage_priority_theater = @india }
		add_to_array = { world_stage_priority_theater = @bengal }
		add_to_array = { world_stage_priority_theater = @guanxi }
		add_to_array = { world_stage_priority_theater = @china }
		# ignore
		add_to_array = { world_stage_ignore_theater = @taiwan }
		add_to_array = { world_stage_ignore_theater = @philipines }
		add_to_array = { world_stage_ignore_theater = @indies }
		add_to_array = { world_stage_ignore_theater = @mongolia }
		add_to_array = { world_stage_ignore_theater = @siberia }
		add_to_array = { world_stage_ignore_theater = @urals }
		set_variable = { ai_save_strength = 60 }	# overlord and husky
	}
	103 = {	# France
		# priority
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @alsace }
		add_to_array = { world_stage_priority_theater = @westphalia }
		add_to_array = { world_stage_priority_theater = @germany }
		add_to_array = { world_stage_priority_theater = @england }
		add_to_array = { world_stage_priority_theater = @poland }
		# ignore
		add_to_array = { world_stage_ignore_theater = @taiwan }
		add_to_array = { world_stage_ignore_theater = @philipines }
		add_to_array = { world_stage_ignore_theater = @indies }
		add_to_array = { world_stage_ignore_theater = @mongolia }
		add_to_array = { world_stage_ignore_theater = @siberia }
		add_to_array = { world_stage_ignore_theater = @urals }
		#values
		#set_variable = { ai_prefers_reinforce = }
		#set_variable = { ai_prefers_supply = }
		#set_variable = { ai_prefers_offensive = }
		set_variable = { ai_prefers_defenses = 1.25 }
		set_variable = { ai_prefers_retreat = 1.25 }	# [insert jokes about surrendering]
	}
	104 = {	# Soviet Union
		# priority
		add_to_array = { world_stage_priority_theater = @russia }
		add_to_array = { world_stage_priority_theater = @smolensk }
		add_to_array = { world_stage_priority_theater = @urals }
		add_to_array = { world_stage_priority_theater = @belarus }
		add_to_array = { world_stage_priority_theater = @poland }
		add_to_array = { world_stage_priority_theater = @siberia }
		add_to_array = { world_stage_priority_theater = @germany }
		add_to_array = { world_stage_priority_theater = @mongolia }
		add_to_array = { world_stage_priority_theater = @guanxi }
		add_to_array = { world_stage_priority_theater = @china }
		# ignore
		add_to_array = { world_stage_ignore_theater = @bengal }
		add_to_array = { world_stage_ignore_theater = @india }
		add_to_array = { world_stage_ignore_theater = @taiwan }
		add_to_array = { world_stage_ignore_theater = @philipines }
		add_to_array = { world_stage_ignore_theater = @indies }
		add_to_array = { world_stage_ignore_theater = @india }
		#values
		set_variable = { ai_prefers_reinforce = 1.5 }	# The one with the rifle shoots, the one without follows him
		#set_variable = { ai_prefers_supply = }
		#set_variable = { ai_prefers_offensive =  }
		#set_variable = { ai_prefers_defenses =  }
		set_variable = { ai_prefers_retreat = 0.5 }	# No Step Back!
	}
	105 = {	# USA
		# priority
		add_to_array = { world_stage_priority_theater = @taiwan }
		add_to_array = { world_stage_priority_theater = @england }
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @germany }
		add_to_array = { world_stage_priority_theater = @westphalia }
		add_to_array = { world_stage_priority_theater = @alsace }
		add_to_array = { world_stage_priority_theater = @italy }
		add_to_array = { world_stage_priority_theater = @egypt }
		add_to_array = { world_stage_priority_theater = @sicily }
		add_to_array = { world_stage_priority_theater = @lybia }
		add_to_array = { world_stage_priority_theater = @philipines }
		# ignore
		add_to_array = { world_stage_ignore_theater = @siberia }
		add_to_array = { world_stage_ignore_theater = @mongolia }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @urals }
		add_to_array = { world_stage_ignore_theater = @bengal }
	}
	106 = {	# China
		# priority
		add_to_array = { world_stage_priority_theater = @china }
		add_to_array = { world_stage_priority_theater = @guanxi }
		add_to_array = { world_stage_priority_theater = @tibet }
		add_to_array = { world_stage_priority_theater = @taiwan }
		add_to_array = { world_stage_priority_theater = @philipines }
		add_to_array = { world_stage_priority_theater = @indies }
		add_to_array = { world_stage_priority_theater = @bengal }
		add_to_array = { world_stage_priority_theater = @mongolia }
		add_to_array = { world_stage_priority_theater = @india }
		add_to_array = { world_stage_priority_theater = @siberia }
		add_to_array = { world_stage_priority_theater = @urals }
		add_to_array = { world_stage_priority_theater = @russia }
		# ignore
		add_to_array = { world_stage_ignore_theater = @lybia }
		add_to_array = { world_stage_ignore_theater = @egypt }
		add_to_array = { world_stage_ignore_theater = @belarus }
		add_to_array = { world_stage_ignore_theater = @smolensk }
		add_to_array = { world_stage_ignore_theater = @poland }
		add_to_array = { world_stage_ignore_theater = @alpes }
		add_to_array = { world_stage_ignore_theater = @sicily }
		add_to_array = { world_stage_ignore_theater = @italy }
		add_to_array = { world_stage_ignore_theater = @alsace }
		add_to_array = { world_stage_ignore_theater = @westphalia }
		add_to_array = { world_stage_ignore_theater = @france }
		add_to_array = { world_stage_ignore_theater = @germany }
		add_to_array = { world_stage_ignore_theater = @england }
		#
		set_variable = { ai_save_strength = 40 }	# invasion of formosa + siberian offensive
	}
	107 = {	# Netherlands
		# priority
		add_to_array = { world_stage_priority_theater = @netherlands }
		add_to_array = { world_stage_priority_theater = @indies }
		add_to_array = { world_stage_priority_theater = @westphalia }
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @england }
		# ignore
		add_to_array = { world_stage_ignore_theater = @mongolia }
		add_to_array = { world_stage_ignore_theater = @urals }
		add_to_array = { world_stage_ignore_theater = @smolensk }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @siberia }
		add_to_array = { world_stage_ignore_theater = @belarus }
		add_to_array = { world_stage_ignore_theater = @poland }
		add_to_array = { world_stage_ignore_theater = @russia }
		#values
		set_variable = { ai_prefers_reinforce = 0.5 }
		#set_variable = { ai_prefers_supply = }
		#set_variable = { ai_prefers_offensive =  }
		#set_variable = { ai_prefers_defenses =  }
		#set_variable = { ai_prefers_retreat =  }
	}
	108 = {	# Portugal
		# priority
		add_to_array = { world_stage_priority_theater = @portugal }
		add_to_array = { world_stage_priority_theater = @madrid }
		add_to_array = { world_stage_priority_theater = @germany }
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @england }
		# ignore
		add_to_array = { world_stage_ignore_theater = @urals }
		add_to_array = { world_stage_ignore_theater = @smolensk }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @siberia }
		add_to_array = { world_stage_ignore_theater = @belarus }
		add_to_array = { world_stage_ignore_theater = @poland }
		add_to_array = { world_stage_ignore_theater = @russia }
		#values
		set_variable = { ai_prefers_reinforce = 0.5 }
		#set_variable = { ai_prefers_supply = }
		#set_variable = { ai_prefers_offensive =  }
		#set_variable = { ai_prefers_defenses =  }
		#set_variable = { ai_prefers_retreat =  }
	}
	109 = {	# Italy
		# priority
		add_to_array = { world_stage_priority_theater = @italy }
		add_to_array = { world_stage_priority_theater = @alpes }
		add_to_array = { world_stage_priority_theater = @sicily }
		add_to_array = { world_stage_priority_theater = @lybia }
		add_to_array = { world_stage_priority_theater = @egypt }
		add_to_array = { world_stage_priority_theater = @austria }
		add_to_array = { world_stage_priority_theater = @germany }
		add_to_array = { world_stage_priority_theater = @westphalia }
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @alsace }
		# ignore
		add_to_array = { world_stage_ignore_theater = @taiwan }
		add_to_array = { world_stage_ignore_theater = @indies }
		add_to_array = { world_stage_ignore_theater = @philipines }
		add_to_array = { world_stage_ignore_theater = @china }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @bengal }
		add_to_array = { world_stage_ignore_theater = @india }
		add_to_array = { world_stage_ignore_theater = @guanxi }
		add_to_array = { world_stage_ignore_theater = @siberia }
	}
	111 = {	# Republican Spain
		# priority
		add_to_array = { world_stage_priority_theater = @madrid }
		add_to_array = { world_stage_priority_theater = @zaragoza }
		add_to_array = { world_stage_priority_theater = @barcelona }
		add_to_array = { world_stage_priority_theater = @portugal }
		add_to_array = { world_stage_priority_theater = @marseille }
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @england }
		add_to_array = { world_stage_priority_theater = @germany }
		# ignore
		add_to_array = { world_stage_ignore_theater = @urals }
		add_to_array = { world_stage_ignore_theater = @smolensk }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @siberia }
		add_to_array = { world_stage_ignore_theater = @belarus }
		add_to_array = { world_stage_ignore_theater = @poland }
		add_to_array = { world_stage_ignore_theater = @russia }
		add_to_array = { world_stage_ignore_theater = @bengal }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @indies }
		add_to_array = { world_stage_ignore_theater = @taiwan }
		add_to_array = { world_stage_ignore_theater = @india }
		add_to_array = { world_stage_ignore_theater = @philipines }
		#values
		set_variable = { ai_prefers_reinforce = 0.5 }
		#set_variable = { ai_prefers_supply = }
		#set_variable = { ai_prefers_offensive =  }
		#set_variable = { ai_prefers_defenses =  }
		#set_variable = { ai_prefers_retreat =  }
	}
	121 = {	# Falangist Spain
		# priority
		add_to_array = { world_stage_priority_theater = @zaragoza }
		add_to_array = { world_stage_priority_theater = @madrid }
		add_to_array = { world_stage_priority_theater = @barcelona }
		add_to_array = { world_stage_priority_theater = @portugal }
		add_to_array = { world_stage_priority_theater = @marseille }
		add_to_array = { world_stage_priority_theater = @germany }
		add_to_array = { world_stage_priority_theater = @france }
		add_to_array = { world_stage_priority_theater = @england }
		# ignore
		add_to_array = { world_stage_ignore_theater = @urals }
		add_to_array = { world_stage_ignore_theater = @smolensk }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @siberia }
		add_to_array = { world_stage_ignore_theater = @belarus }
		add_to_array = { world_stage_ignore_theater = @poland }
		add_to_array = { world_stage_ignore_theater = @russia }
		add_to_array = { world_stage_ignore_theater = @bengal }
		add_to_array = { world_stage_ignore_theater = @tibet }
		add_to_array = { world_stage_ignore_theater = @indies }
		add_to_array = { world_stage_ignore_theater = @taiwan }
		add_to_array = { world_stage_ignore_theater = @india }
		add_to_array = { world_stage_ignore_theater = @philipines }
		#values
		set_variable = { ai_prefers_reinforce = 0.5 }
		#set_variable = { ai_prefers_supply = }
		#set_variable = { ai_prefers_offensive =  }
		#set_variable = { ai_prefers_defenses =  }
		#set_variable = { ai_prefers_retreat =  }
	}
}

chose_theater_to_act = {
	log = "[GetMetropolisName] AI SCRIPT"
	# 1st step: check all priority theater, pick the first on the list that is active
	# 2nd step: check all non-ingnored theaters, pick random one that is active
	# 3rd step: check all ingored theaters, pick last on the list that is active
		
	set_variable = { selected_theater = 0 }	# always set to zero at the start: if no theater is selected, "0" means no action will be taken further down the code
	
	for_each_loop = {
		array = world_stage_priority_theater
		index = this_theater	# this index IS NOT a theater index!
		value = theater_index	# this is the theater index, which is a state id
		break = break			# if we use set_temp_variable = { break = 1 }, it breaks the code (any value other than 0)
		
		var:theater_index = {
			if = {
				limit = { has_state_flag = theater_is_active }
				if = {
					limit = { check_variable = { array_worldstage_action_cooldown^var:theater_index < 1 } }
					
					PREV = { set_variable = { selected_theater = theater_index } set_state_flag = selected_theater_is_priority }
					set_temp_variable = { break = 1 }
				} else = { log = "(Tried priority theater [GetTheaterName] but it was on cooldown)" }
			} else = { var:theater_index = { log = "(Tried priority theater [GetTheaterName] but it was not active)" } }
		}
	}
	if = {
		limit = { check_variable = { selected_theater = 0 } }	# if this is zero, then no priority theater was chosen, let's choose a regular
		for_each_loop = {
			array = global.theater_list
			index = this_theater	# this index IS NOT a theater index!
			value = theater_index	# this is the theater index, which is a state id
			
			if = {
				limit = { check_variable = { array_worldstage_action_cooldown^var:theater_index < 1 } }
				var:theater_index = {
					if = {
						limit = { has_state_flag = theater_is_active }
						PREV = { set_variable = { selected_theater = theater_index } }
						# now we check to see if we should ignore it
						for_each_loop = {
							array = PREV.world_stage_ignore_theater
							index = this_theater_B	# this index IS NOT a theater index!
							value = theater_index_B	# this is the theater index, which is a state id
							
							if = {
								limit = { check_variable = { theater_index = theater_index_B } }	# if this is true, AI picked a theater it should ignore
								PREV = { set_variable = { selected_theater = 0 } }						# setting to zero means no theater was picked yet
							}
						}
				
					}
				}
			} else = { var:theater_index = { log = "(Tried regular theater [GetTheaterName] but it was on cooldown)" } }
		}
	}
	if = {
		limit = { check_variable = { selected_theater = 0 } }	# if this is zero, then no regular theater was chosen, let's choose an ignored
		for_each_loop = {
			array = world_stage_ignore_theater
			index = this_theater	# this index IS NOT a theater index!
			value = theater_index	# this is the theater index, which is a state id
			break = break			# if we use set_temp_variable = { break = 1 }, it breaks the code (any value other than 0)
			
			if = {
				limit = { check_variable = { array_worldstage_action_cooldown^var:theater_index < 1 } }
				var:theater_index = {
					if = {
						limit = { has_state_flag = theater_is_active }
						PREV = { set_variable = { selected_theater = theater_index } set_state_flag = selected_theater_is_ignored }
						set_temp_variable = { break = 1 }
					}
				}
			} else = { var:theater_index = { log = "(Tried ignored theater [GetTheaterName] but it was on cooldown)" } }
		}
	}
	if = {
		limit = { NOT = { check_variable = { selected_theater = 0 } } }
		var:theater_index = { log = "[PREV.GetMetropolisName]: selected theater [?theater_index] ([THIS.GetTheaterName])" }
		choose_an_action = yes
	} else = { log = "[GetMetropolisName] AI chose no valid theater, it will try again next day" log = "--------------------" }
}

choose_an_action = {
	log = "[GetMetropolisName] will choose an action (choose_an_action = yes)"
	# here, AI weights each action and chooses one
	# if victory is assured, it is less likely to reinforce
	# if theater is ignored, it is less likely to reinforce
	# if defeat is inevitable, it is likely to retreat
	# if it is winning, it will never retreat
	# if current theater is priority, it is less likely to retreat
	# if current theater is the hightest priority, it will never retreat
	# if it has more strategic advantage, it is less likely to retreat (makes sense given how this minigame works)
	# offensive or defenses depend on strategic advantage of the enemy
	# all probabilities are zero if the triggers for each 'button' are not met (if no action is taken, resets AI_took_an_action to make another action tomorrow )
	
	# base weights
	set_temp_variable = { want_to_reinforce = 100 } multiply_temp_variable = { want_to_reinforce = ai_prefers_reinforce?1 }
	#set_temp_variable = { want_to_supply = 100 } multiply_temp_variable = { want_to_supply = ai_prefers_supply?1 }
	set_temp_variable = { want_to_offensive = 100 } multiply_temp_variable = { want_to_offensive = ai_prefers_offensive?1 }
	set_temp_variable = { want_to_defenses = 100 } multiply_temp_variable = { want_to_defenses = ai_prefers_defenses?1 }
	set_temp_variable = { want_to_retreat = 50 } multiply_temp_variable = { want_to_retreat = ai_prefers_retreat?1 }

	# modifiers for weights
	
	 	# these are static
	if = {
		limit = { var:selected_theater = { has_state_flag = selected_theater_is_ignored } }
		multiply_temp_variable = { want_to_reinforce = 0.5 }
	}
	if = {
		limit = { var:selected_theater = { has_state_flag = selected_theater_is_priority } }
		multiply_temp_variable = { want_to_retreat = 0.5 }
	}
	if = {
		limit = { check_variable = { selected_theater = world_stage_priority_theater^0 } }	# selected_theater is capital: never retreat
		set_temp_variable = { want_to_retreat = 0 }
	}
	
		# these are dynamic
	if = {
		limit = { var:world_stage_metropolis = { check_variable = { world_stage_power < 50 } } }	# if AI doesn't have lots of power, it prefers denfenses/offensive preparations rather than deploying more power
		multiply_variable = { want_to_defenses = 2 }
		multiply_variable = { want_to_offensive = 2 }
		multiply_variable = { want_to_reinforce = 0.5 }
	}
	if = {
		limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 50 } } }	# if it has lots of deployed troops in this theater, AI will prefere to prepare offensives or defenses
		multiply_variable = { want_to_offensive = 2 }
		multiply_variable = { want_to_defenses = 2 }
	}
	if = {
		limit = { 
			NOT = {
				check_variable = { world_stage_power > ai_save_strength }	# if it does not have more power than what it wants to save for focuses, it will not reinforce (except capital)
				check_variable = { selected_theater = world_stage_priority_theater^0 }
			}
		}	
		multiply_variable = { want_to_reinforce = 0 }
	}
		# these are dynamic and depend on whether the AI is attacking or defending
	var:selected_theater = { set_temp_variable = { defending_coalition = theater_owner_coalition } log = "[GetTheaterName] defending_coalition [?defending_coalition]" }
	if = {
		limit = { check_variable = { world_stage_coalition = defending_coalition } }
		# the code for defender (here) and attacker are essentially the same, it just switches which set of variables it cares about
		log = "it's defending!"
		if = {
			limit = {
				var:selected_theater = { check_variable = { defender_deployed_power > attacker_deployed_power } }
				var:selected_theater = { check_variable = { attacker_strategic_advantage < 0.5 } }
			}
			set_variable = { want_to_retreat = 0 }	log = "defender_deployed_power > attacker_deployed_power, attacker_strategic_advantage < 0.5"	# "Are you winning, son?" // never retreat if AI is winning
		}
		if = {
			limit = {
				var:selected_theater = { check_variable = { defender_deployed_power > attacker_deployed_power } }
				var:selected_theater = { check_variable = { attacker_strategic_advantage > 2 } }
			}
			multiply_variable = { want_to_retreat = 2 }	log = "attacker_deployed_power > defender_deployed_power, attacker_strategic_advantage > 2"	# if such powerful blow is about to be dealt, AI will consider simply retreating
			set_variable = { want_to_reinforce = 0 }
		}
	} else = {
		# now, code for AI as attacker
		log = "it's attacking!"
		if = {
			limit = {
				var:selected_theater = { check_variable = { attacker_deployed_power > defender_deployed_power } }
				var:selected_theater = { check_variable = { efender_strategic_advantage < 0.5 } }
			}
			set_variable = { want_to_retreat = 0 }	log = "attacker_deployed_power > defender_deployed_power, defender_strategic_advantage < 0.5"	# "Are you winning, son?" // never retreat if AI is winning
		}
		if = {
			limit = {
				var:selected_theater = { check_variable = { attacker_deployed_power > defender_deployed_power } }
				var:selected_theater = { check_variable = { efender_strategic_advantage > 2 } }
			}
			multiply_variable = { want_to_retreat = 2 }	log = "defender_deployed_power > attacker_deployed_power, defender_strategic_advantage > 2"	# if such powerful blow is about to be dealt, AI will consider simply retreating
			set_variable = { want_to_reinforce = 0 }
		}
	}
	
	### LAST CHECK, OVERWRITES ALL OTHER: IF CAPITAL IS ABOUT TO FALL, RETREAT FROM ANYOTHER THEATER TO REINFORCE IT
	if = {
		limit = { 
			var:world_stage_priority_theater^0 = { has_state_flag = theater_is_active }
			var:world_stage_priority_theater^0 = { check_variable = { attacker_deployed_power > var:world_stage_priority_theater^0.defender_deployed_power } } 	# AI is necessarily defender here
		}
		random_state = {
			limit = {
				check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 1.1 }	# pick a random theater where we have troops...
				NOT = { state = var:world_stage_priority_theater^0 }							# ...that is not the capital
			}
			log = "special check: emergency retreat to protect capital"
			log = "[GetMetropolisName] AI chose to retreat from [THIS.GetTheaterName]"
			set_variable = { array_worldstage_action_cooldown^var:selected_theater = 5 } # number of days of cooldown
			set_variable = { array_worldstage_action_ongoing^var:selected_theater = @action_retreat } # type of action taken
			set_temp_variable = { retreat_value = var:selected_theater:world_stage_power_deployed_by^world_stage_metropolis }
			set_temp_variable = { rear_guard = 1 }
			if = { limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 49 } } set_temp_variable = { rear_guard = 5 } } }
			if = { limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 100 } } set_temp_variable = { rear_guard = 10 } } }
			if = { limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 110 } } set_temp_variable = { retreat_value = 100 } } set_temp_variable = { rear_guard = 0 } }
			subtract_from_temp_variable = { retreat_value = rear_guard }
			subtract_from_variable = { var:selected_theater:world_stage_power_deployed_by^world_stage_metropolis = retreat_value }
			var:world_stage_metropolis = { add_to_variable = { world_stage_power = retreat_value } }
			var:selected_theater = { world_stage_state_update_current_day = yes }
			log = "button_retreat theater nº[?selected_theater] by [?retreat_value], cooldown: [?array_worldstage_action_cooldown^var:selected_theater] days"
			PREV = {
				set_temp_variable = { want_to_reinforce = 0 }	# this forces the AI not to take any more action today, since already took one (retreat)
				set_temp_variable = { want_to_supply = 0 }
				set_temp_variable = { want_to_offensive = 0 }
				set_temp_variable = { want_to_defenses = 0 }
				set_temp_variable = { want_to_retreat = 0 }
			}
		}
	}
	
	# clear flags
	var:selected_theater = {
		clr_state_flag = selected_theater_is_priority
		clr_state_flag = selected_theater_is_ignored
	}
	
	# checking triggers for each action (copy/paste from GUI buttons and reversing the conditions, removing cp cost and replacing selected_theater for selected_theater, does not need to check permissions
	
	if = {
		limit = { check_variable = { array_worldstage_action_cooldown^var:selected_theater < 1 } }	# CHECK COOLDOWN
		if = {	# REINFORCE
			limit = { var:world_stage_metropolis = { check_variable = { world_stage_power > 0 } } }
			# action is possible, nothing happens yet
		} else = { set_temp_variable = { want_to_reinforce = 0 } }
	#	if = {	# SUPPLY
	#		limit = {
	#			#has_equipment = { infantry_equipment_1 > 999  }
	#			always = no
	#		}
	#		# action is possible, nothing happens yet
	#	} else = { set_temp_variable = { want_to_supply = 0 } }
		if = {	# OFFENSIVE
			limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 1 } } }
			# action is possible, nothing happens yet
		} else = { set_temp_variable = { want_to_offensive = 0 } }
		if = {	# DEFENSES
			limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 1 } } }
			# action is possible, nothing happens yet
		} else = { set_temp_variable = { want_to_defenses = 0 } }
		if = {	# RETREAT
			limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 1.1 } } }	# min = 2
			# action is possible, nothing happens yet
		} else = { set_temp_variable = { want_to_retreat = 0 } }
	} else = { log = "This theater has action cooldown" }
	
	# there is no problem if the AI does not have available options: it will simply pick another scenario and try again the next day
	# since AI can use "offensive" or "defenses" in any theater it is present, there is no "impossible action loop" as long as it has power left somewhere (if not, it looses the war)
	
	# TODO TO-DO TO DO: finish this later
	#I may have to add an "Axis AI" and a "Allies AI"
		
	log = "Deicsion weights:"
	log = "want_to_reinforce [?want_to_reinforce]"
	log = "want_to_supply [?want_to_supply]"
	log = "want_to_offensive [?want_to_offensive]"
	log = "want_to_defenses [?want_to_defenses]"
	log = "want_to_retreat [?want_to_retreat]"
	
	# now, cast the die!
	# This part of the code essentialy copy/pastes the effects from the UI buttons available to the human player
	
	if = {
		limit = {
			NOT = {
				AND = {
					check_variable = { want_to_reinforce = 0 }
					#check_variable = { want_to_supply = 0 }
					check_variable = { want_to_offensive = 0 }
					check_variable = { want_to_defenses = 0 }
					check_variable = { want_to_retreat = 0 }
				}
			}
		}
		random_list = {	# copy/paste effects from GUI buttons, replacing selected_theater for selected_theater and removing cp cost
			var:want_to_reinforce = {
				log = "[GetMetropolisName] AI chose to reinforce"
				set_variable = { array_worldstage_action_cooldown^var:selected_theater = @reinforce_cooldown } # number of days of cooldown
				set_variable = { array_worldstage_action_ongoing^var:selected_theater = @action_reinforce } # type of action taken
				set_temp_variable = { reinforce_value = 1 }
				if = { limit = { var:world_stage_metropolis = { check_variable = { world_stage_power > 10 } } } add_to_temp_variable = { reinforce_value = 4 } }	# easier to add values step by step
				if = { limit = { var:world_stage_metropolis = { check_variable = { world_stage_power > 50 } } } add_to_temp_variable = { reinforce_value = 5 } }
				if = { limit = { var:world_stage_metropolis = { check_variable = { world_stage_power > 100 } } } add_to_temp_variable = { reinforce_value = 5 } }
				subtract_from_variable = { var:world_stage_metropolis:world_stage_power = reinforce_value }
				add_to_variable = { var:selected_theater:world_stage_power_deployed_by^world_stage_metropolis = reinforce_value }
				var:selected_theater = { world_stage_state_update_current_day = yes }
				log = "button_reinforce theater nº[?selected_theater] by [?reinforce_value], cooldown: [?array_worldstage_action_cooldown^var:selected_theater] days"
			}
#			var:want_to_supply = {
#				log = "[GetMetropolisName] AI chose to supply"
#				### AI WILL NOT MAKE SUPPLY RUNS FROM THIS SCRIP: IT WILL BE HANDLED BY AN AI-EXCLUSIVE DECISION
#			}
			var:want_to_offensive = {
				log = "[GetMetropolisName] AI chose offensive"
				set_variable = { array_worldstage_action_cooldown^var:selected_theater = 5 } # number of days of cooldown
				set_variable = { array_worldstage_action_ongoing^var:selected_theater = @action_offensive } # type of action taken
				var:current_theater = {
					random_list = {
						1 = { set_temp_variable = { offensive_bonus = 0.025 } } 1 = { set_temp_variable = { offensive_bonus = 0.05 } } 1 = { set_temp_variable = { offensive_bonus = 0.075 } }
					}
					if = {
						limit = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 5 } }
						random_list = {
							1 = { set_temp_variable = { offensive_bonus = 0.05 } } 1 = { set_temp_variable = { offensive_bonus = 0.1 } } 1 = { set_temp_variable = { offensive_bonus = 0.15 } }
						}
					}
					if = {
						limit = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 15 } }
						random_list = {
							1 = { set_temp_variable = { offensive_bonus = 0.075 } } 1 = { set_temp_variable = { offensive_bonus = 0.15 } } 1 = { set_temp_variable = { offensive_bonus = 0.225 } }
						}
					}
					if = {
						limit = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 30 } }
						random_list = {
							1 = { set_temp_variable = { offensive_bonus = 0.1 } } 1 = { set_temp_variable = { offensive_bonus = 0.2 } } 1 = { set_temp_variable = { offensive_bonus = 0.3 } }
						}
					}
					if = {
						limit = { check_variable = { PREV.world_stage_coalition = theater_owner_coalition } }	# it's a defender
						add_to_variable = { defender_strategic_advantage = offensive_bonus }
					} else = {																# it's an attacker
						add_to_variable = { attacker_strategic_advantage = offensive_bonus }
					}
				}
				log = "button_offensive theater nº[?selected_theater], cooldown: [?array_worldstage_action_cooldown^var:selected_theater] days"
			}
			var:want_to_defenses = {
				log = "[GetMetropolisName] AI chose defenses"
				set_variable = { array_worldstage_action_cooldown^var:selected_theater = 5 } # number of days of cooldown
				set_variable = { array_worldstage_action_ongoing^var:selected_theater = @action_defenses } # type of action taken
				var:current_theater = {
					set_temp_variable = { defenses_bonus = 0.05 }
					if = {
						limit = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 15 } }
						 set_temp_variable = { defenses_bonus = 0.1 }
					}
					if = {
						limit = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 30 } }
						set_temp_variable = { defenses_bonus = 0.15 }
					}
					if = {
						limit = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 45 } }
						set_temp_variable = { defenses_bonus = 0.2 }
					}
					if = {
						limit = { check_variable = { PREV.world_stage_coalition = theater_owner_coalition } }	# it's a defender
						add_to_variable = { defender_strategic_advantage = defenses_bonus }
					} else = {																# it's an attacker
						add_to_variable = { attacker_strategic_advantage = defenses_bonus }
					}
				}
				log = "button_defenses theater nº[?selected_theater], cooldown: [?array_worldstage_action_cooldown^var:selected_theater] days"
			}
			var:want_to_retreat = {
				log = "[GetMetropolisName] AI chose to retreat"
				set_variable = { array_worldstage_action_cooldown^var:selected_theater = 5 } # number of days of cooldown
				set_variable = { array_worldstage_action_ongoing^var:selected_theater = @action_retreat } # type of action taken
				set_temp_variable = { retreat_value = var:selected_theater:world_stage_power_deployed_by^world_stage_metropolis }
				set_temp_variable = { rear_guard = 1 }
				if = { limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 49 } } set_temp_variable = { rear_guard = 5 } } }
				if = { limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 100 } } set_temp_variable = { rear_guard = 10 } } }
				if = { limit = { var:selected_theater = { check_variable = { world_stage_power_deployed_by^world_stage_metropolis > 110 } } set_temp_variable = { retreat_value = 100 } } set_temp_variable = { rear_guard = 0 } }
				subtract_from_temp_variable = { retreat_value = rear_guard }
				subtract_from_variable = { var:selected_theater:world_stage_power_deployed_by^world_stage_metropolis = retreat_value }
				var:world_stage_metropolis = { add_to_variable = { world_stage_power = retreat_value } }
				var:selected_theater = { world_stage_state_update_current_day = yes }
				log = "button_retreat theater nº[?selected_theater] by [?retreat_value], cooldown: [?array_worldstage_action_cooldown^var:selected_theater] days"
			}
		}
		clr_state_flag = AI_took_an_action set_state_flag = AI_took_an_action	# resets flag THIS IS IMPORTANT
		log = "--------------------"
	} else = { log = "[GetMetropolisName] AI did not have available actions to choose" log = "--------------------" }
}

### NOTE TO MYSELF: REORDER "IGNORE LISTS" (less important should be at the botton)