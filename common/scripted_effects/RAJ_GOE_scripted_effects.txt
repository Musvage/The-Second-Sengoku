
try_build_civ_in_core_otherwise_build_in_controlled = {
    set_country_flag = try_build_civ #to fix tooltip and only that, otherwise it will show up twice and look like its adding double civs
    random_core_state = {
        limit = {
            free_building_slots = {
                building = industrial_complex
                size > 0 # use < or >
                include_locked = yes
            }
            is_controlled_by = ROOT
        }
        add_extra_state_shared_building_slots = 1
        add_building_construction = {
             type = industrial_complex
             level = 1
             instant_build = yes
         }

         ROOT = { set_country_flag = built_civ_in_core_successfully }
    }

    if = {
        limit = {
            NOT = { has_country_flag = built_civ_in_core_successfully }
            has_country_flag = try_build_civ
        }

        random_controlled_state = {
            limit = {
               free_building_slots = {
                    building = industrial_complex
                    size > 0 # use < or >
                    include_locked = yes
                } 
            }
            add_extra_state_shared_building_slots = 1
            add_building_construction = {
                 type = industrial_complex
                 level = 1
                 instant_build = yes
             }
        }
    }

    if = { 
        limit = { has_country_flag = try_build_civ } #clear everything so that it works again on repeat calls
        clr_country_flag = try_build_civ
    }
    if = { 
        limit = { has_country_flag = built_civ_in_core_successfully }
        clr_country_flag = built_civ_in_core_successfully
    }
}


try_build_dockyard_in_core_otherwise_build_in_controlled = {
    set_country_flag = try_build_dockyard #to fix tooltip and only that, otherwise it will show up twice and look like its adding double civs
    random_core_state = {
        limit = {
            free_building_slots = {
                building = dockyard
                size > 0 # use < or >
                include_locked = yes
            }
            is_coastal = yes
            is_controlled_by = ROOT
        }
        add_extra_state_shared_building_slots = 1
        add_building_construction = {
             type = dockyard
             level = 1
             instant_build = yes
         }

         ROOT = { set_country_flag = built_dockyard_in_core_successfully }
    }

    if = {
        limit = {
            NOT = { has_country_flag = built_dockyard_in_core_successfully }
            has_country_flag = try_build_dockyard
        }

        random_controlled_state = {
            limit = {
               is_coastal = yes
               free_building_slots = {
                    building = dockyard
                    size > 0 # use < or >
                    include_locked = yes
                } 
            }
            add_extra_state_shared_building_slots = 1
            add_building_construction = {
                 type = dockyard
                 level = 1
                 instant_build = yes
             }
        }
    }

    if = { 
        limit = { has_country_flag = try_build_dockyard } #clear everything so that it works again on repeat calls
        clr_country_flag = try_build_dockyard
    }
    if = { 
        limit = { has_country_flag = built_dockyard_in_core_successfully }
        clr_country_flag = built_dockyard_in_core_successfully
    }
}




try_build_infra_in_core_otherwise_build_in_controlled = {
    set_country_flag = try_build_infra #to fix tooltip and only that, otherwise it will show up twice and look like its adding double civs
    random_core_state = {
        limit = {
            infrastructure < 5
            is_controlled_by = ROOT
        }
        add_building_construction = {
             type = infrastructure
             level = 1
             instant_build = yes
         }

         ROOT = { set_country_flag = built_infra_in_core_successfully }
    }

    if = {
        limit = {
            NOT = { has_country_flag = built_infra_in_core_successfully }
            has_country_flag = try_build_infra
        }

        random_controlled_state = {
            limit = {
                infrastructure < 5
            }
            add_building_construction = {
                 type = infrastructure
                 level = 1
                 instant_build = yes
             }
        }
    }

    if = { 
        limit = { has_country_flag = try_build_infra } #clear everything so that it works again on repeat calls
        clr_country_flag = try_build_infra
    }
    if = { 
        limit = { has_country_flag = built_infra_in_core_successfully }
        clr_country_flag = built_infra_in_core_successfully
    }
}

try_build_mil_in_core_otherwise_build_in_controlled = {
    set_country_flag = try_build_mil #to fix tooltip and only that, otherwise it will show up twice and look like its adding double civs
    random_core_state = {
        limit = {
            free_building_slots = {
                building = arms_factory
                size > 0 # use < or >
                include_locked = yes
            }
            is_controlled_by = ROOT
        }
        add_extra_state_shared_building_slots = 1
        add_building_construction = {
             type = arms_factory
             level = 1
             instant_build = yes
         }

         ROOT = { set_country_flag = built_mil_in_core_successfully }
    }

    if = {
        limit = {
            NOT = { has_country_flag = built_mil_in_core_successfully }
            has_country_flag = try_build_mil
        }

        random_controlled_state = {
            limit = {
               free_building_slots = {
                    building = arms_factory
                    size > 0 # use < or >
                    include_locked = yes
                } 
            }
            add_extra_state_shared_building_slots = 1
            add_building_construction = {
                 type = arms_factory
                 level = 1
                 instant_build = yes
             }
        }
    }

    if = { 
        limit = { has_country_flag = try_build_mil } #clear everything so that it works again on repeat calls
        clr_country_flag = try_build_mil
    }
    if = { 
        limit = { has_country_flag = built_mil_in_core_successfully }
        clr_country_flag = built_mil_in_core_successfully
    }
}

try_build_civ_in_core_otherwise_build_in_controlled_2_civs = {
    try_build_civ_in_core_otherwise_build_in_controlled = yes
    try_build_civ_in_core_otherwise_build_in_controlled = yes
}

try_build_mil_in_core_otherwise_build_in_controlled_2_mil = {
    try_build_mil_in_core_otherwise_build_in_controlled = yes
    try_build_mil_in_core_otherwise_build_in_controlled = yes
}

controlled_civilian_factories_excluding_trade = {
    set_variable = { ROOT.actually_controlled_civs = 0 }
    every_controlled_state = {
        if = {
            limit = {
                check_variable = { var:industrial_complex_level > 0 }
            }
            add_to_variable = { ROOT.actually_controlled_civs  = var:industrial_complex_level }
        }
    }

    if = { #lock up civs if they are used for paying out investors so u can like double invest
        limit = {
            ROOT = { has_country_flag = has_payed_high_dividends }
        }
        subtract_from_variable = { ROOT.actually_controlled_civs = 5 }
    }
    else_if = {
        limit = {
            ROOT = { has_country_flag = has_payed_normal_dividends }
        }
        subtract_from_variable = { ROOT.actually_controlled_civs = 2 }
    }
    else_if = {
        limit = {
           ROOT = { has_country_flag = has_payed_small_dividends } 
        }
        subtract_from_variable = { ROOT.actually_controlled_civs = 1 }
    }
}