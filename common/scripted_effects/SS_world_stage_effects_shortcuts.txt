### this file contains code for effects that are other often repeated or a bit long and be clumsy to include them in the other files
### commented brackets for navigation

### WORLD STAGE 2.0
### NEW CODE STARTS HERE

#	Sections
#		METROPOLIS/TAG MANIPULATION
#		THEATER MANIPULATION
#		COALIITON
#		DOCTRINE LEVEL
#		OFFMAP AI
#		EVENTS

### METROPOLIS/TAG MANIPULATION {

world_stage_set_leagueofnations_spirit = {	# scope is a tag
	if = {
		limit = { unification_candidate = yes }
		add_ideas = SS_lon_member_japan
	} else = { add_ideas = SS_lon_member }
	set_variable = { world_stage_coalition = 5 }
	set_temp_variable = { root_tag = THIS.id }
	every_other_country = {
		limit = { has_idea = SS_lon_member }
		#set_temp_variable = { other_tag = THIS.id }
		add_relation_modifier = {
			target = PREV	# var:root_tag?
			modifier = lon_member_relation_modifier
		}
		var:root_tag = {
			add_relation_modifier = {
				target = PREV	#var:other_tag?
				modifier = lon_member_relation_modifier
			}
		}
	}
}

# NOTE about the following effects: world_stage_coalition must be manually set BEFORE there is any change of faction, to prevent on_join_faction and on_offer_join_faction (SS_world_stage_on_action.txt) from firing, it should only fire by diplomatic action

world_stage_join_allies = {	# scope is a tag
	clear_from_coalition_arrays = yes
	if = {
		limit = { has_global_flag = league_of_nations_exists }	# therefore, the Allies do not exist yet
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 5 } } set_variable = { world_stage_coalition = 5 }	# one for tag, other for proxy
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 5 } }
			}
		}
		#if = {
		#	limit = { country_exists = LON THIS = { NOT = { tag = LON } } }
		#	LON = { add_to_faction = PREV }
		#} else = { create_faction = coalition_name_leagueofnations_short }
		world_stage_set_leagueofnations_spirit = yes
		add_to_array = { global.array_leagueofnations = THIS.id }
		log = "[THIS.GetName] tried to join the Axis before the League of Nations morphed into its final form"
	} else = {
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 1 } } set_variable = { world_stage_coalition = 1 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 1 } }
			}
		}
		if = {
			limit = { country_exists = ALY THIS = { NOT = { tag = ALY } } }
			ALY = { add_to_faction = PREV }
			hidden_effect = { add_to_array = { global.array_allies = THIS.id } }
		} else = {
			create_faction = coalition_name_allies_short
			hidden_effect = { add_to_array = { global.array_allies = THIS.id } }
		}
	}
} d_world_stage_join_allies = { world_stage_join_allies = yes log = "world_stage_join_allies" }

world_stage_join_komintern = {	# scope is a tag
	clear_from_coalition_arrays = yes
	if = {
		limit = { has_global_flag = sovietunion_joined_ww2 }	# if so, then Comintern merged with Allies
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 1 } } set_variable = { world_stage_coalition = 1 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 1 } }
			}
		}
		if = {
			limit = { country_exists = ALY THIS = { NOT = { tag = ALY } } }
			ALY = { add_to_faction = PREV }
		} else = { create_faction = coalition_name_allies_short }
		add_to_array = { global.array_allies = THIS.id }
		log = "[THIS.GetName] tried to join the Comintern but it already merged with the Allies"
	} else = {
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 2 } } set_variable = { world_stage_coalition = 2 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 2 } }
			}
		}
		if = {
			limit = { country_exists = COM THIS = { NOT = { tag = COM } } }
			COM = { add_to_faction = PREV }
		} else = { create_faction = coalition_name_allies_short }
		add_to_array = { global.array_komintern = THIS.id }
	}
} d_world_stage_join_komintern = { world_stage_join_komintern = yes log = "world_stage_join_komintern" }

world_stage_join_axis = {	# scope is a tag
	clear_from_coalition_arrays = yes
	if = {
		limit = { has_global_flag = league_of_nations_exists }	# therefore, Pact of Steel exists
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 6 } } set_variable = { world_stage_coalition = 6 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 6 } }
			}
		}
		#if = {
		#	limit = { country_exists = STL THIS = { NOT = { tag = STL } } }
		#	STL = { add_to_faction = PREV }
		#} else = { create_faction = coalition_name_pactofsteel_short }
		custom_effect_tooltip = world_stage_join_pactofsteel_tt
		add_to_array = { global.array_pactofsteel = THIS.id }
		log = "[THIS.GetName] tried to join the Axis before the Pact of Steel morphed into its final form"
	} else = {
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 3 } } set_variable = { world_stage_coalition = 3 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 3 } }
			}
		}
		if = {
			limit = { country_exists = AXS THIS = { NOT = { tag = AXS } } }
			AXS = { add_to_faction = PREV }
		} else = { create_faction = coalition_name_axis_short }
		add_to_array = { global.array_axis = THIS.id }
	}
} d_world_stage_join_axis = { world_stage_join_axis = yes log = "world_stage_join_axis" }

world_stage_join_nonaligned = {	# scope is a tag
	custom_effect_tooltip = world_stage_join_nonaligned_tt
	clear_from_coalition_arrays = yes
	if = {
		limit = { has_variable = world_stage_metropolis }
		hidden_effect = {
			var:world_stage_metropolis = { set_variable = { world_stage_coalition = 4 } } set_variable = { world_stage_coalition = 4 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 4 } }
			}
	}
} d_world_stage_join_nonaligned = { world_stage_join_nonaligned = yes log = "world_stage_join_nonaligned" }

world_stage_join_leagueofnations = {	# scope is a tag	/// THIS IS EXACTLY THE SAME AS world_stage_join_allies: I'm leaving it here just to avoid other mentions to it in the code
	clear_from_coalition_arrays = yes
	if = {
		limit = { has_global_flag = league_of_nations_exists }	# therefore, the Allies do not exist yet
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 5 } } set_variable = { world_stage_coalition = 5 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 5 } }
			}
		}
		#if = {
		#	limit = { country_exists = LON THIS = { NOT = { tag = LON } } }
		#	LON = { add_to_faction = PREV }
		#} else = { create_faction = coalition_name_leagueofnations_short }
		world_stage_set_leagueofnations_spirit = yes
		add_to_array = { global.array_leagueofnations = THIS.id }
		log = "[THIS.GetName] tried to join the Axis before the League of Nations morphed into its final form"
	} else = {
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 1 } } set_variable = { world_stage_coalition = 1 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 1 } }
			}
		}
		if = {
			limit = { country_exists = ALY THIS = { NOT = { tag = ALY } } }
			ALY = { add_to_faction = PREV }
		} else = { create_faction = coalition_name_allies_short }
		add_to_array = { global.array_allies = THIS.id }
	}
} d_world_stage_join_leagueofnations = { world_stage_join_leagueofnations = yes log = "world_stage_join_leagueofnations" }

world_stage_join_pactofsteel = {	# scope is a tag	/// THIS IS EXACTLY THE SAME AS world_stage_join_axis: I'm leaving it here just to avoid other mentions to it in the code
	clear_from_coalition_arrays = yes
	if = {
		limit = { has_global_flag = league_of_nations_exists }	# therefore, Pact of Steel exists
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 6 } } set_variable = { world_stage_coalition = 6 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 6 } }
			}
		}
		#if = {
		#	limit = { country_exists = STL THIS = { NOT = { tag = STL } } }
		#	STL = { add_to_faction = PREV }
		#} else = { create_faction = coalition_name_pactofsteel_short }
		custom_effect_tooltip = world_stage_join_pactofsteel_tt
		add_to_array = { global.array_pactofsteel = THIS.id }
	} else = {
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 3 } } set_variable = { world_stage_coalition = 3 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 3 } }
			}
		}
		if = {
			limit = { country_exists = AXS THIS = { NOT = { tag = AXS } } }
			AXS = { add_to_faction = PREV }
		} else = { create_faction = coalition_name_axis_short }
		add_to_array = { global.array_axis = THIS.id }
		log = "[THIS.GetName] tried to join the Pact of Steel after it became Axis"
	}
} d_world_stage_join_pactofsteel = { world_stage_join_pactofsteel = yes log = "world_stage_join_pactofsteel" }

world_stage_join_tiar = {	# scope is a tag
	if = {
		limit = { has_global_flag = tiar_exists }
		if = {
			limit = { has_variable = world_stage_metropolis }
			hidden_effect = {
				var:world_stage_metropolis = { set_variable = { world_stage_coalition = 7 } } set_variable = { world_stage_coalition = 7 }
				every_state = { limit = { check_variable = { theater_owner = PREV.world_stage_metropolis } } set_variable = { theater_owner_coalition = 7 } }
			}
		}
		if = {
			limit = { country_exists = RIO THIS = { NOT = { tag = RIO } } }
			RIO = { add_to_faction = PREV }
		} else = {
			create_faction = coalition_name_tiar_short
		}
		add_to_array = { global.array_tiar = THIS.id }
	} else = { log = "[THIS.GetName] tried to join the Rio Treaty but it does not exist" }
} d_world_stage_join_tiar = { world_stage_join_tiar = yes log = "world_stage_join_pactofsteel" }

world_stage_update_tag = {	# scope is a tag, is manipulated by its proxy
	if = {
		limit = { has_variable = world_stage_metropolis }
		var:world_stage_metropolis = {
			set_variable = { PREV.world_stage_coalition = world_stage_coalition }
			set_variable = { PREV.world_stage_power = world_stage_power }
			set_variable = { PREV.doctrine_bonus_land = doctrine_bonus_land }
			set_variable = { PREV.doctrine_bonus_navy = doctrine_bonus_navy }
		}
	}
} d_world_stage_update_tag = { world_stage_update_tag = yes log = "world_stage_update_tag" }

drop_all_capitulation_cosmetic_tags = {	# china/fer does not count
	hidden_effect = {
		every_possible_country = {
			limit = {
				OR = {
					has_cosmetic_tag = HIR_ALN	# axis aligned netherlands
					has_cosmetic_tag = HIR_AON	# axis opposing netherlands
					has_cosmetic_tag = KOB_FVF	# free or vichy france
					has_cosmetic_tag = OSA_EXL	# exiled gov.
					has_cosmetic_tag = REI_AOZ	# allied occupation zone
				}
			}
			drop_cosmetic_tag = yes
			if = { limit = { has_global_flag = has_uncensored_german_flag } REI = { set_cosmetic_tag = REI_UNCENSORED } }
		}
	}
} d_drop_all_capitulation_cosmetic_tags = { drop_all_capitulation_cosmetic_tags = yes log = "drop_all_capitulation_cosmetic_tags" }

worldstage_get_HIR_leaders_before_capitulation = {
	HIR = {
		if = { limit = { any_character = { is_country_leader = yes has_character_flag = dual_leader_id_hendrikus_colijn } } set_country_flag = HIR_home_gov_colijn } log = "HIR_home_gov_colijn"
		if = { limit = { any_character = { is_country_leader = yes has_character_flag = dual_leader_id_louis_beel } } set_country_flag = HIR_home_gov_beel } log = "HIR_home_gov_beel"
		if = { limit = { any_character = { is_country_leader = yes has_character_flag = dual_leader_id_anton_mussert } } set_country_flag = HIR_home_gov_mussert } log = "HIR_home_gov_mussert"
		if = { limit = { any_character = { is_country_leader = yes has_character_flag = dual_leader_id_willem_schermerhorn } } set_country_flag = HIR_home_gov_schermerhorn } log = "HIR_home_gov_schermerhorn"
		if = { limit = { HIR_wilhelmina = { is_country_leader = yes } } set_country_flag = HIR_home_gov_Wilhelmina } log = "HIR_home_gov_Wilhelmina"
	}
} d_worldstage_get_HIR_leaders_before_capitulation = { worldstage_get_HIR_leaders_before_capitulation = yes log = "worldstage_get_HIR_leaders_before_capitulation" }

### } THEATER MANIPULATION {

world_stage_get_theater_info_from_metropolis = {	# scope is a state
	every_state = {
		limit = { has_variable = theater_owner }
		var:theater_owner = { set_variable = { PREV.theater_owner_coalition = world_stage_coalition } }
		log = "[THIS.GetTheaterName] (proxy: [THIS.GetName])"
		log = "theater_owner: [?theater_owner]"
		log = "world_stage_coalition: [?theater_owner_coalition]"
	}
} d_world_stage_get_theater_info_from_metropolis = { world_stage_get_theater_info_from_metropolis = yes log = "getting theater information from proxy metropolis to proxy theater" }

world_stage_activate_theater = {	# scope is a state	# this effect does not have a custom tooltip because it would cause the proxy state's name to be displayed, which would look like an error to the player. use artificial scope instead
	if = {
		limit = { has_variable = theater_owner }
		set_state_flag = theater_is_active
	} else = { log = "world_stage_get_theater_info_from_metropolis: [THIS.GetName] is not a proxy for theater"}
}

get_main_attacker_metropolis = {	# THE LOOP CHECKS INFO THAT GETS UPDATED DAILY
	if = {
		limit = { has_state_flag = theater_is_active }
		set_variable = { main_attacker_metropolis = 100 }
		set_temp_variable = { main_attacker_value = 0 }
		for_each_loop = {
			array = world_stage_power_deployed_by
			index = this_metropolis
			value = deployed_power
			if = {
				limit = { check_variable = { this_metropolis > 100 } }	# unspecified minors DO NOT count here
				if = {
					var:this_metropolis = {
						if = {
							limit = { check_variable = { world_stage_coalition = PREV.coalition_side_attack } }	# it's an attacker
							if = {
								limit = { check_variable = { deployed_power > main_attacker_value } }
								set_variable = { PREV.main_attacker_metropolis = var:this_metropolis }
								set_temp_variable = { main_attacker_value = deployed_power }
							}
						}
					}
				}
			}
		}
	}
}

### } COALIITON {

clear_from_coalition_arrays = {
	remove_from_array = { array = global.array_allies value = THIS }
	remove_from_array = { array = global.array_komintern value = THIS }
	remove_from_array = { array = global.array_axis value = THIS }
	remove_from_array = { array = global.array_leagueofnations value = THIS }
	remove_from_array = { array = global.array_pactofsteel value = THIS }
	remove_from_array = { array = global.array_tiar value = THIS }
}

### } DOCTRINE LEVEL {

add_army_doctrine_level = {	# this is a multiplier, so increments of 0.1 means a 10% multiplier
	if = {
		limit = { has_variable = world_stage_metropolis }
		var:world_stage_metropolis = { add_to_variable = { doctrine_bonus_land = 0.1 } } log = "add_army_doctrine_level"
	}
}

add_navy_doctrine_level = {
	if = {
		limit = { has_variable = world_stage_metropolis }
		var:world_stage_metropolis = { add_to_variable = { doctrine_bonus_navy = 0.1 } } log = "add_navy_doctrine_level"
	}
}
add_air_doctrine_level = {
	if = {
		limit = { has_variable = world_stage_metropolis }
		var:world_stage_metropolis = { add_to_variable = { doctrine_bonus_land = 0.1 } }  log = "add_air_doctrine_level" 	### AIR DOCTRINE COUNTS FOR BOTH SCENARIOS
		var:world_stage_metropolis = { add_to_variable = { doctrine_bonus_navy = 0.1 } }
	}
}

add_offmap_land_doctrine_level 		= { add_to_variable = { doctrine_bonus_land = 0.1 }	log = "add_offmap_land_doctrine_level" }	# this is added directly to the proxy, no need to change scope
add_offmap_navy_land_doctrine_level	= { add_to_variable = { doctrine_bonus_navy = 0.1 }	log = "add_offmap_navy_land_doctrine_level" }
add_offmap_air_land_doctrine_level	= { add_to_variable = { doctrine_bonus_air = 0.1 }	log = "add_offmap_air_land_doctrine_level" }

### } OFFMAP AI {

REI_ai_save_strength_sealion = {
	hidden_effect = {
		101 = {
			if = {
				limit = {
					has_global_flag = REI_blitzkrieg_completed has_global_flag = REI_barbarossa_completed
					check_variable = { world_stage_power > 5 }			# if it's too low, don't even try
					NOT = { has_global_flag = REI_sea_lion_completed }	# if already did the focus, dont bother any more
				}
				set_variable = { ai_save_strength = 30 } log = "REI_ai_save_strength_sealion (30)"
			} else = { set_variable = { ai_save_strength = 30 }	log = "REI_ai_save_strength_sealion (0)" }
		}
	}
}

OSA_ai_save_strength_overlord_husky = {
	hidden_effect = {
		102 = {
			if = {
				limit = {
					check_variable = { world_stage_power > 5 }			# if it's too low, don't even try
				}
				if = {
					limit = {  has_global_flag = OSA_operaion_overlord_completed has_global_flag = OSA_operaion_husky_completed }	# save strength for both
					set_variable = { ai_save_strength = 60 } log = "OSA_ai_save_strength_overlord_husky (60)"
				} else_if = {
					limit = { OR = { has_global_flag = OSA_operaion_overlord_completed has_global_flag = OSA_operaion_husky_completed } }	# save strength for one
					set_variable = { ai_save_strength = 30 } log = "OSA_ai_save_strength_overlord_husky (30)"
				} else = {
					set_variable = { ai_save_strength = 0 } log = "OSA_ai_save_strength_overlord_husky (0)"
				}
			}
		}
	}
}

ai_save_strength_minimum = {
	set_variable = { ai_save_strength = 5 }	
}

### } EVENTS {

check_end_ww2_axis_defeated = {
	log = "check_end_ww2_axis_defeated"
	if = {
		limit = { has_global_flag = world_stage_world_war_2_is_active }	
		if = {
			limit = { has_global_flag = sovietunion_joined_ww2 }
			news_event = { id = worldstage_end.1 hours = 6 }
		} else = {
			news_event = { id = worldstage_end.3 hours = 6 }
		}
	} else_if = {
		limit = { has_global_flag = world_stage_world_war_3_is_active }
		news_event = { id = worldstage_end.5 hours = 6 }
	}
}
check_end_ww2_allies_defeated = {
	log = "check_end_ww2_allies_defeated"	# world_stage_world_war_2_is_active is always true here
	if = {
		limit = { has_global_flag = sovietunion_joined_ww2 }
		if = {
			limit = {
				102 = { has_state_flag = metropolis_capitulated }
				103 = { has_state_flag = metropolis_capitulated }
				104 = { has_state_flag = metropolis_capitulated }
			}
			news_event = { id = worldstage_end.2 hours = 6 }
		}
	} else = {
		if = {
			limit = {
				102 = { has_state_flag = metropolis_capitulated }
				103 = { has_state_flag = metropolis_capitulated }
			}
			news_event = { id = worldstage_end.4 hours = 6 }
		}
	}
}
check_end_ww2_komintern_defeated = {
	log = "check_end_ww2_komintern_defeated"
	if = {
		limit = { has_global_flag = world_stage_world_war_2_is_active }
		if = {
			limit = { has_global_flag = sovietunion_joined_ww2 }
			if = {
				limit = {
					102 = { has_state_flag = metropolis_capitulated }
					103 = { has_state_flag = metropolis_capitulated }
					104 = { has_state_flag = metropolis_capitulated }
				}
				news_event = { id = worldstage_end.2 hours = 6 }
			}
		}
	}
	if = {
		limit = { has_global_flag = world_stage_world_war_3_is_active }
		if = {
			limit = {
				104 = { has_state_flag = metropolis_capitulated }
			}
			news_event = { id = worldstage_end.6 hours = 6 }
		}
	}
}
### }

########################################################################
###       ###  #######    ########      ###       ###    #####       ###
###  ###  ###  ####### ###  ######  #######  ###  ### ###  ###  ########
###  ###  ###  ####### ####  ####  ########  ###  ### ####  ##      ####
###  ###  ###  ####### ###  ######  #######  ###  ### ###  ###  ########
###       ###      ###    #########     ###       ###    #####       ###
########################################################################

# aaaaaaaaaaaaaaaaaaaaaaand it's gone