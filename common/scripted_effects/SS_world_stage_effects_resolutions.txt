### THEATER RESOLUTIONS {
resolve_mongolian_crisis = {
	log = "resolve_mongolian_crisis"
	randomize_temp_variable = {	var = side_a_attack	distribution = uniform	min = 0.05 max = 0.2 }	# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { side_a_attack = global.AXIS_strength_mongolia_final }
	clamp_temp_variable = { var = side_a_attack min = 1 max = 999 }									# minimum 1 attack
	randomize_temp_variable = {	var = side_b_attack	distribution = uniform	min = 0.05 max = 0.2 }
	multiply_temp_variable = { side_b_attack = global.SOV_strength_mongolia_final }
	clamp_temp_variable = { var = side_b_attack min = 1 max = 999 }
	set_variable = { global.CHI_strength_trickleback = global.CHI_strength_mongolia }
	subtract_from_variable = { global.CHI_strength_trickleback = side_b_attack }
	set_variable = { global.SOV_strength_trickleback = global.SOV_strength_mongolia }
	subtract_from_variable = { global.SOV_strength_trickleback = side_a_attack }
	round_variable = global.CHI_strength_trickleback
	round_variable = global.SOV_strength_trickleback
	add_to_variable = {global.world_stage_power_chi = global.CHI_strength_trickleback } 
	add_to_variable = {global.world_stage_power_sov = global.SOV_strength_trickleback } 
	if = {
		limit = { check_variable = { global.AXIS_strength_mongolia_final > global.SOV_strength_mongolia_final } }
		multiply_variable = { global.AXIS_strength_mongolia_final = global.AXIS_strength_mongolia_final }
	} else = { multiply_variable = { global.SOV_strength_mongolia_final = global.SOV_strength_mongolia_final } }
	random_list = {
		var:global.AXIS_strength_mongolia_final = { country_event = worldstage.2 add_to_variable = {global.world_stage_power_chi = 5 } }
		var:global.SOV_strength_mongolia_final = { country_event = worldstage.3 add_to_variable = {global.world_stage_power_sov = 5 } }
	}
	clr_global_flag = world_stage_theater_mongolia_is_active_first	# CLEAR ALL UNECESSARY DATA (do not delete trickleback data! it's used for localisation)
	clear_variable = global.CHI_strength_mongolia
	clear_variable = global.CHI_strength_mongolia_bonus
	clear_variable = global.AXIS_strength_mongolia_final
	clear_variable = global.SOV_strength_mongolia
	clear_variable = global.SOV_strength_mongolia_bonus
	clear_variable = global.SOV_strength_mongolia_final
}	d_resolve_mongolian_crisis = { resolve_mongolian_crisis = yes }	# shortcut console command

resolve_spanish_cw = {
	log = "resolve_spanish_cw"
	randomize_temp_variable = {	var = side_a_attack	distribution = uniform	min = 0.05 max = 0.2 }	# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { side_a_attack = global.FAL_strength_spain_final }
	clamp_temp_variable = { var = side_a_attack min = 1 max = 999 }									# minimum 1 attack
	randomize_temp_variable = {	var = side_b_attack	distribution = uniform	min = 0.05 max = 0.2 }
	multiply_temp_variable = { side_b_attack = global.REP_strength_spain_final }
	clamp_temp_variable = { var = side_b_attack min = 1 max = 999 }		
	log = "attacks a/b: [?side_a_attack]/[?side_b_attack]"
	subtract_from_variable = { global.FAL_strength_spain = side_b_attack }							# each side hacks away at each other a bit
	subtract_from_variable = { global.FAL_strength_spain_bonus = side_b_attack }
	subtract_from_variable = { global.REP_strength_spain = side_a_attack }
	subtract_from_variable = { global.REP_strength_spain_bonus = side_a_attack }
	clamp_variable = { var = global.FAL_strength_spain_bonus min = 0 max = 999 }					# special rule: no negative bonus values allowed
	clamp_variable = { var = global.REP_strength_spain_bonus min = 0 max = 999 }
	if = {
		limit = { OR = { check_variable = { global.FAL_strength_spain < 1 } check_variable = { global.REP_strength_spain < 1 } } }	# one of the sides is destroyed, ends theater (only deployed strength counts here!)
		set_global_flag = world_stage_spanish_cw_over
		if = {
			limit = {
				check_variable = {  global.FAL_strength_spain >  global.REP_strength_spain }	# FAL > REP -> FAL WINS!
			}
			set_variable = { global.FAL_strength_trickleback = global.FAL_strength_spain }		# already diminished after each side hacked each other
			clamp_variable = { var = global.FAL_strength_trickleback min = 1 max = 999 }	# at least someone survives
			round_variable = global.FAL_strength_trickleback
			set_variable = { global.REP_strength_trickleback = 0 }								# if he dies, he dies...
			clr_global_flag = world_stage_theater_spanish_cw_is_active							# finishes theater and clear unecessary data
			clear_variable = global.FAL_strength_spain
			clear_variable = global.FAL_strength_spain_bonus
			clear_variable = global.FAL_strength_spain_final
			clear_variable = global.REP_strength_spain
			clear_variable = global.REP_strength_spain_bonus
			clear_variable = global.REP_strength_spain_final
			news_event = worldstage.12
			log = "spain: FAL WINS"
		} else = {																				# REP > FAL -> REP WINS!
			set_variable = { global.FAL_strength_trickleback = 0 }								# if he dies, he dies...
			set_variable = { global.REP_strength_trickleback = global.REP_strength_spain }		# already diminished after each side hacked each other
			clamp_variable = { var = global.REP_strength_trickleback min = 1 max = 999 }		# at least someone survives
			round_variable = global.REP_strength_trickleback
			clr_global_flag = world_stage_theater_spanish_cw_is_active							# finishes theater and clear unecessary data
			clear_variable = global.FAL_strength_spain
			clear_variable = global.FAL_strength_spain_bonus
			clear_variable = global.FAL_strength_spain_final
			clear_variable = global.REP_strength_spain
			clear_variable = global.REP_strength_spain_bonus
			clear_variable = global.REP_strength_spain_final
			news_event = worldstage.13
			log = "spain: REP WINS"
		}
	} else = {	# else: theater continues
		set_variable = { global.theater_spanish_cw_timer = 180 }								# restarts clock
		world_stage_get_spanish_cw_timer_frame = yes
		round_variable = global.FAL_strength_spain
		round_variable = global.FAL_strength_spain_bonus										# no strategic advantages here! (usual: each 'turn' halves the strategic advantages of both sides)
		round_variable = global.REP_strength_spain
		round_variable = global.REP_strength_spain_bonus
		set_variable = { global.FAL_strength_spain_final = global.FAL_strength_spain }			# recalculate final strength so tooltips dont get messy after a draw
		add_to_variable = { global.FAL_strength_spain_final = global.FAL_strength_spain_bonus }
		set_variable = { global.REP_strength_spain_final = global.REP_strength_spain }
		add_to_variable = { global.REP_strength_spain_final = global.REP_strength_spain_bonus }
		news_event = worldstage.11
		log = "spain: no winner"
	}
}	d_resolve_spanish_cw = { resolve_spanish_cw = yes }	# shortcut console command

resolve_theater_poland_first = {
	log = "resolve_theater_poland_first"
	randomize_temp_variable = {	var = side_a_attack	distribution = uniform	min = 0.05 max = 0.2 }	# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { side_a_attack = global.GER_strength_poland_final }
	clamp_temp_variable = { var = side_a_attack min = 1 max = 999 }									# minimum 1 attack
	randomize_temp_variable = {	var = side_b_attack	distribution = uniform	min = 0.05 max = 0.2 }
	multiply_temp_variable = { side_b_attack = global.ENG_strength_poland_final }
	clamp_temp_variable = { var = side_b_attack min = 1 max = 999 }									# round poland's attack after (possibly) splitting it into GER and SOV
	if = {
		limit = { has_global_flag = GER_SOV_pact_enabled }											# special rule: double invasion of poland
		randomize_temp_variable = {	var = side_c_attack	distribution = uniform	min = 0.05 max = 2 }
		multiply_temp_variable = { side_c_attack = global.SOV_strength_spain_final }
		clamp_temp_variable = { var = side_c_attack min = 1 max = 999 }
		add_to_temp_variable = { side_a_attack = side_c_attack }
		divide_temp_variable = { side_b_attack = 2 }												# each side takes half the damage
		clamp_temp_variable = { var = side_b_attack min = 1 max = 999 }
		subtract_from_variable = { global.SOV_strength_poland = side_b_attack }	
	}
	subtract_from_variable = { global.GER_strength_poland = side_b_attack }							# each side hacks away at each other a bit
	subtract_from_variable = { global.ALLIES_locals_poland = side_a_attack }
	if = {
		limit = {  has_global_flag = GER_SOV_pact_enabled }
		subtract_from_variable = { global.SOV_strength_poland = side_b_attack }
	}
	if = {
		limit = {
			OR = {
				check_variable = { global.ALLIES_locals_poland < 1 }			# special rule: theater only ends when poland loses, (only deployed strength counts here!) (usual: one of the sides is destroyed, ends theater)
				AND = { check_variable = { global.ALLIES_locals_poland < 5.1 } has_global_flag = GER_SOV_pact_enabled }	# if double invasion is minimally competent, it is over in one turn
			}
		}
		if = {
			limit = {
				check_variable = {  global.GER_strength_poland >  global.ALLIES_locals_poland }	# GER > ENG -> GER WINS!
			}
			set_variable = { global.GER_strength_trickleback = global.GER_strength_poland }		# already diminished after each side hacked each other
			clamp_variable = { var = global.GER_strength_trickleback min = 1 max = 999 }		# at least someone survives
			round_variable = global.GER_strength_trickleback
			add_to_variable =  {global.world_stage_power_ger = global.GER_strength_trickleback } 
			set_variable = { global.ENG_strength_trickleback = 0 }								# if he dies, he dies...
			clr_global_flag = world_stage_theater_poland_is_active_first						# finishes theater and clear unecessary data
			set_variable = { global.GER_strength_poland = 0 }
			set_variable = { global.GER_strength_poland_bonus = 0 }								# do not clear... we'll be back here soon
			if = {
				limit = { has_global_flag = GER_SOV_pact_enabled }
				set_variable = { global.SOV_strength_trickleback = global.SOV_strength_poland }	# already diminished after each side hacked each other
				clamp_variable = { var = global.SOV_strength_trickleback min = 1 max = 999 }	# at least someone survives
				round_variable = global.SOV_strength_trickleback
				set_variable = { global.SOV_strength_poland = 0 }
				set_variable = { global.SOV_strength_poland_bonus = 0 }
				news_event = worldstage.19
			} else = { news_event = worldstage.18 }
			set_variable = { global.ALLIES_locals_poland = 0 }
			set_variable = { global.ALLIES_strength_poland_bonus = 0 }
			set_variable = { global.ALLIES_strength_poland_final = 0 }
			log = "poland: GER WINS"
		}#  else = 																				# no elses here, GER never loses, only gets delayed
	} else = {																					# else: theater continues
		set_variable = { global.theater_poland_timer_first = 35 }										# restarts clock
		world_stage_get_poland_timer_frame = yes
		round_variable = global.GER_strength_poland
		divide_variable = { global.GER_strength_poland_bonus = 2 }								# each 'turn' halves the strategic advantages of both sides
		round_variable = global.GER_strength_poland_bonus
		round_variable = global.ALLIES_locals_poland
		divide_variable = { global.ALLIES_locals_poland_bonus = 2 }
		round_variable = global.ALLIES_locals_poland_bonus
		set_variable = { global.GER_strength_poland_final = global.GER_strength_poland }		# recalculate final strength so tooltips dont get messy after a draw
		add_to_variable = { global.GER_strength_poland_final = global.GER_strength_poland_bonus }
		set_variable = { global.ALLIES_locals_poland_final = global.ALLIES_locals_poland }
		add_to_variable = { global.ALLIES_locals_poland_final = global.ALLIES_locals_poland_bonus }
		country_event = worldstage.17
		if = {
			limit = { has_global_flag = GER_SOV_pact_enabled }
			round_variable = global.SOV_strength_poland
			divide_variable = { global.SOV_strength_poland_bonus = 2 }
			round_variable = global.SOV_strength_poland_bonus
			set_variable = { global.SOV_strength_poland_final = global.SOV_strength_poland }
			add_to_variable = { global.SOV_strength_poland_final = global.SOV_strength_poland_bonus }			
		}
		log = "poland: no winner"
	}
} d_resolve_theater_poland_first = { resolve_theater_poland_first = yes }

resolve_threater_poland_second = {
	log = "resolve_threater_poland_second"
	clamp_variable = { var = global.AXIS_number_poland min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_poland min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_poland_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_poland }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_poland_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_poland }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_poland > 0 } }
		subtract_from_variable = { global.GER_strength_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_poland }
		clamp_variable = {var = global.GER_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_poland > 0 } }
		subtract_from_variable = { global.CHI_strength_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_poland }
		clamp_variable = {var = global.CHI_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_poland > 0 } }
		subtract_from_variable = { global.NET_strength_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_poland }
		clamp_variable = {var = global.NET_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_poland > 0 } }
		subtract_from_variable = { global.PRT_strength_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_poland }
		clamp_variable = {var = global.PRT_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_poland > 0 } }
		subtract_from_variable = { global.AXIS_locals_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_poland }
		clamp_variable = {var = global.AXIS_locals_poland min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_poland > 0 } }
		subtract_from_variable = { global.FRA_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_poland }
		clamp_variable = {var = global.FRA_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_poland > 0 } }
		subtract_from_variable = { global.ENG_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_poland }
		clamp_variable = {var = global.ENG_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_poland > 0 } }
		subtract_from_variable = { global.NET_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_poland }
		clamp_variable = {var = global.NET_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_poland > 0 } }
		subtract_from_variable = { global.PRT_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_poland }
		clamp_variable = {var = global.PRT_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_poland > 0 } }
		subtract_from_variable = { global.CHI_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_poland }
		clamp_variable = {var = global.CHI_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_poland > 0 } }
		subtract_from_variable = { global.SOV_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_poland }
		 clamp_variable = {var = global.SOV_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_poland > 0 } }
		subtract_from_variable = { global.USA_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_poland }
		clamp_variable = {var = global.USA_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_poland > 0 } }
		subtract_from_variable = { global.ALLIES_locals_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_poland }
		clamp_variable = {var = global.ALLIES_locals_poland min = 0 max = 999 }
	}
	# resolves in one turn
	random_list = {
		var:global.AXIS_strength_poland_final = { country_event = worldstage.37 }
		var:global.ALLIES_strength_poland_final = { country_event = worldstage.38 }
	}
	clr_global_flag = world_stage_theater_poland_is_active_second
	set_variable = { global.theater_poland_timer_second = 14 }																	# always restarts clock
}	d_resolve_threater_poland_second = { resolve_threater_poland_second = yes }	

resolve_threater_ardennes = {
	log = "resolve_threater_ardennes"
	randomize_temp_variable = {	var = side_a_attack	distribution = uniform	min = 0.05 max = 0.2 }	# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { side_a_attack = global.GER_strength_ardennes_final }
	set_temp_variable = { number_of_allies  = 0 }
	if = { limit = { check_variable  = { global.ENG_strength_ardennes > 0 } add_to_variable = { number_of_allies = 1 } } }
	if = { limit = { check_variable  = { global.FRA_strength_ardennes > 0 } add_to_variable = { number_of_allies = 1 } } }
	if = { limit = { check_variable  = { global.USA_strength_ardennes > 0 } add_to_variable = { number_of_allies = 1 } } }
	clamp_temp_variable = { var = number_of_allies min = 1 max = 3 }								
	divide_temp_variable = { side_a_attack = number_of_allies }
	clamp_temp_variable = { var = side_a_attack min = 1 max = 999 }									# minimum 1 attack
	randomize_temp_variable = {	var = side_b_attack	distribution = uniform	min = 0.05 max = 0.2 }
	multiply_temp_variable = { side_b_attack = global.FRA_strength_ardennes_final }
	clamp_temp_variable = { var = side_b_attack min = 1 max = 999 }
	set_variable = { global.GER_strength_trickleback = global.GER_strength_ardennes }
	subtract_from_variable = { global.GER_strength_trickleback = side_b_attack }
	set_variable = { global.FRA_strength_trickleback = global.FRA_strength_ardennes }
	subtract_from_variable = { global.FRA_strength_trickleback = side_a_attack }
	round_variable = global.GER_strength_trickleback
	round_variable = global.FRA_strength_trickleback 
	multiply_variable = { global.GER_strength_ardennes_final = global.GER_strength_ardennes_final }
	multiply_variable = { global.FRA_strength_ardennes_final = global.FRA_strength_ardennes_final }
	random_list = {
		var:global.GER_strength_ardennes_final = { country_event = worldstage.25 }	# France Falls
		var:global.FRA_strength_ardennes_final = { country_event = worldstage.26 }	# France Resists
	}
	add_to_variable = { global.world_stage_power_ger = global.GER_strength_trickleback } 
	add_to_variable = { global.world_stage_power_fra = global.FRA_strength_trickleback }
	clr_global_flag = world_stage_theater_ardennes_is_active	# CLEAR ALL UNECESSARY DATA (do not delete trickleback data! it's used for localisation)
	clear_variable = global.GER_strength_ardennes
	clear_variable = global.GER_strength_ardennes_bonus
	clear_variable = global.GER_strength_ardennes_final
	clear_variable = global.FRA_strength_ardennes
	clear_variable = global.FRA_strength_ardennes_bonus
	clear_variable = global.FRA_strength_ardennes_final
}	d_resolve_threater_ardennes = { resolve_threater_ardennes = yes }	# shortcut console command

### REGULAR THEATERS
resolve_threater_alsace = {
	log = "resolve_threater_alsace"
	clamp_variable = { var = global.AXIS_number_alsace min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_alsace min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_alsace_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_alsace }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_alsace_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_alsace }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_alsace > 0 } }
		subtract_from_variable = { global.GER_strength_alsace = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_alsace }
		clamp_variable = {var = global.GER_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_alsace > 0 } }
		subtract_from_variable = { global.CHI_strength_alsace = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_alsace }
		clamp_variable = {var = global.CHI_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_alsace > 0 } }
		subtract_from_variable = { global.NET_strength_alsace = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_alsace }
		clamp_variable = {var = global.NET_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_alsace > 0 } }
		subtract_from_variable = { global.PRT_strength_alsace = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_alsace }
		clamp_variable = {var = global.PRT_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_alsace > 0 } }
		subtract_from_variable = { global.AXIS_locals_alsace = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_alsace }
		clamp_variable = {var = global.AXIS_locals_alsace min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_alsace > 0 } }
		subtract_from_variable = { global.FRA_strength_alsace = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_alsace }
		clamp_variable = {var = global.FRA_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_alsace > 0 } }
		subtract_from_variable = { global.ENG_strength_alsace = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_alsace }
		clamp_variable = {var = global.ENG_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_alsace > 0 } }
		subtract_from_variable = { global.NET_strength_alsace = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_alsace }
		clamp_variable = {var = global.NET_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_alsace > 0 } }
		subtract_from_variable = { global.PRT_strength_alsace = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_alsace }
		clamp_variable = {var = global.PRT_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_alsace > 0 } }
		subtract_from_variable = { global.CHI_strength_alsace = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_alsace }
		clamp_variable = {var = global.CHI_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_alsace > 0 } }
		subtract_from_variable = { global.SOV_strength_alsace = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_alsace }
		 clamp_variable = {var = global.SOV_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_alsace > 0 } }
		subtract_from_variable = { global.USA_strength_alsace = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_alsace }
		clamp_variable = {var = global.USA_strength_alsace min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_alsace > 0 } }
		subtract_from_variable = { global.ALLIES_locals_alsace = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_alsace }
		clamp_variable = {var = global.ALLIES_locals_alsace min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_alsace.1
		} else = {																										# ALLIES wins
			news_event = worldstage_alsace.2
		}
		set_variable = { global.AXIS_strength_alsace_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_alsace_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_alsace_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_alsace_bonus 
		divide_variable = { global.ALLIES_strength_alsace_bonus = 2 }
		round_variable = global.ALLIES_strength_alsace_bonus 
	}
	set_variable = { global.theater_alsace_timer = 60 }																	# always restarts clock
}	d_resolve_threater_alsace = { resolve_threater_alsace = yes }														# shortcut console command

resolve_threater_westphalia = {
	log = "resolve_threater_westphalia"
	clamp_variable = { var = global.AXIS_number_westphalia min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_westphalia min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_westphalia_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_westphalia }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_westphalia_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_westphalia }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_westphalia > 0 } }
		subtract_from_variable = { global.GER_strength_westphalia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_westphalia }
		clamp_variable = {var = global.GER_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_westphalia > 0 } }
		subtract_from_variable = { global.CHI_strength_westphalia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_westphalia }
		clamp_variable = {var = global.CHI_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_westphalia > 0 } }
		subtract_from_variable = { global.NET_strength_westphalia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_westphalia }
		clamp_variable = {var = global.NET_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_westphalia > 0 } }
		subtract_from_variable = { global.PRT_strength_westphalia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_westphalia }
		clamp_variable = {var = global.PRT_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_westphalia > 0 } }
		subtract_from_variable = { global.AXIS_locals_westphalia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_westphalia }
		clamp_variable = {var = global.AXIS_locals_westphalia min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_westphalia > 0 } }
		subtract_from_variable = { global.FRA_strength_westphalia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_westphalia }
		clamp_variable = {var = global.FRA_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_westphalia > 0 } }
		subtract_from_variable = { global.ENG_strength_westphalia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_westphalia }
		clamp_variable = {var = global.ENG_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_westphalia > 0 } }
		subtract_from_variable = { global.NET_strength_westphalia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_westphalia }
		clamp_variable = {var = global.NET_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_westphalia > 0 } }
		subtract_from_variable = { global.PRT_strength_westphalia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_westphalia }
		clamp_variable = {var = global.PRT_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_westphalia > 0 } }
		subtract_from_variable = { global.CHI_strength_westphalia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_westphalia }
		clamp_variable = {var = global.CHI_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_westphalia > 0 } }
		subtract_from_variable = { global.SOV_strength_westphalia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_westphalia }
		 clamp_variable = {var = global.SOV_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_westphalia > 0 } }
		subtract_from_variable = { global.USA_strength_westphalia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_westphalia }
		clamp_variable = {var = global.USA_strength_westphalia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_westphalia > 0 } }
		subtract_from_variable = { global.ALLIES_locals_westphalia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_westphalia }
		clamp_variable = {var = global.ALLIES_locals_westphalia min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_westphalia.1
		} else = {																										# ALLIES wins
			news_event = worldstage_westphalia.2
		}
		set_variable = { global.AXIS_strength_westphalia_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_westphalia_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_westphalia_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_westphalia_bonus 
		divide_variable = { global.ALLIES_strength_westphalia_bonus = 2 }
		round_variable = global.ALLIES_strength_westphalia_bonus 
	}
	set_variable = { global.theater_westphalia_timer = 60 }																	# always restarts clock
}	d_resolve_threater_westphalia = { resolve_threater_westphalia = yes }														# shortcut console command

resolve_threater_france = {
	log = "resolve_threater_france"
	clamp_variable = { var = global.AXIS_number_france min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_france min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_france_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_france }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_france_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_france }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_france > 0 } }
		subtract_from_variable = { global.GER_strength_france = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_france }
		clamp_variable = {var = global.GER_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_france > 0 } }
		subtract_from_variable = { global.CHI_strength_france = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_france }
		clamp_variable = {var = global.CHI_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_france > 0 } }
		subtract_from_variable = { global.NET_strength_france = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_france }
		clamp_variable = {var = global.NET_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_france > 0 } }
		subtract_from_variable = { global.PRT_strength_france = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_france }
		clamp_variable = {var = global.PRT_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_france > 0 } }
		subtract_from_variable = { global.AXIS_locals_france = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_france }
		clamp_variable = {var = global.AXIS_locals_france min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_france > 0 } }
		subtract_from_variable = { global.FRA_strength_france = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_france }
		clamp_variable = {var = global.FRA_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_france > 0 } }
		subtract_from_variable = { global.ENG_strength_france = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_france }
		clamp_variable = {var = global.ENG_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_france > 0 } }
		subtract_from_variable = { global.NET_strength_france = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_france }
		clamp_variable = {var = global.NET_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_france > 0 } }
		subtract_from_variable = { global.PRT_strength_france = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_france }
		clamp_variable = {var = global.PRT_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_france > 0 } }
		subtract_from_variable = { global.CHI_strength_france = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_france }
		clamp_variable = {var = global.CHI_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_france > 0 } }
		subtract_from_variable = { global.SOV_strength_france = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_france }
		 clamp_variable = {var = global.SOV_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_france > 0 } }
		subtract_from_variable = { global.USA_strength_france = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_france }
		clamp_variable = {var = global.USA_strength_france min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_france > 0 } }
		subtract_from_variable = { global.ALLIES_locals_france = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_france }
		clamp_variable = {var = global.ALLIES_locals_france min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_france.1
		} else = {																										# ALLIES wins
			news_event = worldstage_france.2
		}
		set_variable = { global.AXIS_strength_france_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_france_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_france_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_france_bonus 
		divide_variable = { global.ALLIES_strength_france_bonus = 2 }
		round_variable = global.ALLIES_strength_france_bonus 
	}
	set_variable = { global.theater_france_timer = 60 }																	# always restarts clock
}	d_resolve_threater_france = { resolve_threater_france = yes }														# shortcut console command

resolve_threater_germany = {
	log = "resolve_threater_germany"
	clamp_variable = { var = global.AXIS_number_germany min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_germany min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_germany_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_germany }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_germany_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_germany }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_germany > 0 } }
		subtract_from_variable = { global.GER_strength_germany = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_germany }
		clamp_variable = {var = global.GER_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_germany > 0 } }
		subtract_from_variable = { global.CHI_strength_germany = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_germany }
		clamp_variable = {var = global.CHI_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_germany > 0 } }
		subtract_from_variable = { global.NET_strength_germany = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_germany }
		clamp_variable = {var = global.NET_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_germany > 0 } }
		subtract_from_variable = { global.PRT_strength_germany = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_germany }
		clamp_variable = {var = global.PRT_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_germany > 0 } }
		subtract_from_variable = { global.AXIS_locals_germany = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_germany }
		clamp_variable = {var = global.AXIS_locals_germany min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_germany > 0 } }
		subtract_from_variable = { global.FRA_strength_germany = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_germany }
		clamp_variable = {var = global.FRA_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_germany > 0 } }
		subtract_from_variable = { global.ENG_strength_germany = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_germany }
		clamp_variable = {var = global.ENG_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_germany > 0 } }
		subtract_from_variable = { global.NET_strength_germany = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_germany }
		clamp_variable = {var = global.NET_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_germany > 0 } }
		subtract_from_variable = { global.PRT_strength_germany = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_germany }
		clamp_variable = {var = global.PRT_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_germany > 0 } }
		subtract_from_variable = { global.CHI_strength_germany = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_germany }
		clamp_variable = {var = global.CHI_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_germany > 0 } }
		subtract_from_variable = { global.SOV_strength_germany = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_germany }
		 clamp_variable = {var = global.SOV_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_germany > 0 } }
		subtract_from_variable = { global.USA_strength_germany = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_germany }
		clamp_variable = {var = global.USA_strength_germany min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_germany > 0 } }
		subtract_from_variable = { global.ALLIES_locals_germany = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_germany }
		clamp_variable = {var = global.ALLIES_locals_germany min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_germany.1
		} else = {																										# ALLIES wins
			news_event = worldstage_germany.2
		}
		set_variable = { global.AXIS_strength_germany_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_germany_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_germany_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_germany_bonus 
		divide_variable = { global.ALLIES_strength_germany_bonus = 2 }
		round_variable = global.ALLIES_strength_germany_bonus 
	}
	set_variable = { global.theater_germany_timer = 60 }																	# always restarts clock
}	d_resolve_threater_germany = { resolve_threater_germany = yes }														# shortcut console command

resolve_threater_poland = {
	log = "resolve_threater_poland"
	clamp_variable = { var = global.AXIS_number_poland min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_poland min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_poland_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_poland }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_poland_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_poland }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_poland > 0 } }
		subtract_from_variable = { global.GER_strength_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_poland }
		clamp_variable = {var = global.GER_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_poland > 0 } }
		subtract_from_variable = { global.CHI_strength_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_poland }
		clamp_variable = {var = global.CHI_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_poland > 0 } }
		subtract_from_variable = { global.NET_strength_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_poland }
		clamp_variable = {var = global.NET_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_poland > 0 } }
		subtract_from_variable = { global.PRT_strength_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_poland }
		clamp_variable = {var = global.PRT_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_poland > 0 } }
		subtract_from_variable = { global.AXIS_locals_poland = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_poland }
		clamp_variable = {var = global.AXIS_locals_poland min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_poland > 0 } }
		subtract_from_variable = { global.FRA_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_poland }
		clamp_variable = {var = global.FRA_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_poland > 0 } }
		subtract_from_variable = { global.ENG_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_poland }
		clamp_variable = {var = global.ENG_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_poland > 0 } }
		subtract_from_variable = { global.NET_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_poland }
		clamp_variable = {var = global.NET_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_poland > 0 } }
		subtract_from_variable = { global.PRT_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_poland }
		clamp_variable = {var = global.PRT_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_poland > 0 } }
		subtract_from_variable = { global.CHI_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_poland }
		clamp_variable = {var = global.CHI_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_poland > 0 } }
		subtract_from_variable = { global.SOV_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_poland }
		 clamp_variable = {var = global.SOV_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_poland > 0 } }
		subtract_from_variable = { global.USA_strength_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_poland }
		clamp_variable = {var = global.USA_strength_poland min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_poland > 0 } }
		subtract_from_variable = { global.ALLIES_locals_poland = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_poland }
		clamp_variable = {var = global.ALLIES_locals_poland min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_poland.1
		} else = {																										# ALLIES wins
			news_event = worldstage_poland.2
		}
		set_variable = { global.AXIS_strength_poland_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_poland_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_poland_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_poland_bonus 
		divide_variable = { global.ALLIES_strength_poland_bonus = 2 }
		round_variable = global.ALLIES_strength_poland_bonus 
	}
	set_variable = { global.theater_poland_timer = 60 }																	# always restarts clock
}	d_resolve_threater_poland = { resolve_threater_poland = yes }														# shortcut console command

resolve_threater_belarus = {
	log = "resolve_threater_belarus"
	clamp_variable = { var = global.AXIS_number_belarus min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_belarus min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_belarus_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_belarus }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_belarus_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_belarus }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_belarus > 0 } }
		subtract_from_variable = { global.GER_strength_belarus = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_belarus }
		clamp_variable = {var = global.GER_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_belarus > 0 } }
		subtract_from_variable = { global.CHI_strength_belarus = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_belarus }
		clamp_variable = {var = global.CHI_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_belarus > 0 } }
		subtract_from_variable = { global.NET_strength_belarus = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_belarus }
		clamp_variable = {var = global.NET_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_belarus > 0 } }
		subtract_from_variable = { global.PRT_strength_belarus = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_belarus }
		clamp_variable = {var = global.PRT_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_belarus > 0 } }
		subtract_from_variable = { global.AXIS_locals_belarus = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_belarus }
		clamp_variable = {var = global.AXIS_locals_belarus min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_belarus > 0 } }
		subtract_from_variable = { global.FRA_strength_belarus = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_belarus }
		clamp_variable = {var = global.FRA_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_belarus > 0 } }
		subtract_from_variable = { global.ENG_strength_belarus = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_belarus }
		clamp_variable = {var = global.ENG_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_belarus > 0 } }
		subtract_from_variable = { global.NET_strength_belarus = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_belarus }
		clamp_variable = {var = global.NET_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_belarus > 0 } }
		subtract_from_variable = { global.PRT_strength_belarus = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_belarus }
		clamp_variable = {var = global.PRT_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_belarus > 0 } }
		subtract_from_variable = { global.CHI_strength_belarus = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_belarus }
		clamp_variable = {var = global.CHI_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_belarus > 0 } }
		subtract_from_variable = { global.SOV_strength_belarus = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_belarus }
		 clamp_variable = {var = global.SOV_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_belarus > 0 } }
		subtract_from_variable = { global.USA_strength_belarus = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_belarus }
		clamp_variable = {var = global.USA_strength_belarus min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_belarus > 0 } }
		subtract_from_variable = { global.ALLIES_locals_belarus = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_belarus }
		clamp_variable = {var = global.ALLIES_locals_belarus min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_belarus.1
		} else = {																										# ALLIES wins
			news_event = worldstage_belarus.2
		}
		set_variable = { global.AXIS_strength_belarus_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_belarus_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_belarus_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_belarus_bonus 
		divide_variable = { global.ALLIES_strength_belarus_bonus = 2 }
		round_variable = global.ALLIES_strength_belarus_bonus 
	}
	set_variable = { global.theater_belarus_timer = 60 }																	# always restarts clock
}	d_resolve_threater_belarus = { resolve_threater_belarus = yes }														# shortcut console command

resolve_threater_smolensk = {
	log = "resolve_threater_smolensk"
	clamp_variable = { var = global.AXIS_number_smolensk min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_smolensk min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_smolensk_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_smolensk }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_smolensk_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_smolensk }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_smolensk > 0 } }
		subtract_from_variable = { global.GER_strength_smolensk = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_smolensk }
		clamp_variable = {var = global.GER_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_smolensk > 0 } }
		subtract_from_variable = { global.CHI_strength_smolensk = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_smolensk }
		clamp_variable = {var = global.CHI_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_smolensk > 0 } }
		subtract_from_variable = { global.NET_strength_smolensk = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_smolensk }
		clamp_variable = {var = global.NET_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_smolensk > 0 } }
		subtract_from_variable = { global.PRT_strength_smolensk = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_smolensk }
		clamp_variable = {var = global.PRT_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_smolensk > 0 } }
		subtract_from_variable = { global.AXIS_locals_smolensk = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_smolensk }
		clamp_variable = {var = global.AXIS_locals_smolensk min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_smolensk > 0 } }
		subtract_from_variable = { global.FRA_strength_smolensk = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_smolensk }
		clamp_variable = {var = global.FRA_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_smolensk > 0 } }
		subtract_from_variable = { global.ENG_strength_smolensk = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_smolensk }
		clamp_variable = {var = global.ENG_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_smolensk > 0 } }
		subtract_from_variable = { global.NET_strength_smolensk = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_smolensk }
		clamp_variable = {var = global.NET_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_smolensk > 0 } }
		subtract_from_variable = { global.PRT_strength_smolensk = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_smolensk }
		clamp_variable = {var = global.PRT_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_smolensk > 0 } }
		subtract_from_variable = { global.CHI_strength_smolensk = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_smolensk }
		clamp_variable = {var = global.CHI_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_smolensk > 0 } }
		subtract_from_variable = { global.SOV_strength_smolensk = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_smolensk }
		 clamp_variable = {var = global.SOV_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_smolensk > 0 } }
		subtract_from_variable = { global.USA_strength_smolensk = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_smolensk }
		clamp_variable = {var = global.USA_strength_smolensk min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_smolensk > 0 } }
		subtract_from_variable = { global.ALLIES_locals_smolensk = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_smolensk }
		clamp_variable = {var = global.ALLIES_locals_smolensk min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_smolensk.1
			log = "ger wins smolensk"
		} else = {																										# ALLIES wins
			news_event = worldstage_smolensk.2
			log = "sov wins smolensk"
		}
		set_variable = { global.AXIS_strength_smolensk_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_smolensk_bonus = 0 }
	} else = {																											# no one wins, theater continues
		log = "no one wins smolensk"
		divide_variable = { global.AXIS_strength_smolensk_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_smolensk_bonus 
		divide_variable = { global.ALLIES_strength_smolensk_bonus = 2 }
		round_variable = global.ALLIES_strength_smolensk_bonus 
	}
	set_variable = { global.theater_smolensk_timer = 60 }																	# always restarts clock
}	d_resolve_threater_smolensk = { resolve_threater_smolensk = yes }														# shortcut console command

resolve_threater_russia = {
	log = "resolve_threater_russia"
	clamp_variable = { var = global.AXIS_number_russia min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_russia min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_russia_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_russia }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_russia_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_russia }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_russia > 0 } }
		subtract_from_variable = { global.GER_strength_russia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_russia }
		clamp_variable = {var = global.GER_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_russia > 0 } }
		subtract_from_variable = { global.CHI_strength_russia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_russia }
		clamp_variable = {var = global.CHI_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_russia > 0 } }
		subtract_from_variable = { global.NET_strength_russia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_russia }
		clamp_variable = {var = global.NET_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_russia > 0 } }
		subtract_from_variable = { global.PRT_strength_russia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_russia }
		clamp_variable = {var = global.PRT_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_russia > 0 } }
		subtract_from_variable = { global.AXIS_locals_russia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_russia }
		clamp_variable = {var = global.AXIS_locals_russia min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_russia > 0 } }
		subtract_from_variable = { global.FRA_strength_russia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_russia }
		clamp_variable = {var = global.FRA_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_russia > 0 } }
		subtract_from_variable = { global.ENG_strength_russia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_russia }
		clamp_variable = {var = global.ENG_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_russia > 0 } }
		subtract_from_variable = { global.NET_strength_russia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_russia }
		clamp_variable = {var = global.NET_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_russia > 0 } }
		subtract_from_variable = { global.PRT_strength_russia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_russia }
		clamp_variable = {var = global.PRT_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_russia > 0 } }
		subtract_from_variable = { global.CHI_strength_russia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_russia }
		clamp_variable = {var = global.CHI_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_russia > 0 } }
		subtract_from_variable = { global.SOV_strength_russia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_russia }
		 clamp_variable = {var = global.SOV_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_russia > 0 } }
		subtract_from_variable = { global.USA_strength_russia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_russia }
		clamp_variable = {var = global.USA_strength_russia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_russia > 0 } }
		subtract_from_variable = { global.ALLIES_locals_russia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_russia }
		clamp_variable = {var = global.ALLIES_locals_russia min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_russia.1
		} else = {																										# ALLIES wins
			news_event = worldstage_russia.2
		}
		set_variable = { global.AXIS_strength_russia_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_russia_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_russia_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_russia_bonus 
		divide_variable = { global.ALLIES_strength_russia_bonus = 2 }
		round_variable = global.ALLIES_strength_russia_bonus 
	}
	set_variable = { global.theater_russia_timer = 60 }																	# always restarts clock
}	d_resolve_threater_russia = { resolve_threater_russia = yes }														# shortcut console command

resolve_threater_norway = {
	log = "resolve_threater_norway"
	clamp_variable = { var = global.AXIS_number_norway min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_norway min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_norway_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_norway }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_norway_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_norway }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_norway > 0 } }
		subtract_from_variable = { global.GER_strength_norway = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_norway }
		clamp_variable = {var = global.GER_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_norway > 0 } }
		subtract_from_variable = { global.CHI_strength_norway = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_norway }
		clamp_variable = {var = global.CHI_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_norway > 0 } }
		subtract_from_variable = { global.NET_strength_norway = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_norway }
		clamp_variable = {var = global.NET_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_norway > 0 } }
		subtract_from_variable = { global.PRT_strength_norway = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_norway }
		clamp_variable = {var = global.PRT_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_norway > 0 } }
		subtract_from_variable = { global.AXIS_locals_norway = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_norway }
		clamp_variable = {var = global.AXIS_locals_norway min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_norway > 0 } }
		subtract_from_variable = { global.FRA_strength_norway = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_norway }
		clamp_variable = {var = global.FRA_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_norway > 0 } }
		subtract_from_variable = { global.ENG_strength_norway = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_norway }
		clamp_variable = {var = global.ENG_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_norway > 0 } }
		subtract_from_variable = { global.NET_strength_norway = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_norway }
		clamp_variable = {var = global.NET_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_norway > 0 } }
		subtract_from_variable = { global.PRT_strength_norway = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_norway }
		clamp_variable = {var = global.PRT_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_norway > 0 } }
		subtract_from_variable = { global.CHI_strength_norway = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_norway }
		clamp_variable = {var = global.CHI_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_norway > 0 } }
		subtract_from_variable = { global.SOV_strength_norway = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_norway }
		 clamp_variable = {var = global.SOV_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_norway > 0 } }
		subtract_from_variable = { global.USA_strength_norway = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_norway }
		clamp_variable = {var = global.USA_strength_norway min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_norway > 0 } }
		subtract_from_variable = { global.ALLIES_locals_norway = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_norway }
		clamp_variable = {var = global.ALLIES_locals_norway min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_norway.1
		} else = {																										# ALLIES wins
			news_event = worldstage_norway.2
		}
		set_variable = { global.AXIS_strength_norway_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_norway_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_norway_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_norway_bonus 
		divide_variable = { global.ALLIES_strength_norway_bonus = 2 }
		round_variable = global.ALLIES_strength_norway_bonus 
	}
	set_variable = { global.theater_norway_timer = 60 }																	# always restarts clock
}	d_resolve_threater_norway = { resolve_threater_norway = yes }														# shortcut console command

resolve_threater_lybia = {
	log = "resolve_threater_lybia"
	clamp_variable = { var = global.AXIS_number_lybia min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_lybia min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_lybia_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_lybia }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_lybia_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_lybia }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_lybia > 0 } }
		subtract_from_variable = { global.GER_strength_lybia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_lybia }
		clamp_variable = {var = global.GER_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_lybia > 0 } }
		subtract_from_variable = { global.CHI_strength_lybia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_lybia }
		clamp_variable = {var = global.CHI_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_lybia > 0 } }
		subtract_from_variable = { global.NET_strength_lybia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_lybia }
		clamp_variable = {var = global.NET_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_lybia > 0 } }
		subtract_from_variable = { global.PRT_strength_lybia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_lybia }
		clamp_variable = {var = global.PRT_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_lybia > 0 } }
		subtract_from_variable = { global.AXIS_locals_lybia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_lybia }
		clamp_variable = {var = global.AXIS_locals_lybia min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_lybia > 0 } }
		subtract_from_variable = { global.FRA_strength_lybia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_lybia }
		clamp_variable = {var = global.FRA_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_lybia > 0 } }
		subtract_from_variable = { global.ENG_strength_lybia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_lybia }
		clamp_variable = {var = global.ENG_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_lybia > 0 } }
		subtract_from_variable = { global.NET_strength_lybia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_lybia }
		clamp_variable = {var = global.NET_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_lybia > 0 } }
		subtract_from_variable = { global.PRT_strength_lybia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_lybia }
		clamp_variable = {var = global.PRT_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_lybia > 0 } }
		subtract_from_variable = { global.CHI_strength_lybia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_lybia }
		clamp_variable = {var = global.CHI_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_lybia > 0 } }
		subtract_from_variable = { global.SOV_strength_lybia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_lybia }
		 clamp_variable = {var = global.SOV_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_lybia > 0 } }
		subtract_from_variable = { global.USA_strength_lybia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_lybia }
		clamp_variable = {var = global.USA_strength_lybia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_lybia > 0 } }
		subtract_from_variable = { global.ALLIES_locals_lybia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_lybia }
		clamp_variable = {var = global.ALLIES_locals_lybia min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_lybia.1
		} else = {																										# ALLIES wins
			news_event = worldstage_lybia.2
		}
		set_variable = { global.AXIS_strength_lybia_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_lybia_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_lybia_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_lybia_bonus 
		divide_variable = { global.ALLIES_strength_lybia_bonus = 2 }
		round_variable = global.ALLIES_strength_lybia_bonus 
	}
	set_variable = { global.theater_lybia_timer = 60 }																	# always restarts clock
}	d_resolve_threater_lybia = { resolve_threater_lybia = yes }														# shortcut console command

resolve_threater_ethiopia = {
	log = "resolve_threater_ethiopia"
	clamp_variable = { var = global.AXIS_number_ethiopia min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_ethiopia min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_ethiopia_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_ethiopia }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_ethiopia_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_ethiopia }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_ethiopia > 0 } }
		subtract_from_variable = { global.GER_strength_ethiopia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_ethiopia }
		clamp_variable = {var = global.GER_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_ethiopia > 0 } }
		subtract_from_variable = { global.CHI_strength_ethiopia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_ethiopia }
		clamp_variable = {var = global.CHI_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_ethiopia > 0 } }
		subtract_from_variable = { global.NET_strength_ethiopia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_ethiopia }
		clamp_variable = {var = global.NET_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_ethiopia > 0 } }
		subtract_from_variable = { global.PRT_strength_ethiopia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_ethiopia }
		clamp_variable = {var = global.PRT_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_ethiopia > 0 } }
		subtract_from_variable = { global.AXIS_locals_ethiopia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_ethiopia }
		clamp_variable = {var = global.AXIS_locals_ethiopia min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_ethiopia > 0 } }
		subtract_from_variable = { global.FRA_strength_ethiopia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_ethiopia }
		clamp_variable = {var = global.FRA_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_ethiopia > 0 } }
		subtract_from_variable = { global.ENG_strength_ethiopia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_ethiopia }
		clamp_variable = {var = global.ENG_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_ethiopia > 0 } }
		subtract_from_variable = { global.NET_strength_ethiopia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_ethiopia }
		clamp_variable = {var = global.NET_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_ethiopia > 0 } }
		subtract_from_variable = { global.PRT_strength_ethiopia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_ethiopia }
		clamp_variable = {var = global.PRT_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_ethiopia > 0 } }
		subtract_from_variable = { global.CHI_strength_ethiopia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_ethiopia }
		clamp_variable = {var = global.CHI_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_ethiopia > 0 } }
		subtract_from_variable = { global.SOV_strength_ethiopia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_ethiopia }
		 clamp_variable = {var = global.SOV_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_ethiopia > 0 } }
		subtract_from_variable = { global.USA_strength_ethiopia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_ethiopia }
		clamp_variable = {var = global.USA_strength_ethiopia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_ethiopia > 0 } }
		subtract_from_variable = { global.ALLIES_locals_ethiopia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_ethiopia }
		clamp_variable = {var = global.ALLIES_locals_ethiopia min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_ethiopia.1
		} else = {																										# ALLIES wins
			news_event = worldstage_ethiopia.2
		}
		set_variable = { global.AXIS_strength_ethiopia_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_ethiopia_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_ethiopia_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_ethiopia_bonus 
		divide_variable = { global.ALLIES_strength_ethiopia_bonus = 2 }
		round_variable = global.ALLIES_strength_ethiopia_bonus 
	}
	set_variable = { global.theater_ethiopia_timer = 60 }																	# always restarts clock
}	d_resolve_threater_ethiopia = { resolve_threater_ethiopia = yes }														# shortcut console command

resolve_threater_egypt = {
	log = "resolve_threater_egypt"
	clamp_variable = { var = global.AXIS_number_egypt min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_egypt min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_egypt_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_egypt }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_egypt_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_egypt }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_egypt > 0 } }
		subtract_from_variable = { global.GER_strength_egypt = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_egypt }
		clamp_variable = {var = global.GER_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_egypt > 0 } }
		subtract_from_variable = { global.CHI_strength_egypt = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_egypt }
		clamp_variable = {var = global.CHI_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_egypt > 0 } }
		subtract_from_variable = { global.NET_strength_egypt = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_egypt }
		clamp_variable = {var = global.NET_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_egypt > 0 } }
		subtract_from_variable = { global.PRT_strength_egypt = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_egypt }
		clamp_variable = {var = global.PRT_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_egypt > 0 } }
		subtract_from_variable = { global.AXIS_locals_egypt = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_egypt }
		clamp_variable = {var = global.AXIS_locals_egypt min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_egypt > 0 } }
		subtract_from_variable = { global.FRA_strength_egypt = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_egypt }
		clamp_variable = {var = global.FRA_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_egypt > 0 } }
		subtract_from_variable = { global.ENG_strength_egypt = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_egypt }
		clamp_variable = {var = global.ENG_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_egypt > 0 } }
		subtract_from_variable = { global.NET_strength_egypt = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_egypt }
		clamp_variable = {var = global.NET_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_egypt > 0 } }
		subtract_from_variable = { global.PRT_strength_egypt = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_egypt }
		clamp_variable = {var = global.PRT_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_egypt > 0 } }
		subtract_from_variable = { global.CHI_strength_egypt = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_egypt }
		clamp_variable = {var = global.CHI_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_egypt > 0 } }
		subtract_from_variable = { global.SOV_strength_egypt = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_egypt }
		 clamp_variable = {var = global.SOV_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_egypt > 0 } }
		subtract_from_variable = { global.USA_strength_egypt = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_egypt }
		clamp_variable = {var = global.USA_strength_egypt min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_egypt > 0 } }
		subtract_from_variable = { global.ALLIES_locals_egypt = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_egypt }
		clamp_variable = {var = global.ALLIES_locals_egypt min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_egypt.1
		} else = {																										# ALLIES wins
			news_event = worldstage_egypt.2
		}
		set_variable = { global.AXIS_strength_egypt_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_egypt_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_egypt_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_egypt_bonus 
		divide_variable = { global.ALLIES_strength_egypt_bonus = 2 }
		round_variable = global.ALLIES_strength_egypt_bonus 
	}
	set_variable = { global.theater_egypt_timer = 60 }																	# always restarts clock
}	d_resolve_threater_egypt = { resolve_threater_egypt = yes }														# shortcut console command

resolve_threater_sicily = {
	log = "resolve_threater_sicily"
	clamp_variable = { var = global.AXIS_number_sicily min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_sicily min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_sicily_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_sicily }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_sicily_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_sicily }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_sicily > 0 } }
		subtract_from_variable = { global.GER_strength_sicily = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_sicily }
		clamp_variable = {var = global.GER_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_sicily > 0 } }
		subtract_from_variable = { global.CHI_strength_sicily = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_sicily }
		clamp_variable = {var = global.CHI_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_sicily > 0 } }
		subtract_from_variable = { global.NET_strength_sicily = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_sicily }
		clamp_variable = {var = global.NET_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_sicily > 0 } }
		subtract_from_variable = { global.PRT_strength_sicily = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_sicily }
		clamp_variable = {var = global.PRT_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_sicily > 0 } }
		subtract_from_variable = { global.AXIS_locals_sicily = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_sicily }
		clamp_variable = {var = global.AXIS_locals_sicily min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_sicily > 0 } }
		subtract_from_variable = { global.FRA_strength_sicily = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_sicily }
		clamp_variable = {var = global.FRA_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_sicily > 0 } }
		subtract_from_variable = { global.ENG_strength_sicily = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_sicily }
		clamp_variable = {var = global.ENG_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_sicily > 0 } }
		subtract_from_variable = { global.NET_strength_sicily = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_sicily }
		clamp_variable = {var = global.NET_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_sicily > 0 } }
		subtract_from_variable = { global.PRT_strength_sicily = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_sicily }
		clamp_variable = {var = global.PRT_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_sicily > 0 } }
		subtract_from_variable = { global.CHI_strength_sicily = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_sicily }
		clamp_variable = {var = global.CHI_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_sicily > 0 } }
		subtract_from_variable = { global.SOV_strength_sicily = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_sicily }
		 clamp_variable = {var = global.SOV_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_sicily > 0 } }
		subtract_from_variable = { global.USA_strength_sicily = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_sicily }
		clamp_variable = {var = global.USA_strength_sicily min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_sicily > 0 } }
		subtract_from_variable = { global.ALLIES_locals_sicily = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_sicily }
		clamp_variable = {var = global.ALLIES_locals_sicily min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_sicily.1
		} else = {																										# ALLIES wins
			news_event = worldstage_sicily.2
		}
		set_variable = { global.AXIS_strength_sicily_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_sicily_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_sicily_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_sicily_bonus 
		divide_variable = { global.ALLIES_strength_sicily_bonus = 2 }
		round_variable = global.ALLIES_strength_sicily_bonus 
	}
	set_variable = { global.theater_sicily_timer = 60 }																	# always restarts clock
}	d_resolve_threater_sicily = { resolve_threater_sicily = yes }														# shortcut console command

resolve_threater_italy = {
	log = "resolve_threater_italy"
	clamp_variable = { var = global.AXIS_number_italy min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_italy min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_italy_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_italy }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_italy_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_italy }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_italy > 0 } }
		subtract_from_variable = { global.GER_strength_italy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_italy }
		clamp_variable = {var = global.GER_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_italy > 0 } }
		subtract_from_variable = { global.CHI_strength_italy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_italy }
		clamp_variable = {var = global.CHI_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_italy > 0 } }
		subtract_from_variable = { global.NET_strength_italy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_italy }
		clamp_variable = {var = global.NET_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_italy > 0 } }
		subtract_from_variable = { global.PRT_strength_italy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_italy }
		clamp_variable = {var = global.PRT_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_italy > 0 } }
		subtract_from_variable = { global.AXIS_locals_italy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_italy }
		clamp_variable = {var = global.AXIS_locals_italy min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_italy > 0 } }
		subtract_from_variable = { global.FRA_strength_italy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_italy }
		clamp_variable = {var = global.FRA_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_italy > 0 } }
		subtract_from_variable = { global.ENG_strength_italy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_italy }
		clamp_variable = {var = global.ENG_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_italy > 0 } }
		subtract_from_variable = { global.NET_strength_italy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_italy }
		clamp_variable = {var = global.NET_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_italy > 0 } }
		subtract_from_variable = { global.PRT_strength_italy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_italy }
		clamp_variable = {var = global.PRT_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_italy > 0 } }
		subtract_from_variable = { global.CHI_strength_italy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_italy }
		clamp_variable = {var = global.CHI_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_italy > 0 } }
		subtract_from_variable = { global.SOV_strength_italy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_italy }
		 clamp_variable = {var = global.SOV_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_italy > 0 } }
		subtract_from_variable = { global.USA_strength_italy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_italy }
		clamp_variable = {var = global.USA_strength_italy min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_italy > 0 } }
		subtract_from_variable = { global.ALLIES_locals_italy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_italy }
		clamp_variable = {var = global.ALLIES_locals_italy min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_italy.1
		} else = {																										# ALLIES wins
			news_event = worldstage_italy.2
		}
		set_variable = { global.AXIS_strength_italy_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_italy_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_italy_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_italy_bonus 
		divide_variable = { global.ALLIES_strength_italy_bonus = 2 }
		round_variable = global.ALLIES_strength_italy_bonus 
	}
	set_variable = { global.theater_italy_timer = 60 }																	# always restarts clock
}	d_resolve_threater_italy = { resolve_threater_italy = yes }														# shortcut console command

resolve_threater_siberia = {
	log = "resolve_threater_siberia"
	clamp_variable = { var = global.AXIS_number_siberia min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_siberia min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_siberia_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_siberia }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_siberia_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_siberia }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_siberia > 0 } }
		subtract_from_variable = { global.GER_strength_siberia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_siberia }
		clamp_variable = {var = global.GER_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_siberia > 0 } }
		subtract_from_variable = { global.CHI_strength_siberia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_siberia }
		clamp_variable = {var = global.CHI_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_siberia > 0 } }
		subtract_from_variable = { global.NET_strength_siberia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_siberia }
		clamp_variable = {var = global.NET_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_siberia > 0 } }
		subtract_from_variable = { global.PRT_strength_siberia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_siberia }
		clamp_variable = {var = global.PRT_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_siberia > 0 } }
		subtract_from_variable = { global.AXIS_locals_siberia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_siberia }
		clamp_variable = {var = global.AXIS_locals_siberia min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_siberia > 0 } }
		subtract_from_variable = { global.FRA_strength_siberia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_siberia }
		clamp_variable = {var = global.FRA_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_siberia > 0 } }
		subtract_from_variable = { global.ENG_strength_siberia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_siberia }
		clamp_variable = {var = global.ENG_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_siberia > 0 } }
		subtract_from_variable = { global.NET_strength_siberia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_siberia }
		clamp_variable = {var = global.NET_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_siberia > 0 } }
		subtract_from_variable = { global.PRT_strength_siberia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_siberia }
		clamp_variable = {var = global.PRT_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_siberia > 0 } }
		subtract_from_variable = { global.CHI_strength_siberia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_siberia }
		clamp_variable = {var = global.CHI_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_siberia > 0 } }
		subtract_from_variable = { global.SOV_strength_siberia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_siberia }
		 clamp_variable = {var = global.SOV_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_siberia > 0 } }
		subtract_from_variable = { global.USA_strength_siberia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_siberia }
		clamp_variable = {var = global.USA_strength_siberia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_siberia > 0 } }
		subtract_from_variable = { global.ALLIES_locals_siberia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_siberia }
		clamp_variable = {var = global.ALLIES_locals_siberia min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_siberia.1
		} else = {																										# ALLIES wins
			news_event = worldstage_siberia.2
		}
		set_variable = { global.AXIS_strength_siberia_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_siberia_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_siberia_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_siberia_bonus 
		divide_variable = { global.ALLIES_strength_siberia_bonus = 2 }
		round_variable = global.ALLIES_strength_siberia_bonus 
	}
	set_variable = { global.theater_siberia_timer = 60 }																	# always restarts clock
}	d_resolve_threater_siberia = { resolve_threater_siberia = yes }														# shortcut console command

resolve_threater_mongolia = {
	log = "resolve_threater_mongolia"
	clamp_variable = { var = global.AXIS_number_mongolia min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_mongolia min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_mongolia_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_mongolia }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_mongolia_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_mongolia }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_mongolia > 0 } }
		subtract_from_variable = { global.GER_strength_mongolia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_mongolia }
		clamp_variable = {var = global.GER_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_mongolia > 0 } }
		subtract_from_variable = { global.CHI_strength_mongolia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_mongolia }
		clamp_variable = {var = global.CHI_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_mongolia > 0 } }
		subtract_from_variable = { global.NET_strength_mongolia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_mongolia }
		clamp_variable = {var = global.NET_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_mongolia > 0 } }
		subtract_from_variable = { global.PRT_strength_mongolia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_mongolia }
		clamp_variable = {var = global.PRT_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_mongolia > 0 } }
		subtract_from_variable = { global.AXIS_locals_mongolia = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_mongolia }
		clamp_variable = {var = global.AXIS_locals_mongolia min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_mongolia > 0 } }
		subtract_from_variable = { global.FRA_strength_mongolia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_mongolia }
		clamp_variable = {var = global.FRA_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_mongolia > 0 } }
		subtract_from_variable = { global.ENG_strength_mongolia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_mongolia }
		clamp_variable = {var = global.ENG_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_mongolia > 0 } }
		subtract_from_variable = { global.NET_strength_mongolia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_mongolia }
		clamp_variable = {var = global.NET_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_mongolia > 0 } }
		subtract_from_variable = { global.PRT_strength_mongolia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_mongolia }
		clamp_variable = {var = global.PRT_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_mongolia > 0 } }
		subtract_from_variable = { global.CHI_strength_mongolia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_mongolia }
		clamp_variable = {var = global.CHI_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_mongolia > 0 } }
		subtract_from_variable = { global.SOV_strength_mongolia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_mongolia }
		 clamp_variable = {var = global.SOV_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_mongolia > 0 } }
		subtract_from_variable = { global.USA_strength_mongolia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_mongolia }
		clamp_variable = {var = global.USA_strength_mongolia min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_mongolia > 0 } }
		subtract_from_variable = { global.ALLIES_locals_mongolia = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_mongolia }
		clamp_variable = {var = global.ALLIES_locals_mongolia min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_mongolia.1
		} else = {																										# ALLIES wins
			news_event = worldstage_mongolia.2
		}
		set_variable = { global.AXIS_strength_mongolia_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_mongolia_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_mongolia_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_mongolia_bonus 
		divide_variable = { global.ALLIES_strength_mongolia_bonus = 2 }
		round_variable = global.ALLIES_strength_mongolia_bonus 
	}
	set_variable = { global.theater_mongolia_timer = 60 }																	# always restarts clock
}	d_resolve_threater_mongolia = { resolve_threater_mongolia = yes }														# shortcut console command

resolve_threater_tibet = {
	log = "resolve_threater_tibet"
	clamp_variable = { var = global.AXIS_number_tibet min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_tibet min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_tibet_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_tibet }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_tibet_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_tibet }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_tibet > 0 } }
		subtract_from_variable = { global.GER_strength_tibet = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_tibet }
		clamp_variable = {var = global.GER_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_tibet > 0 } }
		subtract_from_variable = { global.CHI_strength_tibet = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_tibet }
		clamp_variable = {var = global.CHI_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_tibet > 0 } }
		subtract_from_variable = { global.NET_strength_tibet = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_tibet }
		clamp_variable = {var = global.NET_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_tibet > 0 } }
		subtract_from_variable = { global.PRT_strength_tibet = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_tibet }
		clamp_variable = {var = global.PRT_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_tibet > 0 } }
		subtract_from_variable = { global.AXIS_locals_tibet = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_tibet }
		clamp_variable = {var = global.AXIS_locals_tibet min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_tibet > 0 } }
		subtract_from_variable = { global.FRA_strength_tibet = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_tibet }
		clamp_variable = {var = global.FRA_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_tibet > 0 } }
		subtract_from_variable = { global.ENG_strength_tibet = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_tibet }
		clamp_variable = {var = global.ENG_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_tibet > 0 } }
		subtract_from_variable = { global.NET_strength_tibet = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_tibet }
		clamp_variable = {var = global.NET_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_tibet > 0 } }
		subtract_from_variable = { global.PRT_strength_tibet = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_tibet }
		clamp_variable = {var = global.PRT_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_tibet > 0 } }
		subtract_from_variable = { global.CHI_strength_tibet = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_tibet }
		clamp_variable = {var = global.CHI_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_tibet > 0 } }
		subtract_from_variable = { global.SOV_strength_tibet = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_tibet }
		 clamp_variable = {var = global.SOV_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_tibet > 0 } }
		subtract_from_variable = { global.USA_strength_tibet = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_tibet }
		clamp_variable = {var = global.USA_strength_tibet min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_tibet > 0 } }
		subtract_from_variable = { global.ALLIES_locals_tibet = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_tibet }
		clamp_variable = {var = global.ALLIES_locals_tibet min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_tibet.1
		} else = {																										# ALLIES wins
			news_event = worldstage_tibet.2
		}
		set_variable = { global.AXIS_strength_tibet_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_tibet_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_tibet_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_tibet_bonus 
		divide_variable = { global.ALLIES_strength_tibet_bonus = 2 }
		round_variable = global.ALLIES_strength_tibet_bonus 
	}
	set_variable = { global.theater_tibet_timer = 60 }																	# always restarts clock
}	d_resolve_threater_tibet = { resolve_threater_tibet = yes }														# shortcut console command

resolve_threater_bengal = {
	log = "resolve_threater_bengal"
	clamp_variable = { var = global.AXIS_number_bengal min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_bengal min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_bengal_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_bengal }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_bengal_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_bengal }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_bengal > 0 } }
		subtract_from_variable = { global.GER_strength_bengal = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_bengal }
		clamp_variable = {var = global.GER_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_bengal > 0 } }
		subtract_from_variable = { global.CHI_strength_bengal = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_bengal }
		clamp_variable = {var = global.CHI_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_bengal > 0 } }
		subtract_from_variable = { global.NET_strength_bengal = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_bengal }
		clamp_variable = {var = global.NET_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_bengal > 0 } }
		subtract_from_variable = { global.PRT_strength_bengal = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_bengal }
		clamp_variable = {var = global.PRT_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_bengal > 0 } }
		subtract_from_variable = { global.AXIS_locals_bengal = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_bengal }
		clamp_variable = {var = global.AXIS_locals_bengal min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_bengal > 0 } }
		subtract_from_variable = { global.FRA_strength_bengal = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_bengal }
		clamp_variable = {var = global.FRA_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_bengal > 0 } }
		subtract_from_variable = { global.ENG_strength_bengal = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_bengal }
		clamp_variable = {var = global.ENG_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_bengal > 0 } }
		subtract_from_variable = { global.NET_strength_bengal = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_bengal }
		clamp_variable = {var = global.NET_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_bengal > 0 } }
		subtract_from_variable = { global.PRT_strength_bengal = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_bengal }
		clamp_variable = {var = global.PRT_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_bengal > 0 } }
		subtract_from_variable = { global.CHI_strength_bengal = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_bengal }
		clamp_variable = {var = global.CHI_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_bengal > 0 } }
		subtract_from_variable = { global.SOV_strength_bengal = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_bengal }
		 clamp_variable = {var = global.SOV_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_bengal > 0 } }
		subtract_from_variable = { global.USA_strength_bengal = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_bengal }
		clamp_variable = {var = global.USA_strength_bengal min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_bengal > 0 } }
		subtract_from_variable = { global.ALLIES_locals_bengal = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_bengal }
		clamp_variable = {var = global.ALLIES_locals_bengal min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_bengal.1
		} else = {																										# ALLIES wins
			news_event = worldstage_bengal.2
		}
		set_variable = { global.AXIS_strength_bengal_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_bengal_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_bengal_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_bengal_bonus 
		divide_variable = { global.ALLIES_strength_bengal_bonus = 2 }
		round_variable = global.ALLIES_strength_bengal_bonus 
	}
	set_variable = { global.theater_bengal_timer = 60 }																	# always restarts clock
}	d_resolve_threater_bengal = { resolve_threater_bengal = yes }														# shortcut console command

resolve_threater_india = {
	log = "resolve_threater_india"
	clamp_variable = { var = global.AXIS_number_india min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_india min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_india_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_india }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_india_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_india }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_india > 0 } }
		subtract_from_variable = { global.GER_strength_india = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_india }
		clamp_variable = {var = global.GER_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_india > 0 } }
		subtract_from_variable = { global.CHI_strength_india = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_india }
		clamp_variable = {var = global.CHI_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_india > 0 } }
		subtract_from_variable = { global.NET_strength_india = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_india }
		clamp_variable = {var = global.NET_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_india > 0 } }
		subtract_from_variable = { global.PRT_strength_india = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_india }
		clamp_variable = {var = global.PRT_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_india > 0 } }
		subtract_from_variable = { global.AXIS_locals_india = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_india }
		clamp_variable = {var = global.AXIS_locals_india min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_india > 0 } }
		subtract_from_variable = { global.FRA_strength_india = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_india }
		clamp_variable = {var = global.FRA_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_india > 0 } }
		subtract_from_variable = { global.ENG_strength_india = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_india }
		clamp_variable = {var = global.ENG_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_india > 0 } }
		subtract_from_variable = { global.NET_strength_india = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_india }
		clamp_variable = {var = global.NET_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_india > 0 } }
		subtract_from_variable = { global.PRT_strength_india = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_india }
		clamp_variable = {var = global.PRT_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_india > 0 } }
		subtract_from_variable = { global.CHI_strength_india = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_india }
		clamp_variable = {var = global.CHI_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_india > 0 } }
		subtract_from_variable = { global.SOV_strength_india = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_india }
		 clamp_variable = {var = global.SOV_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_india > 0 } }
		subtract_from_variable = { global.USA_strength_india = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_india }
		clamp_variable = {var = global.USA_strength_india min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_india > 0 } }
		subtract_from_variable = { global.ALLIES_locals_india = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_india }
		clamp_variable = {var = global.ALLIES_locals_india min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_india.1
		} else = {																										# ALLIES wins
			news_event = worldstage_india.2
		}
		set_variable = { global.AXIS_strength_india_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_india_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_india_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_india_bonus 
		divide_variable = { global.ALLIES_strength_india_bonus = 2 }
		round_variable = global.ALLIES_strength_india_bonus 
	}
	set_variable = { global.theater_india_timer = 60 }																	# always restarts clock
}	d_resolve_threater_india = { resolve_threater_india = yes }														# shortcut console command

resolve_threater_china = {
	log = "resolve_threater_china"
	clamp_variable = { var = global.AXIS_number_china min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_china min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_china_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_china }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_china_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_china }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_china > 0 } }
		subtract_from_variable = { global.GER_strength_china = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_china }
		clamp_variable = {var = global.GER_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_china > 0 } }
		subtract_from_variable = { global.CHI_strength_china = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_china }
		clamp_variable = {var = global.CHI_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_china > 0 } }
		subtract_from_variable = { global.NET_strength_china = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_china }
		clamp_variable = {var = global.NET_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_china > 0 } }
		subtract_from_variable = { global.PRT_strength_china = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_china }
		clamp_variable = {var = global.PRT_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_china > 0 } }
		subtract_from_variable = { global.AXIS_locals_china = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_china }
		clamp_variable = {var = global.AXIS_locals_china min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_china > 0 } }
		subtract_from_variable = { global.FRA_strength_china = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_china }
		clamp_variable = {var = global.FRA_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_china > 0 } }
		subtract_from_variable = { global.ENG_strength_china = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_china }
		clamp_variable = {var = global.ENG_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_china > 0 } }
		subtract_from_variable = { global.NET_strength_china = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_china }
		clamp_variable = {var = global.NET_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_china > 0 } }
		subtract_from_variable = { global.PRT_strength_china = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_china }
		clamp_variable = {var = global.PRT_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_china > 0 } }
		subtract_from_variable = { global.CHI_strength_china = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_china }
		clamp_variable = {var = global.CHI_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_china > 0 } }
		subtract_from_variable = { global.SOV_strength_china = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_china }
		 clamp_variable = {var = global.SOV_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_china > 0 } }
		subtract_from_variable = { global.USA_strength_china = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_china }
		clamp_variable = {var = global.USA_strength_china min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_china > 0 } }
		subtract_from_variable = { global.ALLIES_locals_china = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_china }
		clamp_variable = {var = global.ALLIES_locals_china min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_china.1
		} else = {																										# ALLIES wins
			news_event = worldstage_china.2
		}
		set_variable = { global.AXIS_strength_china_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_china_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_china_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_china_bonus 
		divide_variable = { global.ALLIES_strength_china_bonus = 2 }
		round_variable = global.ALLIES_strength_china_bonus 
	}
	set_variable = { global.theater_china_timer = 60 }																	# always restarts clock
}	d_resolve_threater_china = { resolve_threater_china = yes }														# shortcut console command

resolve_threater_alpes = {
	log = "resolve_threater_alpes"
	clamp_variable = { var = global.AXIS_number_alpes min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_alpes min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_alpes_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_alpes }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_alpes_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_alpes }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_alpes > 0 } }
		subtract_from_variable = { global.GER_strength_alpes = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_alpes }
		clamp_variable = {var = global.GER_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { alpes_is_axis = yes check_variable = { global.CHI_strength_alpes > 0 } }
		subtract_from_variable = { global.CHI_strength_alpes = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_alpes }
		clamp_variable = {var = global.CHI_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_alpes > 0 } }
		subtract_from_variable = { global.NET_strength_alpes = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_alpes }
		clamp_variable = {var = global.NET_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_alpes > 0 } }
		subtract_from_variable = { global.PRT_strength_alpes = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_alpes }
		clamp_variable = {var = global.PRT_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_alpes > 0 } }
		subtract_from_variable = { global.AXIS_locals_alpes = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_alpes }
		clamp_variable = {var = global.AXIS_locals_alpes min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_alpes > 0 } }
		subtract_from_variable = { global.FRA_strength_alpes = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_alpes }
		clamp_variable = {var = global.FRA_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_alpes > 0 } }
		subtract_from_variable = { global.ENG_strength_alpes = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_alpes }
		clamp_variable = {var = global.ENG_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_alpes > 0 } }
		subtract_from_variable = { global.NET_strength_alpes = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_alpes }
		clamp_variable = {var = global.NET_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_alpes > 0 } }
		subtract_from_variable = { global.PRT_strength_alpes = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_alpes }
		clamp_variable = {var = global.PRT_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { OR = { alpes_is_allies = yes alpes_is_komin = yes } check_variable = { global.CHI_strength_alpes > 0 } }
		subtract_from_variable = { global.CHI_strength_alpes = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_alpes }
		clamp_variable = {var = global.CHI_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_alpes > 0 } }
		subtract_from_variable = { global.SOV_strength_alpes = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_alpes }
		 clamp_variable = {var = global.SOV_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_alpes > 0 } }
		subtract_from_variable = { global.USA_strength_alpes = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_alpes }
		clamp_variable = {var = global.USA_strength_alpes min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_alpes > 0 } }
		subtract_from_variable = { global.ALLIES_locals_alpes = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_alpes }
		clamp_variable = {var = global.ALLIES_locals_alpes min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_alpes.1
		} else = {																										# ALLIES wins
			news_event = worldstage_alpes.2
		}
		set_variable = { global.AXIS_strength_alpes_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_alpes_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_alpes_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_alpes_bonus 
		divide_variable = { global.ALLIES_strength_alpes_bonus = 2 }
		round_variable = global.ALLIES_strength_alpes_bonus 
	}
	set_variable = { global.theater_alpes_timer = 60 }																	# always restarts clock
}	d_resolve_threater_alpes = { resolve_threater_alpes = yes }														# shortcut console command

resolve_threater_normandy = {
	log = "resolve_threater_normandy"
	clamp_variable = { var = global.AXIS_number_normandy min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_normandy min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_normandy_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_normandy }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_normandy_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_normandy }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_normandy > 0 } }
		subtract_from_variable = { global.GER_strength_normandy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_normandy }
		clamp_variable = {var = global.GER_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_normandy > 0 } }
		subtract_from_variable = { global.CHI_strength_normandy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_normandy }
		clamp_variable = {var = global.CHI_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_normandy > 0 } }
		subtract_from_variable = { global.NET_strength_normandy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_normandy }
		clamp_variable = {var = global.NET_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_normandy > 0 } }
		subtract_from_variable = { global.PRT_strength_normandy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_normandy }
		clamp_variable = {var = global.PRT_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_normandy > 0 } }
		subtract_from_variable = { global.AXIS_locals_normandy = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_normandy }
		clamp_variable = {var = global.AXIS_locals_normandy min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_normandy > 0 } }
		subtract_from_variable = { global.FRA_strength_normandy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_normandy }
		clamp_variable = {var = global.FRA_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_normandy > 0 } }
		subtract_from_variable = { global.ENG_strength_normandy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_normandy }
		clamp_variable = {var = global.ENG_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_normandy > 0 } }
		subtract_from_variable = { global.NET_strength_normandy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_normandy }
		clamp_variable = {var = global.NET_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_normandy > 0 } }
		subtract_from_variable = { global.PRT_strength_normandy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_normandy }
		clamp_variable = {var = global.PRT_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_normandy > 0 } }
		subtract_from_variable = { global.CHI_strength_normandy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_normandy }
		clamp_variable = {var = global.CHI_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_normandy > 0 } }
		subtract_from_variable = { global.SOV_strength_normandy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_normandy }
		 clamp_variable = {var = global.SOV_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_normandy > 0 } }
		subtract_from_variable = { global.USA_strength_normandy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_normandy }
		clamp_variable = {var = global.USA_strength_normandy min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_normandy > 0 } }
		subtract_from_variable = { global.ALLIES_locals_normandy = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_normandy }
		clamp_variable = {var = global.ALLIES_locals_normandy min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_normandy.1
		} else = {																										# ALLIES wins
			news_event = worldstage_normandy.2
		}
		set_variable = { global.AXIS_strength_normandy_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_normandy_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_normandy_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_normandy_bonus 
		divide_variable = { global.ALLIES_strength_normandy_bonus = 2 }
		round_variable = global.ALLIES_strength_normandy_bonus 
	}
	set_variable = { global.theater_normandy_timer = 60 }																	# always restarts clock
}	d_resolve_threater_normandy = { resolve_threater_normandy = yes }														# shortcut console command

resolve_threater_sealion = {
	log = "resolve_threater_sealion"
	clamp_variable = { var = global.AXIS_number_sealion min = 1 max = 10 }									# safety check to avoid divisions by zero
	clamp_variable = { var = global.ALLIES_number_sealion min = 1 max = 10 }								# safety check to avoid divisions by zero
	set_temp_variable = { AXIS_remaining_forces = 0 }
	set_temp_variable = { ALLIES_remaining_forces = 0 }
	# get axis attack
	randomize_temp_variable = {	var = axis_attack distribution = uniform min = 0.05 max = 0.2 }					# each side causes damage equal to [5;20]% of their final strength
	multiply_temp_variable = { axis_attack = global.AXIS_strength_sealion_final }
	divide_temp_variable = { axis_attack = global.ALLIES_number_sealion }										# damage is divided among enemies
	clamp_temp_variable = { var = axis_attack min = 1 max = 999 } round_temp_variable = axis_attack											# it will rounded to minimum 1 damage for evey enemy
	# get allies attack
	randomize_temp_variable = {	var = allies_attack distribution = uniform min = 0.05 max = 0.2 }
	multiply_temp_variable = { allies_attack = global.ALLIES_strength_sealion_final }
	divide_temp_variable = { allies_attack = global.AXIS_number_sealion }
	clamp_temp_variable = { var = allies_attack min = 1 max = 999 } round_temp_variable = allies_attack
	# damage axis countries
	if = {
		limit = { check_variable = { global.GER_strength_sealion > 0 } }
		subtract_from_variable = { global.GER_strength_sealion = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.GER_strength_sealion }
		clamp_variable = {var = global.GER_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { china_is_axis = yes check_variable = { global.CHI_strength_sealion > 0 } }
		subtract_from_variable = { global.CHI_strength_sealion = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.CHI_strength_sealion }
		clamp_variable = {var = global.CHI_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_axis = yes check_variable = { global.NET_strength_sealion > 0 } }
		subtract_from_variable = { global.NET_strength_sealion = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.NET_strength_sealion }
		clamp_variable = {var = global.NET_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_axis = yes check_variable = { global.PRT_strength_sealion > 0 } }
		subtract_from_variable = { global.PRT_strength_sealion = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.PRT_strength_sealion }
		clamp_variable = {var = global.PRT_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.AXIS_locals_sealion > 0 } }
		subtract_from_variable = { global.AXIS_locals_sealion = allies_attack }
		add_to_temp_variable = { AXIS_remaining_forces = global.AXIS_locals_sealion }
		clamp_variable = {var = global.AXIS_locals_sealion min = 0 max = 999 }
	}
	# damage axis countries
	if = {
		limit = { france_is_allies = yes check_variable = { global.FRA_strength_sealion > 0 } }
		subtract_from_variable = { global.FRA_strength_sealion = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.FRA_strength_sealion }
		clamp_variable = {var = global.FRA_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { england_is_allies = yes check_variable = { global.ENG_strength_sealion > 0 } }
		subtract_from_variable = { global.ENG_strength_sealion = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ENG_strength_sealion }
		clamp_variable = {var = global.ENG_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { netherlands_is_allies = yes check_variable = { global.NET_strength_sealion > 0 } }
		subtract_from_variable = { global.NET_strength_sealion = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.NET_strength_sealion }
		clamp_variable = {var = global.NET_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { portugal_is_allies = yes check_variable = { global.PRT_strength_sealion > 0 } }
		subtract_from_variable = { global.PRT_strength_sealion = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.PRT_strength_sealion }
		clamp_variable = {var = global.PRT_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { OR = { china_is_allies = yes china_is_komin = yes } check_variable = { global.CHI_strength_sealion > 0 } }
		subtract_from_variable = { global.CHI_strength_sealion = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.CHI_strength_sealion }
		clamp_variable = {var = global.CHI_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { OR = { russia_is_allies = yes russia_is_komin = yes } check_variable = { global.SOV_strength_sealion > 0 } }
		subtract_from_variable = { global.SOV_strength_sealion = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.SOV_strength_sealion }
		 clamp_variable = {var = global.SOV_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { usa_is_allies = yes check_variable = { global.USA_strength_sealion > 0 } }
		subtract_from_variable = { global.USA_strength_sealion = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.USA_strength_sealion }
		clamp_variable = {var = global.USA_strength_sealion min = 0 max = 999 }
	}
	if = {
		limit = { check_variable = { global.ALLIES_locals_sealion > 0 } }
		subtract_from_variable = { global.ALLIES_locals_sealion = axis_attack }
		add_to_temp_variable = { ALLIES_remaining_forces = global.ALLIES_locals_sealion }
		clamp_variable = {var = global.ALLIES_locals_sealion min = 0 max = 999 }
	}
	# check for winners
	if = {																												# someone wins
		limit = { OR = { check_variable = { AXIS_remaining_forces < 1 } check_variable = { ALLIES_remaining_forces < 1 } } }
		if = {
			limit = { check_variable = { ALLIES_remaining_forces < AXIS_remaining_forces } }						# AXIS wins
			news_event = worldstage_sealion.1
		} else = {																										# ALLIES wins
			news_event = worldstage_sealion.2
		}
		set_variable = { global.AXIS_strength_sealion_bonus = 0 }														# clear strategic advantages when someone wins
		set_variable = { global.ALLIES_strength_sealion_bonus = 0 }
	} else = {																											# no one wins, theater continues
		divide_variable = { global.AXIS_strength_sealion_bonus = 2 }														# halves strategic advantages
		round_variable = global.AXIS_strength_sealion_bonus 
		divide_variable = { global.ALLIES_strength_sealion_bonus = 2 }
		round_variable = global.ALLIES_strength_sealion_bonus 
	}
	set_variable = { global.theater_sealion_timer = 60 }																	# always restarts clock
}	d_resolve_threater_sealion = { resolve_threater_sealion = yes }														# shortcut console command
