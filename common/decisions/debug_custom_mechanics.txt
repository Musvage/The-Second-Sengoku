ss_debug_category  = {

	
	debug_check_permission_for_worldstage = {
		available = {
			always = yes
			OR = {
				custom_trigger_tooltip = {
					tooltip = "world_stage_metropolis != 100"
					NOT = { check_variable = { world_stage_metropolis = 100 } }
				}
				AND = {
					custom_trigger_tooltip = {
						tooltip = "world_stage_metropolis = 100"
						check_variable = { world_stage_metropolis = 100 }
					}
					has_idea_with_trait = world_stage_permission
				}
			}
			NOT = { has_idea_with_trait = world_stage_no_permission }
			world_stage_has_permission = yes
		}
		complete_effect = {
			custom_effect_tooltip = "world_stage_has_permission = yes"
			add_political_power = var:world_stage_metropolis
			custom_effect_tooltip = "PP = world_stage_metropolis"
		}
	}
	
	debug_check_permission_for_core = {
		available = {
			always = yes
		}
		complete_effect = {
			random_controlled_state = {
				limit = {
					NOT = { is_core_of = ROOT  }
					state_and_controlled_same_region = yes
				}
				add_compliance = 100
			}
		}
	}
	
	debug_full_compliance = {
		available = {
			always = yes
		}
		complete_effect = {
			every_controlled_state = {
				if = {
					limit = { NOT = { is_core_of = ROOT  } }
					add_compliance = 100
				}
			}
		}
	}

	debug_religion_bonus_test = {
		available = {
			always = yes
		}
		complete_effect = {
			custom_effect_tooltip = "global.religion_base_confucianism_political_advisor_cost = [?global.religion_base_confucianism_political_advisor_cost]"
			custom_effect_tooltip = "religion_confucianism_political_advisor_cost = [?religion_confucianism_political_advisor_cost]"
			custom_effect_tooltip = "country_official_religion_popularity = [?country_official_religion_popularity_cc]"
		}
	}
	
	debug_character_random_lady = {
		available = {
			always = yes
		}
		complete_effect = {
			random_character = {
				limit = { is_country_leader = yes }
				dual_leader_get_random_clan_lady = yes
			}
			add_political_power = 1
		}
		fixed_random_seed = no
		
	}
	
	debug_character_flag_test = {
		available = {
			always = yes
		}
		complete_effect = {
			random_character = {
				limit = { is_country_leader = yes }
				set_character_flag = secondary_leader_wangrod
			}
			ROC_emperor_puyi = {
				set_character_flag = secondary_leader_wangrod
			}
		}
	}
	
	debug_siege_of_edo = {
		available = {
			29 = {
				controller = {
					controls_province = 274
					any_enemy_country = { controls_province = 3722 }
					any_enemy_country = { controls_province = 1342 }
					any_enemy_country = { controls_province = 932 }
					any_enemy_country = { controls_province = 770 }
					any_enemy_country = { controls_province = 3703 }
					any_enemy_country = { controls_province = 53 }
				}
			}
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			custom_effect_tooltip = "29_siege_progress: [?global.29_siege_progress]"
			custom_effect_tooltip = "29_siege_progress_days: [?global.29_siege_progress_days]"
			29 = {
				add_dynamic_modifier = { modifier = siege_modifier_state } 
			}
		}
	}
	
	debug_switch_uncensored_german_flag = {
		icon = GFX_game_rule_german_flags
		available = {
			always = yes
			#REI = { exists = yes }
			#custom_trigger_tooltip = {
			#	tooltip = "[REI.GetName] has censored flag."
			#	NOT = { REI = { has_cosmetic_tag = REI_UNCENSORED } }
			#}
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			if = {
				limit = { has_global_flag = has_uncensored_german_flag }
				clr_global_flag = has_uncensored_german_flag
				REI = {
					drop_cosmetic_tag = REI_UNCENSORED
					set_country_leader_ideology = nazism
					mark_focus_tree_layout_dirty = yes
				}
				SHI = { mark_focus_tree_layout_dirty = yes }	# insert every tag that has focuses with censorable symbols
			} else = {
				set_global_flag = has_uncensored_german_flag
				REI = {
					set_cosmetic_tag = REI_UNCENSORED
					set_country_leader_ideology = nazism_2
					mark_focus_tree_layout_dirty = yes
				}
				SHI = { mark_focus_tree_layout_dirty = yes }	# insert every tag that has focuses with censorable symbols
			}
		}
	}

	debug_crash_1929_reset = {
		icon = trade_interrupted_western
		available = {
			always = yes
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			crash_1929_system_set_up = yes
		}
	}
	
	debug_crash_1929_recover = {
		icon = trade_interrupted_western
		available = {
			has_global_flag = crash_1929_global_enabled
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			crash_1929_decrease_level = yes
		}
	}
	
	debug_crash_1929_worsen = {
		icon = trade_interrupted_western
		available = {
			has_global_flag = crash_1929_global_enabled
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			crash_1929_increase_level = yes
		}
	}
	
	debug_crash_1929_disable = {
		icon = trade_interrupted_western
		available = {
			has_global_flag = crash_1929_global_enabled
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			crash_1929_end = yes
		}
	}

}

ss_placeholder_division_limit_category = {

	division_limit_temporary_display = {
		#icon = trade_interrupted_western
		available = {
			has_country_flag = has_division_limit_system
			always = no
		}
		visible = {
			always = yes
		}
		complete_effect = {
			custom_effect_tooltip = division_limit_topbar_tooltip
			#add_political_power = var:division_limit_support_companies_discount
			#custom_effect_tooltip = division_limit_display_mockup
			#custom_effect_tooltip = division_limit_current_battalions_tt
			#custom_effect_tooltip = division_limit_max_battalions_tt
			#custom_effect_tooltip = division_limit_over_battalions_tt
			#custom_effect_tooltip = division_limit_effect_tt
		}
		
	}
	
	debug_bypass_divison_limit = {
		icon = trade_interrupted_western
		
		available = {
			has_global_flag = has_global_division_system
		}
		
		visible = {
			is_debug = yes
		}
		complete_effect = {
			set_variable = { global.division_limit_base = 999999999 }
			custom_effect_tooltip = "proportion of max. bat.: [?division_limit_proportion]"
		}
	}

	debug_set_up_country_divison_limit = {
		icon = trade_interrupted_western
		available = {
			has_global_flag = has_global_division_system
			NOT = { has_country_flag = has_division_limit_system }
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			set_up_division_limit_system = yes
		}
	}
	
	debug_set_up_global_division_limit = {
		icon = trade_interrupted_western
		available = {
			NOT = { has_global_flag = has_global_division_system }
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			set_up_global_division_limit_system = yes
		}
	}
	
	debug_division_limit_infrastructure = {
		icon = trade_interrupted_western
		available = {
			has_global_flag = has_global_division_system
			always = no
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			custom_effect_tooltip = "average infrastructure [?average_infrastructure_level]"
			custom_effect_tooltip = "total weights [?debug_weights_total]"
			add_political_power = var:average_infrastructure_level
			add_political_power = var:debug_weights_total
			set_temp_variable = { test_var = 0 }
			capital_scope = {
				set_temp_variable = { PREV.test_var = non_damaged_building_level@infrastructure }
			}
			custom_effect_tooltip = "capital infrastructure: [?test_var]"
		}
	}
	
	debug_division_ai_desire_to_go_overhead = {
		icon = trade_interrupted_western
		available = {
			has_country_flag = has_division_limit_system
			always = no
		}
		visible = {
			is_debug = yes
		}
		complete_effect = {
			AMA = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			AMC = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			AMO = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			ASA = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			ASH = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			AZA = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			BUR = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			CHO = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			CHU = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			DAT = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			DOS = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			EZO = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			FER = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			HIR = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			HOJ = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			IMS = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			JOS = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			KAN = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			KOB = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			MIY = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			MOG = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			MRI = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			NAN = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			ODA = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			OSA = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			OTO = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			PRO = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			PRT = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			REI = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			RYU = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			SAT = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			SHI = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			SHO = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			SMZ = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			TAK = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			TOH = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
			UES = { custom_effect_tooltip = "AI's desire to go overhead: [?desire_to_go_overhead]" }
		}
	}
}

ss_placeholder_religion_category = {

	religion_temporary_display = {
		#icon = trade_interrupted_western
		available = {
			always = no
		}
		visible = {
			always = yes
		}
		complete_effect = {
			custom_effect_tooltip = "[Get_official_religion_name]"
			custom_effect_tooltip = "[Get_religion_national_effect]"
			custom_effect_tooltip = official_religion_cc_popularity_text
			custom_effect_tooltip = official_religion_c_popularity_text
			custom_effect_tooltip = set_religion_buddhism_button_tt
		}
		
	}
	
	religion_drift_temporary_display = {
		#icon = trade_interrupted_western
		available = {
			always = no
		}
		visible = {
			always = yes
		}
		complete_effect = {
			custom_effect_tooltip = official_religion_drift_tooltip
			custom_effect_tooltip = "Base: §G+0.25§!"
		}
	}
	
	religion_debug_ui_adopt_1 = {
	
		icon = GFX_religion_small_buddhism
		
		available = {
			always = yes
		}
		visible = {
			has_religion_1 = no
		}
		complete_effect = {
			set_religion_1 = yes
			get_country_religion_drift = yes
			get_official_religion_popularity = yes
			scale_country_religion_effect = yes
			set_country_religion_modifier = yes
		}
		
	}
	religion_debug_ui_adopt_2 = {
	
		icon = GFX_religion_small_shinto
		
		available = {
			always = yes
		}
		visible = {
			has_religion_2 = no
		}
		complete_effect = {
			set_religion_2 = yes
			get_country_religion_drift = yes
			get_official_religion_popularity = yes
			scale_country_religion_effect = yes
			set_country_religion_modifier = yes
		}
		
	}
	religion_debug_ui_adopt_3 = {
	
		icon = GFX_religion_small_christianity
		
		available = {
			always = yes
		}
		visible = {
			has_religion_3 = no
		}
		complete_effect = {
			set_religion_3 = yes
			get_country_religion_drift = yes
			get_official_religion_popularity = yes
			scale_country_religion_effect = yes
			set_country_religion_modifier = yes
		}
		
	}
	religion_debug_ui_adopt_4 = {
	
		icon = GFX_religion_small_taoism
		
		available = {
			always = yes
		}
		visible = {
			has_religion_4 = no
		}
		complete_effect = {
			set_religion_4 = yes
			get_country_religion_drift = yes
			get_official_religion_popularity = yes
			scale_country_religion_effect = yes
			set_country_religion_modifier = yes
		}
		
	}
	religion_debug_ui_adopt_5 = {
	
		icon = GFX_religion_small_confucianism
		
		available = {
			always = yes
		}
		visible = {
			has_religion_5 = no
		}
		complete_effect = {
			set_religion_5 = yes
			get_country_religion_drift = yes
			get_official_religion_popularity = yes
			scale_country_religion_effect = yes
			set_country_religion_modifier = yes
		}
		
	}
	religion_debug_ui_adopt_6 = {
	
		icon = GFX_religion_small_secularism
		
		available = {
			always = yes
		}
		visible = {
			has_religion_6 = no
		}
		complete_effect = {
			set_religion_6 = yes
			get_country_religion_drift = yes
			get_official_religion_popularity = yes
			scale_country_religion_effect = yes
			set_country_religion_modifier = yes
		}
		
	}
	religion_debug_ui_adopt_7 = {
	
		icon = GFX_religion_small_cthulhu
		
		available = {
			always = yes
		}
		visible = {
			has_religion_7 = no
			has_global_flag = religion_cthulhu_allowed
		}
		complete_effect = {
			set_religion_7 = yes
			get_country_religion_drift = yes
			get_official_religion_popularity = yes
			scale_country_religion_effect = yes
			set_country_religion_modifier = yes
		}
		
	}
	religion_debug_allow_cthulhu = {
	
		icon = GFX_religion_small_cthulhu
		
		available = {
			always = yes
		}
		visible = {
			NOT = { has_global_flag = religion_cthulhu_allowed }
		}
		complete_effect = {
			set_global_flag = religion_cthulhu_allowed
			set_variable = { global.religion_xi_pos_1 = 60 }
			set_variable = { global.religion_xb_pos_1 = 40 }
			set_variable = { global.religion_xd_pos_1 = 30 }
			set_variable = { global.religion_xi_pos_2 = 160 }
			set_variable = { global.religion_xb_pos_2 = 140 }
			set_variable = { global.religion_xd_pos_2 = 130 }
			set_variable = { global.religion_xi_pos_3 = 260 }
			set_variable = { global.religion_xb_pos_3 = 240 }
			set_variable = { global.religion_xd_pos_3 = 230 }
			set_variable = { global.religion_xi_pos_4 = 360 }
			set_variable = { global.religion_xb_pos_4 = 340 }
			set_variable = { global.religion_xd_pos_4 = 330 }
			set_variable = { global.religion_xi_pos_5 = 460 }
			set_variable = { global.religion_xb_pos_5 = 440 }
			set_variable = { global.religion_xd_pos_5 = 430 }
			set_variable = { global.religion_xi_pos_6 = 560 }
			set_variable = { global.religion_xb_pos_6 = 540 }
			set_variable = { global.religion_xd_pos_6 = 530 }
			set_variable = { global.religion_xi_pos_7 = 660 }
			set_variable = { global.religion_xb_pos_7 = 640 }
			set_variable = { global.religion_xd_pos_7 = 630 }
		}
		
	}
}

ss_placeholder_AI_worldstage_category = {
	
	debug_GERMANY_worldstage_AI = {
		available = { always = no }
		
		visible = { is_debug = yes }
		
		complete_effect = {
			if = { limit = { 101 = { has_state_flag = worldstage_AI_active } } custom_effect_tooltip = "AI is active"} else = { custom_effect_tooltip = "AI is NOT active" }
			if = { limit = { REI = { has_country_flag = enable_worldstage_autopilot } } custom_effect_tooltip = debug_autopilot_enabled } else = { custom_effect_tooltip = debug_autopilot_disabled }
			if = { limit = { 101 = { has_state_flag = { flag = AI_took_an_action days > 30 } } } custom_effect_tooltip = debug_cooldown_over } else = { custom_effect_tooltip = debug_waiting_cooldown }
			custom_effect_tooltip = "AI preferences:"
			101 = {	custom_effect_tooltip = "ai_prefers_reinforce: [?ai_prefers_reinforce]" }
			101 = {	custom_effect_tooltip = "ai_prefers_supply: [?ai_prefers_supply] (DEPRICATED)" }
			101 = {	custom_effect_tooltip = "ai_prefers_offensive: [?ai_prefers_offensive]" }
			101 = {	custom_effect_tooltip = "ai_prefers_defenses: [?ai_prefers_defenses]" }
			101 = {	custom_effect_tooltip = "ai_prefers_retreat: [?ai_prefers_retreat]" }
		}
	}
	debug_ENGLAND_worldstage_AI = {
		available = { always = no }
		
		visible = { is_debug = yes }
		
		complete_effect = {
			if = { limit = { 102 = { has_state_flag = worldstage_AI_active } } custom_effect_tooltip = "AI is active"} else = { custom_effect_tooltip = "AI is NOT active" }
			if = { limit = { OSA = { has_country_flag = enable_worldstage_autopilot } } custom_effect_tooltip = debug_autopilot_enabled } else = { custom_effect_tooltip = debug_autopilot_disabled }
			if = { limit = { 102 = { has_state_flag = { flag = AI_took_an_action days > 30 } } } custom_effect_tooltip = debug_cooldown_over } else = { custom_effect_tooltip = debug_waiting_cooldown }
			custom_effect_tooltip = "AI preferences:"
			102 = {	custom_effect_tooltip = "ai_prefers_reinforce: [?ai_prefers_reinforce]" }
			102 = {	custom_effect_tooltip = "ai_prefers_supply: [?ai_prefers_supply] (DEPRICATED)" }
			102 = {	custom_effect_tooltip = "ai_prefers_offensive: [?ai_prefers_offensive]" }
			102 = {	custom_effect_tooltip = "ai_prefers_defenses: [?ai_prefers_defenses]" }
			102 = {	custom_effect_tooltip = "ai_prefers_retreat: [?ai_prefers_retreat]" }
		}
	}
	debug_FRANCE_worldstage_AI = {
		available = { always = no }
		
		visible = { is_debug = yes }
		
		complete_effect = {
			if = { limit = { 103 = { has_state_flag = worldstage_AI_active } } custom_effect_tooltip = "AI is active"} else = { custom_effect_tooltip = "AI is NOT active" }
			if = { limit = { OSA = { has_country_flag = enable_worldstage_autopilot } } custom_effect_tooltip = debug_autopilot_enabled } else = { custom_effect_tooltip = debug_autopilot_disabled }
			if = { limit = { 103 = { has_state_flag = { flag = AI_took_an_action days > 30 } } } custom_effect_tooltip = debug_cooldown_over } else = { custom_effect_tooltip = debug_waiting_cooldown }
			custom_effect_tooltip = "AI preferences:"
			103 = {	custom_effect_tooltip = "ai_prefers_reinforce: [?ai_prefers_reinforce]" }
			103 = {	custom_effect_tooltip = "ai_prefers_supply: [?ai_prefers_supply] (DEPRICATED)" }
			103 = {	custom_effect_tooltip = "ai_prefers_offensive: [?ai_prefers_offensive]" }
			103 = {	custom_effect_tooltip = "ai_prefers_defenses: [?ai_prefers_defenses]" }
			103 = {	custom_effect_tooltip = "ai_prefers_retreat: [?ai_prefers_retreat]" }
		}
	}
	debug_SOVIET_worldstage_AI = {
		available = { always = no }
		
		visible = { is_debug = yes }
		
		complete_effect = {
			if = { limit = { 104 = { has_state_flag = worldstage_AI_active } } custom_effect_tooltip = "AI is active"} else = { custom_effect_tooltip = "AI is NOT active" }
			if = { limit = { FER = { has_country_flag = enable_worldstage_autopilot } } custom_effect_tooltip = debug_autopilot_enabled } else = { custom_effect_tooltip = debug_autopilot_disabled }
			if = { limit = { 104 = { has_state_flag = { flag = AI_took_an_action days > 30 } } } custom_effect_tooltip = debug_cooldown_over } else = { custom_effect_tooltip = debug_waiting_cooldown }
			custom_effect_tooltip = "AI preferences:"
			104 = {	custom_effect_tooltip = "ai_prefers_reinforce: [?ai_prefers_reinforce]" }
			104 = {	custom_effect_tooltip = "ai_prefers_supply: [?ai_prefers_supply] (DEPRICATED)" }
			104 = {	custom_effect_tooltip = "ai_prefers_offensive: [?ai_prefers_offensive]" }
			104 = {	custom_effect_tooltip = "ai_prefers_defenses: [?ai_prefers_defenses]" }
			104 = {	custom_effect_tooltip = "ai_prefers_retreat: [?ai_prefers_retreat]" }
		}
	}
	debug_ITALY_worldstage_AI = {
		available = { always = no }
		
		visible = { is_debug = yes }
		
		complete_effect = {
			if = { limit = { 109 = { has_state_flag = worldstage_AI_active } } custom_effect_tooltip = "AI is active"} else = { custom_effect_tooltip = "AI is NOT active" }
			if = { limit = { KIT = { has_country_flag = enable_worldstage_autopilot } } custom_effect_tooltip = debug_autopilot_enabled } else = { custom_effect_tooltip = debug_autopilot_disabled }
			if = { limit = { 109 = { has_state_flag = { flag = AI_took_an_action days > 30 } } } custom_effect_tooltip = debug_cooldown_over } else = { custom_effect_tooltip = debug_waiting_cooldown }
			custom_effect_tooltip = "AI preferences:"
			109 = {	custom_effect_tooltip = "ai_prefers_reinforce: [?ai_prefers_reinforce]" }
			109 = {	custom_effect_tooltip = "ai_prefers_supply: [?ai_prefers_supply] (DEPRICATED)" }
			109 = {	custom_effect_tooltip = "ai_prefers_offensive: [?ai_prefers_offensive]" }
			109 = {	custom_effect_tooltip = "ai_prefers_defenses: [?ai_prefers_defenses]" }
			109 = {	custom_effect_tooltip = "ai_prefers_retreat: [?ai_prefers_retreat]" }
		}
	}
	debug_VICHY_worldstage_AI = {
		available = { always = no }
		
		visible = { is_debug = yes }
		
		complete_effect = {
			if = { limit = { 120 = { has_state_flag = worldstage_AI_active } } custom_effect_tooltip = "AI is active"} else = { custom_effect_tooltip = "AI is NOT active" }
			if = { limit = { KOB = { has_country_flag = enable_worldstage_autopilot } } custom_effect_tooltip = debug_autopilot_enabled } else = { custom_effect_tooltip = debug_autopilot_disabled }
			if = { limit = { 120 = { has_state_flag = { flag = AI_took_an_action days > 30 } } } custom_effect_tooltip = debug_cooldown_over } else = { custom_effect_tooltip = debug_waiting_cooldown }
			custom_effect_tooltip = "AI preferences:"
			120 = {	custom_effect_tooltip = "ai_prefers_reinforce: [?ai_prefers_reinforce]" }
			120 = {	custom_effect_tooltip = "ai_prefers_supply: [?ai_prefers_supply] (DEPRICATED)" }
			120 = {	custom_effect_tooltip = "ai_prefers_offensive: [?ai_prefers_offensive]" }
			120 = {	custom_effect_tooltip = "ai_prefers_defenses: [?ai_prefers_defenses]" }
			120 = {	custom_effect_tooltip = "ai_prefers_retreat: [?ai_prefers_retreat]" }
		}
	}
	debug_refresh_AI = {
		available = { always = yes}
		
		visible = { is_debug = yes }
		
		days_reenable = 1 
		
		complete_effect = {
			every_state = {
				limit = { has_variable = world_stage_metropolis }
				clr_state_flag = AI_took_an_action set_state_flag = AI_took_an_action
			}
		}
	}
	
	debug_reset_AI = {
		available = { always = yes}
		
		visible = { is_debug = yes }
		
		days_reenable = 1 
		
		complete_effect = { set_up_ai_for_world_stage = yes }
	}
}

world_stage_category = {
	debug_world_stage_overall_powers_UI_placeholder = {
		available = {
			always = no
		}

		visible = {
			is_debug = yes
		}

		complete_effect = {
			custom_effect_tooltip = "Germany's overall power in the world stage: [?global.world_stage_power_ger]"
			custom_effect_tooltip = "United States's overall power in the world stage: [?global.world_stage_power_usa]"
			custom_effect_tooltip = "United Kingdom's overall power in the world stage: [?global.world_stage_power_eng]"
			custom_effect_tooltip = "France's overall power in the world stage: [?global.world_stage_power_fra]"
			custom_effect_tooltip = "Soviet Union's overall power in the world stage: [?global.world_stage_power_sov]"
			custom_effect_tooltip = "Portugal's overall power in the world stage: [?global.world_stage_power_prt]"
			custom_effect_tooltip = "Netherlands's overall power in the world stage: [?global.world_stage_power_net]"
			custom_effect_tooltip = "China's overall power in the world stage: [?global.world_stage_power_chi]"
		}
	}
	
	debug_world_stage_coalitions_UI_placeholder = {
		available = {
			always = no
		}

		visible = {
			is_debug = yes
		}

		complete_effect = {
			custom_effect_tooltip = "Allies' overall power in the world stage: [?world_stage_power_allies]"
			custom_effect_tooltip = "Kominter's overall power in the world stage: [?world_stage_power_komintern]"
			custom_effect_tooltip = "Axis' overall power in the world stage: [?world_stage_power_axis]"
		}
	}
}