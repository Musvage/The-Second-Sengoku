on_actions = {
	# flavour game start
	on_startup = {
		effect = {
			### CENSORED / UNCENSORED GERMAN FLAGS ##
			if = {
				limit = { has_game_rule = { rule = censored_or_uncensored_german_flag option = UNCENSORED } }
				REI = {
					set_cosmetic_tag = REI_UNCENSORED
					set_country_leader_ideology = nazism_2
				}
				FER = {
					set_cosmetic_tag = FER_uncensored
				}
				random_country = {
					set_global_flag = has_uncensored_german_flag
				}
			}
			### EASTER EGG CHARACTERS ###
			if = {
				limit = { has_game_rule = { rule = allow_easteregg_characters option = EASTERGG_ALLOWED } }
				log = "recruit easter egg characters"
				FER = {
					recruit_character = FER_alexei_ivanov	# chemical warfare
				}
				AMC = {
					recruit_character = AMC_indiana_niedell	# media personality
					recruit_character = AMC_willis_snake_corto	# commando
				}
				HIR = {
					recruit_character = HIR_rutger_hauer	# blocked runner
				}
				ROC = {
					recruit_character = ROC_lo_pan	# big trouble!
					ROC_lo_pan = {
						set_character_flag = dual_leader_first_title_emperor_sorcerer
						set_character_flag = dual_leader_id_miao_yin
						set_character_flag = dual_leader_second_title_empress
					}
				}
				REI = {
					recruit_character = REI_doctor_strangelove	# yes, Mein FÃ¼hrer... I mean... mister president
					recruit_character = REI_rene_belloq	# hello, dr jones!
					recruit_character = REI_arnold_toht	# what do you want? / the same as your friend dr jones
				}
				PRO = {
					recruit_character = PRO_saburo_arasaka	# cyberpunk 1936
				}
			}
			### CHEMICAL WEAPONS RULE ### #rule depricated
			#if = {
			#	limit = { has_game_rule = { rule = allow_chemical_weapons option = CHEMICAL_ALLOWED } }
			#	log = "allow chemical weapons"
			#	set_global_flag = chemical_weapons_allowed_flag
			#}
			### COALITION STABILITY BONUS ###
			every_possible_country = {
				add_dynamic_modifier = { modifier = coalition_stability_modifier }
				if = {
					limit = {
						NOT = {
							has_idea_with_trait = coalition_with_democratic
							has_idea_with_trait = coalition_with_democratic_socialism
							has_idea_with_trait = coalition_with_communism
							has_idea_with_trait = coalition_with_neutrality
							has_idea_with_trait = coalition_with_autocracy
							has_idea_with_trait = coalition_with_fascism
						}
					}
					set_variable = { coalition_stability_bonus = 0 }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic }
					set_variable = { coalition_stability_bonus = party_popularity@democratic }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic_socialism }
					set_variable = { coalition_stability_bonus = party_popularity@democratic_socialism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_neutrality }
					set_variable = { coalition_stability_bonus = party_popularityneutrality}
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_autocracy }
					set_variable = { coalition_stability_bonus = party_popularity@autocracy }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_fascism }
					set_variable = { coalition_stability_bonus = party_popularity@fascism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_communism }
					set_variable = { coalition_stability_bonus = party_popularity@communism }
				}
				multiply_variable = { coalition_stability_bonus = 0.15 }
			}
			### DIVISION LIMIT SYSTEM	###
			random_country = {
				set_up_global_division_limit_system = yes
			}	
			### 1929 CRASH ###
			random_country = {
				crash_1929_system_set_up = yes
			}
			### PLANED ECONOMY ###
			every_country = {
				limit = { has_government = communism }
				planned_economy_set_up = yes
			}
			### TRADE CITIES 2.0 ###
			random_country = {
				# hirado
				set_variable = { global.tc_base_hirado_aluminium = 4 }
				set_variable = { global.tc_base_hirado_chromium = 0 }
				set_variable = { global.tc_base_hirado_oil = 4 }
				set_variable = { global.tc_base_hirado_rubber = 68 }
				set_variable = { global.tc_base_hirado_steel = 0 }
				set_variable = { global.tc_base_hirado_tungsten = 0 }
				# kobe
				set_variable = { global.tc_base_kobe_aluminium = 4 }
				set_variable = { global.tc_base_kobe_chromium = 0 }
				set_variable = { global.tc_base_kobe_oil = 0 }
				set_variable = { global.tc_base_kobe_rubber = 6 }
				set_variable = { global.tc_base_kobe_steel =  28 }
				set_variable = { global.tc_base_kobe_tungsten = 12 }
				# osaka
				set_variable = { global.tc_base_osaka_aluminium = 4 }
				set_variable = { global.tc_base_osaka_chromium = 0 }
				set_variable = { global.tc_base_osaka_oil = 12 }
				set_variable = { global.tc_base_osaka_rubber = 12 }
				set_variable = { global.tc_base_osaka_steel = 99 }
				set_variable = { global.tc_base_osaka_tungsten = 34 }
				# chiba
				set_variable = { global.tc_base_chiba_aluminium = 32 }
				set_variable = { global.tc_base_chiba_chromium = 0 }
				set_variable = { global.tc_base_chiba_oil = 132 }
				set_variable = { global.tc_base_chiba_rubber = 0 }
				set_variable = { global.tc_base_chiba_steel = 51 }
				set_variable = { global.tc_base_chiba_tungsten = 19 }
				# yawatahama
				set_variable = { global.tc_base_yawatahama_aluminium = 35 }
				set_variable = { global.tc_base_yawatahama_chromium = 1 }
				set_variable = { global.tc_base_yawatahama_oil = 1 }
				set_variable = { global.tc_base_yawatahama_rubber = 0 }
				set_variable = { global.tc_base_yawatahama_steel = 103 }
				set_variable = { global.tc_base_yawatahama_tungsten = 1 }
				# okinawa
				set_variable = { global.tc_base_okinawa_aluminium = 0 }
				set_variable = { global.tc_base_okinawa_chromium = 0 }
				set_variable = { global.tc_base_okinawa_oil = 0 }
				set_variable = { global.tc_base_okinawa_rubber = 0 }
				set_variable = { global.tc_base_okinawa_steel = 0 }
				set_variable = { global.tc_base_okinawa_tungsten = 0 }
				# nagasaki
				set_variable = { global.tc_base_nagasaki_aluminium = 0 }
				set_variable = { global.tc_base_nagasaki_chromium = 8 }
				set_variable = { global.tc_base_nagasaki_oil = 0 }
				set_variable = { global.tc_base_nagasaki_rubber = 0 }
				set_variable = { global.tc_base_nagasaki_steel = 0 }
				set_variable = { global.tc_base_nagasaki_tungsten = 72 }
				# khabarovsky
				set_variable = { global.tc_base_khabarovsky_aluminium = 33 }
				set_variable = { global.tc_base_khabarovsky_chromium = 88 }
				set_variable = { global.tc_base_khabarovsky_oil = 48 }
				set_variable = { global.tc_base_khabarovsky_rubber = 0 }
				set_variable = { global.tc_base_khabarovsky_steel = 135 }
				set_variable = { global.tc_base_khabarovsky_tungsten = 16 }
				# fengtian
				set_variable = { global.tc_base_fengtian_aluminium = 0 }
				set_variable = { global.tc_base_fengtian_chromium = 12 }	# it was 16
				set_variable = { global.tc_base_fengtian_oil = 2 }
				set_variable = { global.tc_base_fengtian_rubber = 0 }
				set_variable = { global.tc_base_fengtian_steel = 89 }		# it was 119
				set_variable = { global.tc_base_fengtian_tungsten = 62 }	# it was 82
				# muroran
				set_variable = { global.tc_base_muroran_aluminium = 3 }
				set_variable = { global.tc_base_muroran_chromium = 3 }
				set_variable = { global.tc_base_muroran_oil = 0 }
				set_variable = { global.tc_base_muroran_rubber = 0 }
				set_variable = { global.tc_base_muroran_steel =  0 }
				set_variable = { global.tc_base_muroran_tungsten =  0 }
				#
				set_global_flag = tc_chiba_enabled
			}
			every_country = {
				check_trade_cities = yes
				set_variable = { show_SS_trade = 0 }
			}
			### CLAN LADIES
			every_possible_country = {
				limit = { has_country_flag = is_clan }
				random_character = {
					limit = { can_be_country_leader = yes has_ideology_group = autocracy }
					dual_leader_get_random_clan_lady = yes
				}
			}
			### TOTAL POPULATION & JAPANESE POPULATION ###
			every_country = {
				set_variable = { country_total_population = 0 }
				set_variable = { country_japanese_population = 0 }
				every_controlled_state = {
					add_to_variable = { PREV.country_total_population = state_population_k }
					if = {
						limit = { OR = { is_on_continent = europe is_on_continent = honshu is_on_continent = kyushu is_on_continent = hokkaido is_on_continent = shikoku } }
						add_to_variable = { PREV.country_japanese_population = state_population_k }
					}
				}
			}
			### RANDOM EXILED WHITE RUSSIANS (NSB VERSION) ###
			log = "get initial random general"
			set_variable = { global.generic_exiled_general_id = 1 }
			set_variable = { global.random_name = 1 }
			set_variable = { global.random_surname = 1 }
			set_variable = { global.random_portrait = 1 }
			set_variable = { global.random_land_trait = 0 }
			set_variable = { global.random_navy_trait = 0 }
			random_country = { get_random_general_dna = yes }
			### RELIGION SYSTEM 2.0 ###
			every_possible_country = {
				set_up_global_religion_variables = yes
				state_religion_error_catcher = yes
				set_variable = { show_SS_religion = 0 }
			}
			every_state = {
				check_state_main_religion = yes
				multiply_variable = { state_religion_buddhism = 100 }	# scales everything to [0;100] ranges
				multiply_variable = { state_religion_shinto = 100 }
				multiply_variable = { state_religion_christianity = 100 }
				multiply_variable = { state_religion_taoism = 100 }
				multiply_variable = { state_religion_confucianism = 100 }
				multiply_variable = { state_religion_secularism = 100 }
				multiply_variable = { state_religion_cthulhu = 100 }
				add_dynamic_modifier = { modifier = religion_state_compliance_modifier }
				add_dynamic_modifier = { modifier = religion_state_resistance_modifier }
				add_dynamic_modifier = { modifier = religion_state_syncretism_modifier }
			}
			every_country = {
				get_country_religion_buddhism = yes
				get_country_religion_shinto = yes
				get_country_religion_christianity = yes
				get_country_religion_taoism = yes
				get_country_religion_confucianism = yes
				get_country_religion_secularism = yes
				get_country_religion_cthulhu = yes
				get_official_religion_popularity = yes
				scale_country_religion_effect = yes
				set_country_religion_modifier = yes
				get_country_religion_drift = yes
				every_controlled_state = {
					get_religion_state_compliance_modifier = yes
				}
			}
			set_variable = { global.religion_xi_pos_1 = 70 }
			set_variable = { global.religion_xb_pos_1 = 50 }
			set_variable = { global.religion_xd_pos_1 = 40 }
			set_variable = { global.religion_xi_pos_2 = 170 }
			set_variable = { global.religion_xb_pos_2 = 150 }
			set_variable = { global.religion_xd_pos_2 = 140 }
			set_variable = { global.religion_xi_pos_3 = 270 }
			set_variable = { global.religion_xb_pos_3 = 250 }
			set_variable = { global.religion_xd_pos_3 = 240 }
			set_variable = { global.religion_xi_pos_4 = 370 }
			set_variable = { global.religion_xb_pos_4 = 350 }
			set_variable = { global.religion_xd_pos_4 = 340 }
			set_variable = { global.religion_xi_pos_5 = 470 }
			set_variable = { global.religion_xb_pos_5 = 450 }
			set_variable = { global.religion_xd_pos_5 = 440 }
			set_variable = { global.religion_xi_pos_6 = 570 }
			set_variable = { global.religion_xb_pos_6 = 550 }
			set_variable = { global.religion_xd_pos_6 = 540 }
			set_variable = { global.religion_xi_pos_7 = 670 }
			set_variable = { global.religion_xb_pos_7 = 650 }
			set_variable = { global.religion_xd_pos_7 = 640 }
			### CORING OF STATES ###
			every_state = {
				set_variable = { coring_progress = 0 }
			}
			### WORLD STAGE 2.0 ###
			# League of Nations members:
			every_country = {
				limit = { OR = { has_idea = SS_lon_member has_idea = SS_lon_member_japan } }
				every_other_country = {
					limit = { OR = { has_idea = SS_lon_member has_idea = SS_lon_member_japan } }	# maybe turns this into a trait to dispense with multiple idea checks
					add_relation_modifier = {
						target = PREV
						modifier = lon_member_relation_modifier
					}
				}
			}
			every_country = { set_variable = { current_theater = 0 } }
			# initial flags/conditions
			set_global_flag = world_stage_germany_exists
			set_global_flag = world_stage_france_exists					# to-do: splits into _free and _vichy later (if all goes according to GER's plans)
			set_global_flag = world_stage_england_exists
			set_global_flag = world_stage_sovietunion_exists
			set_global_flag = world_stage_netherlands_exists
			set_global_flag = world_stage_china_exists
			set_global_flag = world_stage_usa_exists
			set_global_flag = world_stage_portugal_exists
			set_global_flag = world_stage_italy_exists
			set_global_flag = phoney_war_rages_on						# gets removed when either germany or france invade each other
			#set_global_flag = leagueofnations_exists					# must be set in history file otherwise the game will remove the SS_lon_member ideas (that require this flag) on startup
			set_variable = { global.worldstage_europe_map_frame = 1 }	# initial frame for European map (it changes when Germany grabs more land before ww2)
			set_variable = { global.worldstage_asia_map_frame = 1 }	# initial frame for Asian map (it changes if Manchuria becomes independent)
			# PROXIES: states used as proxys for theaters and metropolises
			# metropolis, double as check for states that hold metropolises, indexes are 100's to avoid confusion with proxy theaters
			100 = { set_variable = { world_stage_metropolis = 100 } }		# No one/other
			101 = { set_variable = { world_stage_metropolis = 101 } }		# Germany
			102 = { set_variable = { world_stage_metropolis = 102 } }		# England
			103 = { set_variable = { world_stage_metropolis = 103 } }		# France
			104 = { set_variable = { world_stage_metropolis = 104 } }		# Soviet Union
			105 = { set_variable = { world_stage_metropolis = 105 } }		# USA
			106 = { set_variable = { world_stage_metropolis = 106 } }		# China
			107 = { set_variable = { world_stage_metropolis = 107 } }		# Netherlands
			108 = { set_variable = { world_stage_metropolis = 108 } }		# Portugal
			109 = { set_variable = { world_stage_metropolis = 109 } }		# Italy (not implemented in game, works on world stage)
			110 = { set_variable = { world_stage_metropolis = 110 } }		# Recognized Japan
			#111 = { set_variable = { world_stage_metropolis = 111 } }		# Spain, not implemented
			#112 = { set_variable = { world_stage_metropolis = 112 } }		# nothing yet, maybe tags that are not colonies
			113 = { set_variable = { world_stage_metropolis = 112 } }		# Nazi Germany, unused
			114 = { set_variable = { world_stage_metropolis = 114 } }		# Manchuria (does not exist at start)	# the ones bellow only exist off-map
			115 = { set_variable = { world_stage_metropolis = 115 } }		# Poland
			116 = { set_variable = { world_stage_metropolis = 116 } }		# Mongolia
			117 = { set_variable = { world_stage_metropolis = 117 } }		# Norway, not implemented
			118 = { set_variable = { world_stage_metropolis = 118 } }		# Ethiopia, not implemented	
			119 = { set_variable = { world_stage_metropolis = 119 } }		# Austria
			# coalition (no zero index to match number of frames for an icon)
			100 = { set_variable = { world_stage_coalition = 4 } }	# Non-Aligned
			101 = { set_variable = { world_stage_coalition = 6 } }	# Pact of Steel
			102 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			103 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			104 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			105 = { set_variable = { world_stage_coalition = 4 } }	# Non-Aligned
			106 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			107 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			109 = { set_variable = { world_stage_coalition = 6 } }	# Pact of Steel
			110 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			111 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			112 = { set_variable = { world_stage_coalition = 4 } }	# Non-Aligned
			113 = { set_variable = { world_stage_coalition = 6 } }	# Pact of Steel
			114 = { set_variable = { world_stage_coalition = 4 } }	# Non-Aligned
			115 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			116 = { set_variable = { world_stage_coalition = 4 } }	# Non-Aligned
			117 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			118 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			119 = { set_variable = { world_stage_coalition = 5 } }	# League of Nation
			# overall power
			101 = { set_variable = { world_stage_power = 100 } }
			102 = { set_variable = { world_stage_power = 75 } }
			103 = { set_variable = { world_stage_power = 75 } }
			104 = { set_variable = { world_stage_power = 100 } }
			105 = { set_variable = { world_stage_power = 100 } }
			106 = { set_variable = { world_stage_power = 25 } }
			107 = { set_variable = { world_stage_power = 25 } }
			108 = { set_variable = { world_stage_power = 5 } }
			109 = { set_variable = { world_stage_power = 0 } }	# the ones bellow may not be used but I'll write down just in case they are referenced in other parts of the code
			110 = { set_variable = { world_stage_power = 0 } }
			111 = { set_variable = { world_stage_power = 0 } }
			112 = { set_variable = { world_stage_power = 0 } }
			113 = { set_variable = { world_stage_power = 0 } }
			114 = { set_variable = { world_stage_power = 0 } }
			115 = { set_variable = { world_stage_power = 0 } }
			116 = { set_variable = { world_stage_power = 0 } }
			117 = { set_variable = { world_stage_power = 0 } }
			118 = { set_variable = { world_stage_power = 0 } }
			119 = { set_variable = { world_stage_power = 0 } }
			world_stage_get_tag_info_from_metropolis = yes
			every_possible_country = {
				set_variable = { world_stage_metropolis = 100 }
				set_variable = { world_stage_coalition = 4 }
				set_variable = { world_stage_power = 0 }
			}
			REI = { set_variable = { world_stage_metropolis = 101 } }	# for these ones it should be enough to get them once in start-up, the redundancy here works as safety mechanism
			OSA = { set_variable = { world_stage_metropolis = 102 } }
			KOB = { set_variable = { world_stage_metropolis = 103 } }
			FER = { set_variable = { world_stage_metropolis = 104 } }
			AMC = { set_variable = { world_stage_metropolis = 105 } }	#
			OKI = { set_variable = { world_stage_metropolis = 105 } }	# both are America	(NOTE: possibility of OKI becoming independent and not being USA anymore should be considered here)
			ROC = { set_variable = { world_stage_metropolis = 106 } }
			HIR = { set_variable = { world_stage_metropolis = 107 } }
			PRT = { set_variable = { world_stage_metropolis = 108 } }
			#KIT = { set_variable = { world_stage_metropolis = 109 } }	# Italy, not implemented
			PRO = { set_variable = { world_stage_metropolis = 110 } }	# Internationally recognized Japan
			#SPR = { set_variable = { world_stage_metropolis = 111 } }	# Spain, not implemented
			# doctrine leves
			every_country = {
				limit = { has_variable = world_stage_metropolis }
				set_variable = { doctrine_bonus_land = 1 }
				set_variable = { doctrine_bonus_navy = 1 }
				var:world_stage_metropolis = {
					set_variable = { doctrine_bonus_land = PREV.doctrine_bonus_land }
					set_variable = { doctrine_bonus_navy = PREV.doctrine_bonus_navy }				####	REMOVE TAG-STORED VARIABLES LATER
				}
			}
			# owners, double as check for states that hold theaters (the ones commented were depricated), the owner is a proxy metropolis
			1 = { set_variable = { theater_owner = 100 } 	set_variable = { theater_id = 1 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } }			# Spain (currently not implemented))
			2 = { set_variable = { theater_owner = 116 } 	set_variable = { theater_id = 2 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Mongolia
			3 = { set_variable = { theater_owner = 115 } 	set_variable = { theater_id = 3 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Poland
			4 = { set_variable = { theater_owner = 100 } 	set_variable = { theater_id = 4 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Ardennes (currently not implemented))
			5 = { set_variable = { theater_owner = 103 } 	set_variable = { theater_id = 5 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Alsace
			6 = { set_variable = { theater_owner = 101 } 	set_variable = { theater_id = 6 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Westphalia
			7 = { set_variable = { theater_owner = 101 } 	set_variable = { theater_id = 7 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Germany
			8 = { set_variable = { theater_owner = 103 } 	set_variable = { theater_id = 8 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# France
			9 = { set_variable = { theater_owner = 104 } 	set_variable = { theater_id = 9 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Belarus
			10 = { set_variable = { theater_owner = 104 } 	set_variable = { theater_id = 10 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Smolensk
			11 = { set_variable = { theater_owner = 104 } 	set_variable = { theater_id = 11 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Russia (Moscow)
			12 = { set_variable = { theater_owner = 100 } 	set_variable = { theater_id = 12 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } }		# Norway (currently not implemented))
			13 = { set_variable = { theater_owner = 100 } 	set_variable = { theater_id = 13 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } }		# Ethiopia (currently not implemented))
			14 = { set_variable = { theater_owner = 109 } 	set_variable = { theater_id = 14 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Lybia
			15 = { set_variable = { theater_owner = 102 } 	set_variable = { theater_id = 15 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Egypt
			16 = { set_variable = { theater_owner = 102 } 	set_variable = { theater_id = 16 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# India (south)
			17 = { set_variable = { theater_owner = 102 } 	set_variable = { theater_id = 17 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Bengal
			18 = { set_variable = { theater_owner = 106 } 	set_variable = { theater_id = 18 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Tibet
			19 = { set_variable = { theater_owner = 106 } 	set_variable = { theater_id = 19 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# China (west)
			20 = { set_variable = { theater_owner = 107 } 	set_variable = { theater_id = 20 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Indies
			21 = { set_variable = { theater_owner = 105 } 	set_variable = { theater_id = 21 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Philipines
			22 = { set_variable = { theater_owner = 104 } 	set_variable = { theater_id = 22 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Siberia
			23 = { set_variable = { theater_owner = 109 } 	set_variable = { theater_id = 23 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Italy (Rome)
			24 = { set_variable = { theater_owner = 109 } 	set_variable = { theater_id = 24 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Sicily
			25 = { set_variable = { theater_owner = 109 } 	set_variable = { theater_id = 25 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Alpes
			26 = { set_variable = { theater_owner = 119 } 	set_variable = { theater_id = 26 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Austria
			27 = { set_variable = { theater_owner = 107 } 	set_variable = { theater_id = 27 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Netherlands
			28 = { set_variable = { theater_owner = 106 } 	set_variable = { theater_id = 28 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Guanxi
			29 = { set_variable = { theater_owner = 104 } 	set_variable = { theater_id = 29 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# Urals
			30 = { set_variable = { theater_owner = 102 } 	set_variable = { theater_id = 30 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# England
			31 = { set_variable = { theater_owner = 100 } 	set_variable = { theater_id = 31 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# no owner (Normandy)
			32 = { set_variable = { theater_owner = 100 } 	set_variable = { theater_id = 32 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# no owner (Sealion)
			33 = { set_variable = { theater_owner = 105 } 	set_variable = { theater_id = 33 } set_variable = { defender_strategic_advantage = 0 } set_variable = { attacker_strategic_advantage = 0 } } 		# no owner (Sealion)
			every_state = {	# world_stage_get_theater_info_from_metropolis
				limit = { has_variable = theater_owner }
				var:theater_owner = { set_variable = { PREV.theater_owner_coalition = world_stage_coalition } }	# imports from theater owner info about its coalition
				add_to_array = { world_stage_power_deployed_by = -1 } 			# this array is how much power each metropolis have deployed in this theater # this command creates the array, first 100 entries are filler
				set_temp_variable = { temporary_index = 1 }
				while_loop_effect = {
					limit = { check_variable = { temporary_index < 100 } }		# 101 is the first 'actual' metropolis
					add_to_array = { world_stage_power_deployed_by = -1 }		# this 'fills' the first 100 entries so that the index of the array matches the index of the metropolis and the proxy state's id
					add_to_temp_variable = { temporary_index = 1 }
				}
				every_state = {
					limit = { has_variable = world_stage_metropolis }
					add_to_array = { PREV.world_stage_power_deployed_by = 0 }	# now adds each metropolis' own deployed power (which is zero at start) across all theaters
				}
			}
			# manually adding the deployed forces of minor powers:
			3 = { set_variable = { world_stage_power_deployed_by^115 = 30 } }
			12 = { set_variable = { world_stage_power_deployed_by^117 = 10 } }
			13 = { set_variable = { world_stage_power_deployed_by^118 = 5 } }
			26 = { set_variable = { world_stage_power_deployed_by^119 = 10 } }			
			#1 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			2 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			3 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			#4 = { set_variable = { theater_timer_base = 45 } set_variable = { theater_timer = theater_timer_base } }
			5 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			6 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			7 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			8 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			9 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			10 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			11 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			#12 = { set_variable = { theater_timer_base = 30 } set_variable = { theater_timer = theater_timer_base } }
			#13 = { set_variable = { theater_timer_base = 30 } set_variable = { theater_timer = theater_timer_base } }
			14 = { set_variable = { theater_timer_base = 30 } set_variable = { theater_timer = theater_timer_base } }
			15 = { set_variable = { theater_timer_base = 30 } set_variable = { theater_timer = theater_timer_base } }
			16 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			17 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			18 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			19 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			20 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			21 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			22 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			23 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			24 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			25 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			26 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			27 = { set_variable = { theater_timer_base = 60 } set_variable = { theater_timer = theater_timer_base } }
			28 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			29 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			30 = { set_variable = { theater_timer_base = 90 } set_variable = { theater_timer = theater_timer_base } }
			31 = { set_variable = { theater_timer_base = 30 } set_variable = { theater_timer = theater_timer_base } }
			32 = { set_variable = { theater_timer_base = 30 } set_variable = { theater_timer = theater_timer_base } }
			33 = { set_variable = { theater_timer_base = 30 } set_variable = { theater_timer = theater_timer_base } }
			#1 = { set_variable = { theater_timer_frame = 9 } }
			2 = { set_variable = { theater_timer_frame = 9 } }
			3 = { set_variable = { theater_timer_frame = 9 } }
			#4 = { set_variable = { theater_timer_frame = 9 } }
			5 = { set_variable = { theater_timer_frame = 9 } }
			6 = { set_variable = { theater_timer_frame = 9 } }
			7 = { set_variable = { theater_timer_frame = 9 } }
			8 = { set_variable = { theater_timer_frame = 9 } }
			9 = { set_variable = { theater_timer_frame = 9 } }
			10 = { set_variable = { theater_timer_frame = 9 } }
			11 = { set_variable = { theater_timer_frame = 9 } }
			#12 = { set_variable = { theater_timer_frame = 9 } }
			#13 = { set_variable = { theater_timer_frame = 9 } }
			14 = { set_variable = { theater_timer_frame = 9 } }
			15 = { set_variable = { theater_timer_frame = 9 } }
			16 = { set_variable = { theater_timer_frame = 9 } }
			17 = { set_variable = { theater_timer_frame = 9 } }
			18 = { set_variable = { theater_timer_frame = 9 } }
			19 = { set_variable = { theater_timer_frame = 9 } }
			20 = { set_variable = { theater_timer_frame = 9 } }
			21 = { set_variable = { theater_timer_frame = 9 } }
			22 = { set_variable = { theater_timer_frame = 9 } }
			23 = { set_variable = { theater_timer_frame = 9 } }
			24 = { set_variable = { theater_timer_frame = 9 } }
			25 = { set_variable = { theater_timer_frame = 9 } }
			26 = { set_variable = { theater_timer_frame = 9 } }
			27 = { set_variable = { theater_timer_frame = 9 } }
			28 = { set_variable = { theater_timer_frame = 9 } }
			29 = { set_variable = { theater_timer_frame = 9 } }
			30 = { set_variable = { theater_timer_frame = 9 } }
			31 = { set_variable = { theater_timer_frame = 9 } }
			32 = { set_variable = { theater_timer_frame = 9 } }
			32 = { set_variable = { theater_timer_frame = 9 } }
			# connections
			#1 = { add_to_array = { connects_to = [none] } }
			2 = { add_to_array = { connects_to = 18 } add_to_array = { connects_to = 22 } }
			3 = { add_to_array = { connects_to = 7 } add_to_array = { connects_to = 9 } }
			#4 = { add_to_array = { connects_to = [none] } }
			5 = { add_to_array = { connects_to = 8 } add_to_array = { connects_to = 6 } add_to_array = { connects_to = 25 } }
			6 = { add_to_array = { connects_to =  7 } add_to_array = { connects_to = 5 } add_to_array = { connects_to = 27 } add_to_array = { connects_to = 26 } }
			7 = { add_to_array = { connects_to = 6 } add_to_array = { connects_to = 3 } }
			8 = { add_to_array = { connects_to = 5 } add_to_array = { connects_to = 27 } }	# add sealion later
			9 = { add_to_array = { connects_to = 3 } add_to_array = { connects_to = 10 } }
			10 = { add_to_array = { connects_to = 9 } add_to_array = { connects_to = 11 } }
			11 = { add_to_array = { connects_to = 10 } add_to_array = { connects_to = 29 } }
			#12 = { add_to_array = { connects_to = [none] } }
			#13 = { add_to_array = { connects_to = [none] } }
			14 = { add_to_array = { connects_to = 15 } add_to_array = { connects_to = 24 } }
			15 = { add_to_array = { connects_to = 14 } }
			16 = { add_to_array = { connects_to = 17 } }
			17 = { add_to_array = { connects_to = 16 } add_to_array = { connects_to = 28 }}
			18 = { add_to_array = { connects_to = 2 } add_to_array = { connects_to = 28 } }
			19 = { add_to_array = { connects_to = 28 } add_to_array = { connects_to = 33 } }
			20 = { add_to_array = { connects_to = 33 } }
			21 = { add_to_array = { connects_to = 33 } }
			22 = { add_to_array = { connects_to = 29 } add_to_array = { connects_to = 2 } }
			23 = { add_to_array = { connects_to = 24 } add_to_array = { connects_to = 25 }  }
			24 = { add_to_array = { connects_to = 14 } add_to_array = { connects_to = 23 } }
			25 = { add_to_array = { connects_to = 5 } add_to_array = { connects_to = 23 } add_to_array = { connects_to = 26 } }
			26 = { add_to_array = { connects_to = 6 } add_to_array = { connects_to = 25 } }
			27 = { add_to_array = { connects_to = 6 } add_to_array = { connects_to = 8 } }
			28 = { add_to_array = { connects_to = 17 } add_to_array = { connects_to = 18 } add_to_array = { connects_to = 19 } }
			29 = { add_to_array = { connects_to = 11 } add_to_array = { connects_to = 22 } }
			30 = { add_to_array = { connects_to = 11 } add_to_array = { connects_to = 22 } }
			31 = { add_to_array = { connects_to = 11 } add_to_array = { connects_to = 22 } }
			32 = { add_to_array = { connects_to = 11 } add_to_array = { connects_to = 22 } }
			33 = { add_to_array = { connects_to = 19 } add_to_array = { connects_to = 20 } add_to_array = { connects_to = 21 } }
			#### after all manually-set-variables are...set manually, run a command to fill the blanks, if necessary
			# fill the blanks, add command later
			
			# scheduled ww2 events	############### CHANGE TO STATE EVENTS LATER############### CHANGE TO STATE EVENTS LATER############### CHANGE TO STATE EVENTS LATER
			FER = {																	# FER is very unlikely to be removed from the game before 1937...
				news_event = { id = worldstage.4 days = 198 }						# Spanish Civil War: Started, july 17th, 1936
				news_event = { id = worldstage.5 days = 208 random_days = 20 }		# Spanish Civil War: Italians
				news_event = { id = worldstage.6 days = 218 random_days = 40 }		# Spanish Civil War: International Brigades
				news_event = { id = worldstage.8 days = 248 random_days = 60 }		# Spanish Civil War: Republican Desertion
				news_event = { id = worldstage.9 days = 288 random_days = 80 }		# Spanish Civil War: Republican Infighting 
				news_event = { id = worldstage.10 days = 481 }						# Spanish Civil War: Guernica, april 26th, 1937
			}
			# kickstart AI's
			set_global_flag = REI_ai_made_a_move
			set_global_flag = KOB_ai_made_a_move
			set_global_flag = OSA_ai_made_a_move
			set_global_flag = AMC_ai_made_a_move
			set_global_flag = FER_ai_made_a_move
			set_global_flag = ROC_ai_made_a_move
			set_global_flag = HIR_ai_made_a_move
			### OLD WORLD STAGE BELOW: REMOVE LATER ###### OLD WORLD STAGE BELOW: REMOVE LATER ###### OLD WORLD STAGE BELOW: REMOVE LATER ###
			OSA = { set_country_flag = can_play_alsace set_country_flag = can_play_westphalia set_country_flag = can_play_france set_country_flag = can_play_england set_country_flag = can_play_germany set_country_flag = can_play_netherlands set_country_flag = can_play_alpes set_country_flag = can_play_austria set_country_flag = can_play_italy set_country_flag = can_play_sicily set_country_flag = can_play_lybia set_country_flag = can_play_egypt set_country_flag = can_play_normandy set_country_flag = can_play_sealion  set_country_flag = can_play_india set_country_flag = can_play_bengal set_country_flag = can_play_guanxi set_country_flag = can_play_china }
			KOB = { set_country_flag = can_play_alsace set_country_flag = can_play_westphalia set_country_flag = can_play_france set_country_flag = can_play_england set_country_flag = can_play_germany set_country_flag = can_play_netherlands set_country_flag = can_play_alpes set_country_flag = can_play_austria set_country_flag = can_play_italy set_country_flag = can_play_sicily set_country_flag = can_play_lybia set_country_flag = can_play_egypt set_country_flag = can_play_normandy set_country_flag = can_play_sealion }
			FER = { set_country_flag = can_play_germany set_country_flag = can_play_poland set_country_flag = can_play_belarus set_country_flag = can_play_smolensk set_country_flag = can_play_russia set_country_flag = can_play_urals set_country_flag = can_play_siberia set_country_flag = can_play_mongolia set_country_flag = can_play_tibet set_country_flag = can_play_guanxi set_country_flag = can_play_china }
			AMC = { set_country_flag = can_play_philipines set_country_flag = can_play_indies }
			OKI = { set_country_flag = can_play_philipines set_country_flag = can_play_indies }
			HIR = { set_country_flag = can_play_philipines set_country_flag = can_play_indies set_country_flag = can_play_netherlands set_country_flag = can_play_germany set_country_flag = can_play_france set_country_flag = can_play_alsace set_country_flag = can_play_westphalia set_country_flag = can_play_sealion set_country_flag = can_play_normandy set_country_flag = can_play_england }
			PRT = { set_country_flag = can_play_india set_country_flag = can_play_bengal set_country_flag = can_play_guanxi set_country_flag = can_play_china set_country_flag = can_play_indies set_country_flag = can_play_philipines }
			ROC = { set_country_flag = can_play_indies set_country_flag = can_play_philipines set_country_flag = can_play_china set_country_flag = can_play_guanxi set_country_flag = can_play_tibet set_country_flag = can_play_mongolia set_country_flag = can_play_bengal set_country_flag = can_play_india }
			REI = { set_country_flag = can_play_alsace set_country_flag = can_play_westphalia set_country_flag = can_play_france set_country_flag = can_play_england set_country_flag = can_play_germany set_country_flag = can_play_netherlands set_country_flag = can_play_alpes set_country_flag = can_play_austria set_country_flag = can_play_italy set_country_flag = can_play_sicily set_country_flag = can_play_poland set_country_flag = can_play_normandy set_country_flag = can_play_sealion }

			### UNIFICATION OF JAPAN ###
			set_global_flag = international_recognition_changed_flag	# this flag works as a tooltip
			every_country = {
				if = {
					limit = { unification_candidate = yes }
					unification_get_score = yes
					unification_count_states_southern_japan = yes
					unification_count_states_central_japan = yes
					unification_count_states_northern_japan = yes
					unification_count_total_states = yes
				}
			}
			random_country = {
				unification_count_total_required_states_japan = yes
				get_all_unification_score_firsts = yes
				unification_get_highter_score = yes
				set_variable = { global.unification_shield_frame = 1 }
			}
			## STARTING COUNTS:
			set_variable = { global.total_states_southern_japan = 58 }
			set_variable = { global.required_states_southern_japan = 38 }	# 2/3 of total
			set_variable = { global.total_states_central_japan = 37 }
			set_variable = { global.required_states_central_japan = 25 }	# 2/3 of total
			set_variable = { global.total_states_northern_japan = 48 }
			set_variable = { global.required_states_northern_japan = 32 }	# 2/3 of total
			AMO = { set_variable = { number_of_states_controlled_central_japan = 1 } }
			CHU = { set_variable = { number_of_states_controlled_southern_japan = 16 } }
			IMS = { set_variable = { number_of_states_controlled_southern_japan = 4 } }
			EZO = { set_variable = { number_of_states_controlled_northern_japan = 17 } }
			IMS = { set_variable = { number_of_states_controlled_central_japan = 1 } }
			KAN = { set_variable = { number_of_states_controlled_central_japan = 22 } }
			KYU = { set_variable = { number_of_states_controlled_southern_japan = 21 } }
			PRO = { set_variable = { number_of_states_controlled_central_japan = 11 } }
			SHI = { set_variable = { number_of_states_controlled_southern_japan = 10 } }
			SHI = { set_variable = { number_of_states_controlled_central_japan = 1 } }
			SHO = { set_variable = { number_of_states_controlled_central_japan = 21 } }
			SHO = { set_variable = { number_of_states_controlled_northern_japan = 4 } }
			TOH = { set_variable = { number_of_states_controlled_northern_japan = 25 } }
			### FLAVOUR EVENTS ###
			SHI = {
				country_event = { id = startup_flavour.1 } 
			}
			PRO = {
				#country_event = { id = pro.1 days = 55 }	# depricated
				news_event = { id = pro.21 }	# flavour event for previous PM's death
			}
			SHO = {
				country_event = { id = shogunate.28 days = 1616 }
			}
			KYU = {
				country_event = { id = startup_flavour.2 }
			}
			FER = {
				country_event = { id = startup_flavour.3 }
			}
			REI = {
				country_event = { id = ostasien.1 days = 305 random_days = 60 }
				country_event = { id = ostasien.9 days = 2 random_days = 5 }
			}
			KOB = {
				country_event = { id = dualleader.1 days = 4030 }
				country_event = { id = dualleader.2 days = 6585 }
			}
			OSA = {
				country_event = { id = dualleader.3 days = 512 }
				country_event = { id = dualleader.4 days = 1589 }
				country_event = { id = dualleader.5 days = 3492 }
			}
			HIR = {
				country_event = { id = dualleader.6 days = 1316 }
				country_event = { id = dualleader.7 days = 1705 }
				country_event = { id = dualleader.8 days = 3460 }
				country_event = { id = dualleader.9 days = 3833 }
				country_event = { id = dualleader.10 days = 4598 }
			}
			AMC = {
				country_event = { id = dualleader.11 days = 3386 }
				country_event = { id = dualleader.12 days = 6224 }
			}
			OKI = {
				country_event = { id = dualleader.11 days = 3386 }
				country_event = { id = dualleader.12 days = 6224 }
			}
			JOS = {
				country_event = { id = joseon.1 days = 365 }
			}
			#KAN = {
			#		set_autonomy = { target = IMS autonomy_state = autonomy_puppet }
			#	}
			IMS = {
				add_popularity = {
				popularity = 0.4
					ideology = neutrality
				}
				set_politics = {
					ruling_party = neutrality
				}
				country_event = { id = ims_crisis.1 }
			}

			#random_country = {
			#	limit = { is_ai = no }
			#	add_political_power = 1
			#	country_event = { id = options.1 }
			#} DISABLED INITIAL OPTIONS
		}
	}
	
	on_weekly = {
		effect = {
			if = {
				limit = { is_ai = no }	### PLAYER WEEKLY EFFECTS (THESE ARE MONTHLY FOR AI)
				### PLANNED ECONOMY ###
				if = {
					limit = { has_government = communism }
					if = {
						limit = { NOT = { has_dynamic_modifier = { modifier = planned_economy_modifier } } }
						add_dynamic_modifier = { modifier = planned_economy_modifier }
					}
					set_variable = { planned_economy_minimum_goods = 0.3 }
					set_variable = { war_support_goods_modifier = 0 }
					if = {
						limit = {
							has_war = yes
							has_war_support > 0.5
						}
						set_variable = { war_support_goods_modifier = has_war_support }
						multiply_variable = { war_support_goods_modifier = 0.2 }
						subtract_from_variable = { planned_economy_minimum_goods = war_support_goods_modifier }
					}
					set_variable = { planned_economy_political_power = modifier@consumer_goods_factor }
					subtract_from_variable = { planned_economy_political_power = planned_economy_minimum_goods }
					multiply_variable = { planned_economy_political_power = 2 }
					set_variable = { planned_economy_party_popularity = modifier@consumer_goods_factor }
					subtract_from_variable = { planned_economy_party_popularity = planned_economy_minimum_goods }
				} else = {
					if = {
						limit = { has_dynamic_modifier = { modifier = planned_economy_modifier } }
						remove_dynamic_modifier = { modifier = planned_economy_modifier }
					}
				}
			}
		}
		effect = {
			if = {
				limit = { is_ai = yes }	### AI WEEKLY EFFECTS (THESE ARE DAILY FOR PLAYERS)
				### UNIFICATION OF JAPAN ###
				if = {
					limit = { unification_candidate = yes }
					unification_get_score = yes
					unification_count_states_southern_japan = yes
					unification_count_states_central_japan = yes
					unification_count_states_northern_japan = yes
					get_all_unification_score_firsts = yes
					unification_count_total_states = yes
					unification_get_highter_score = yes
				}
				### COALITION STABILITY BONUS ###
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic NOT = { has_government = democratic } }
					set_variable = { coalition_stability_bonus = party_popularity@democratic }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic_socialism NOT = { has_government = democratic_socialism } }
					set_variable = { coalition_stability_bonus = party_popularity@democratic_socialism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_neutrality NOT = { has_government = neutrality } }
					set_variable = { coalition_stability_bonus = party_popularity@neutrality}
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_autocracy NOT = { has_government = autocracy } }
					set_variable = { coalition_stability_bonus = party_popularity@autocracy }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_fascism NOT = { has_government = fascism } }
					set_variable = { coalition_stability_bonus = party_popularity@fascism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_communism NOT = { has_government = communism } }
					set_variable = { coalition_stability_bonus = party_popularity@communism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic_char NOT = { has_government = democratic } }
					set_variable = { coalition_stability_bonus = party_popularity@democratic }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic_socialism_char NOT = { has_government = democratic_socialism } }
					set_variable = { coalition_stability_bonus = party_popularity@democratic_socialism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_neutrality_char NOT = { has_government = neutrality } }
					set_variable = { coalition_stability_bonus = party_popularity@neutrality}
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_autocracy_char NOT = { has_government = autocracy } }
					set_variable = { coalition_stability_bonus = party_popularity@autocracy }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_fascism_char NOT = { has_government = fascism } }
					set_variable = { coalition_stability_bonus = party_popularity@fascism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_communism_char NOT = { has_government = communism } }
					set_variable = { coalition_stability_bonus = party_popularity@communism }
				}
				multiply_variable = { coalition_stability_bonus = 0.15 }
				if = {
					limit = {
						NOT = {
							has_idea_with_trait = coalition_with_democratic
							has_idea_with_trait = coalition_with_democratic_socialism
							has_idea_with_trait = coalition_with_communism
							has_idea_with_trait = coalition_with_neutrality
							has_idea_with_trait = coalition_with_autocracy
							has_idea_with_trait = coalition_with_fascism
							has_idea_with_trait = coalition_with_democratic_char
							has_idea_with_trait = coalition_with_democratic_socialism_char
							has_idea_with_trait = coalition_with_communism_char
							has_idea_with_trait = coalition_with_neutrality_char
							has_idea_with_trait = coalition_with_autocracy_char
							has_idea_with_trait = coalition_with_fascism_char
						}
					}
					set_variable = { coalition_stability_bonus = 0 }
				}
				### DIVISION LIMIT SYSTEM	###
				calculate_division_limit = yes
				check_division_limit = yes
				### PARTY POPULARITY BONUSES
				if = {
					limit = { has_dynamic_modifier = { modifier = PRO_modifier_ruling_party_popularity } }	# it uses a PRO modifier but can work for every one
					set_temp_variable = { pop_bonus = party_popularity@ruling_party }
					multiply_temp_variable = { pop_bonus = 0.15 }											# attention to scale
					if = {
						limit = { has_idea_with_trait = party_popularity_war_support_bonus }
						set_variable = { PRO_war_support_propaganda_bonus = pop_bonus }						# please dont mind the very specific variable names
					} else = { set_variable = { PRO_war_support_propaganda_bonus = 0 } }
					if = {
						limit = { has_idea_with_trait = party_popularity_policial_power_bonus }
						set_variable = { PRO_politica_power_ban_extremism_bonus = pop_bonus }
					} else = { set_variable = { PRO_politica_power_ban_extremism_bonus = 0 } }
					if = {
						limit = { has_idea_with_trait = party_popularity_army_org_bonus }
						set_variable = { PRO_organization_codes_of_conduct_bonus = pop_bonus }
					} else = { set_variable = { PRO_organization_codes_of_conduct_bonus = 0 } }
					if = {
						limit = { has_idea_with_trait = party_popularity_legitimacy_bonus }
						set_variable = { legitimacy_popularity_bonus = pop_bonus }
					} else = { set_variable = { legitimacy_popularity_bonus = 0 } }
				}
			}
		}
		effect = {
			### TOTAL POPULATION & JAPANESE POPULATION ###
			set_variable = { country_total_population = 0 }
			set_variable = { country_japanese_population = 0 }
			every_controlled_state = {
				add_to_variable = { PREV.country_total_population = state_population_k }
				if = {
					limit = { OR = { is_on_continent = europe is_on_continent = honshu is_on_continent = kyushu is_on_continent = hokkaido is_on_continent = shikoku } }
					add_to_variable = { PREV.country_japanese_population = state_population_k }
				}
			}
		}
		effect = {
			### RELIGION 2.0 ###
			get_country_religion_buddhism = yes
			get_country_religion_shinto = yes
			get_country_religion_christianity = yes
			get_country_religion_taoism = yes
			get_country_religion_confucianism = yes
			get_country_religion_secularism = yes
			get_country_religion_cthulhu = yes
			get_country_religion_drift = yes
			get_official_religion_popularity = yes
			scale_country_religion_effect = yes
			set_country_religion_modifier = yes
			every_controlled_state = {
				get_religion_state_compliance_modifier = yes
			}
		}
		effect = {
			# 1929 1929 1929 1929 1929 1929 1929 1929
			if = {
				limit = {
					has_global_flag = crash_1929_global_enabled
				}
				every_country = {
					if = {
						limit = {
							NOT = { has_country_flag = crash_1929_country_enabled }
						}
						crash_1929_country_set_up = yes
					}
				}
				every_country = {
					if = {
						limit = { NOT = { has_government = communism } }	# this is meant for countries that spawn later in the game or change from communism to any other ideology
						crash_1929_calculate_effect = yes
						crash_1929_recalc_newspaper_icon_frames = yes
						if = {
							limit = {
								NOT = { has_active_mission = automatic_economic_recovery }
							}
							set_country_flag = automatic_economic_recovery_ready # it does not impede "regular" countries from yearly recovery, that start their count on january 1st, but should be reset later
							activate_mission = automatic_economic_recovery
							set_country_flag = reset_me_please
						}
					}
				}
				every_country = {
					if = {
						limit = {
							has_government = communism
							has_dynamic_modifier = { modifier = crash_1929_national_spirit }
						}
						remove_dynamic_modifier = { modifier = crash_1929_national_spirit }
						if = {
							limit = { has_active_mission = automatic_economic_recovery }
							remove_mission = automatic_economic_recovery
						}
					}
				}
			}
			if = {
				limit = {
					check_variable = { global.crash_1929_level < 1 }
				}
				crash_1929_end = yes
			}
		}
		effect = {
			### PRO SANCTION TOH ### PRO SANCTION TOH ### PRO SANCTION TOH ### PRO SANCTION TOH
			if = {
				limit = {
					country_exists = PRO
					PRO = {
						has_country_flag = PRO_enacted_sanctions_against_TOH
						NOT = { is_puppet_of = TOH }
					}
					TOH = {
						NOT = { has_war_with = PRO }
						NOT = { is_in_faction_with = PRO }
						NOT = { is_puppet_of = PRO }
					}
				}
				every_country = {
					limit = {
						OR = {
							tag = PRO
							is_puppet_of = PRO
						}
						NOT = { has_idea = PRO_idea_economic_sanction }
					}
					add_ideas = PRO_idea_economic_sanction
				}
				every_country = {
					limit = {
						has_idea = PRO_idea_economic_sanction
						NOT = {
							is_puppet_of = PRO
							tag = PRO
						}
					}
					remove_ideas = PRO_idea_economic_sanction
				}
			} else = {
				every_country = {
					limit = {
						has_idea = PRO_idea_economic_sanction
					}
					remove_ideas = PRO_idea_economic_sanction
				}
			}
		}
		effect = {
			### WORLD STAGE ###
			world_stage_get_coalitions = yes	# maybe depricated
		}
	}
	
	on_daily = {
		effect = {	### EXECUTE ON ONLY ONE COUNRTY A.K.A. "GLOBAL" ON DAILY ###
			if = {
				limit = { controls_state = 1 }
				world_stage_activate_daily_state_effect = yes
				world_stage_ai_ger = yes
				world_stage_ai_fra = yes
				world_stage_ai_eng = yes
				world_stage_ai_net = yes
				world_stage_ai_usa = yes
				world_stage_ai_chi = yes
				world_stage_ai_sov = yes
				log = "SPECIAL WORLDSTAGE LOG"
				every_state = {
					limit = { has_variable = theater_owner has_state_flag = theater_is_active }
					log = "[GetTheaterName] is active (timer: [?theater_timer] days)"
					log = "theater_owner_coalition: [?theater_owner_coalition] // coalition_side_attack: [?coalition_side_attack]"
				}
			}
		}
	}
	
	on_daily = {
		effect = {
			if = {
				limit = { is_ai = no }	### PLAYER EFFECTS (THESE ARE WEEKLY FOR AI)
				### UNIFICATION OF JAPAN ###
				if = {
					limit = { unification_candidate = yes }
					unification_get_score = yes
					unification_count_states_southern_japan = yes
					unification_count_states_central_japan = yes
					unification_count_states_northern_japan = yes
					get_all_unification_score_firsts = yes
					unification_count_total_states = yes
					unification_get_highter_score = yes
				}
				### COALITION STABILITY BONUS ###
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic NOT = { has_government = democratic } }
					set_variable = { coalition_stability_bonus = party_popularity@democratic }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic_socialism NOT = { has_government = democratic_socialism } }
					set_variable = { coalition_stability_bonus = party_popularity@democratic_socialism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_neutrality NOT = { has_government = neutrality } }
					set_variable = { coalition_stability_bonus = party_popularity@neutrality}
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_autocracy NOT = { has_government = autocracy } }
					set_variable = { coalition_stability_bonus = party_popularity@autocracy }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_fascism NOT = { has_government = fascism } }
					set_variable = { coalition_stability_bonus = party_popularity@fascism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_communism NOT = { has_government = communism } }
					set_variable = { coalition_stability_bonus = party_popularity@communism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic_char NOT = { has_government = democratic } }
					set_variable = { coalition_stability_bonus = party_popularity@democratic }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_democratic_socialism_char NOT = { has_government = democratic_socialism } }
					set_variable = { coalition_stability_bonus = party_popularity@democratic_socialism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_neutrality_char NOT = { has_government = neutrality } }
					set_variable = { coalition_stability_bonus = party_popularity@neutrality}
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_autocracy_char NOT = { has_government = autocracy } }
					set_variable = { coalition_stability_bonus = party_popularity@autocracy }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_fascism_char NOT = { has_government = fascism } }
					set_variable = { coalition_stability_bonus = party_popularity@fascism }
				}
				if = {
					limit = { has_idea_with_trait = coalition_with_communism_char NOT = { has_government = communism } }
					set_variable = { coalition_stability_bonus = party_popularity@communism }
				}
				multiply_variable = { coalition_stability_bonus = 0.15 }
				if = {
					limit = {
						NOT = {
							has_idea_with_trait = coalition_with_democratic
							has_idea_with_trait = coalition_with_democratic_socialism
							has_idea_with_trait = coalition_with_communism
							has_idea_with_trait = coalition_with_neutrality
							has_idea_with_trait = coalition_with_autocracy
							has_idea_with_trait = coalition_with_fascism
							has_idea_with_trait = coalition_with_democratic_char
							has_idea_with_trait = coalition_with_democratic_socialism_char
							has_idea_with_trait = coalition_with_communism_char
							has_idea_with_trait = coalition_with_neutrality_char
							has_idea_with_trait = coalition_with_autocracy_char
							has_idea_with_trait = coalition_with_fascism_char
						}
					}
					set_variable = { coalition_stability_bonus = 0 }
				}
				### DIVISION LIMIT SYSTEM	###
				calculate_division_limit = yes
				check_division_limit = yes
				### PARTY POPULARITY BONUSES
				if = {
					limit = { has_dynamic_modifier = { modifier = PRO_modifier_ruling_party_popularity } }	# it uses a PRO modifier but can work for every one
					set_temp_variable = { pop_bonus = party_popularity@ruling_party }
					multiply_temp_variable = { pop_bonus = 0.15 }											# attention to scale
					if = {
						limit = { has_idea_with_trait = party_popularity_war_support_bonus }
						set_variable = { PRO_war_support_propaganda_bonus = pop_bonus }						# please dont mind the very specific variable names
					} else = { set_variable = { PRO_war_support_propaganda_bonus = 0 } }
					if = {
						limit = { has_idea_with_trait = party_popularity_policial_power_bonus }
						set_variable = { PRO_politica_power_ban_extremism_bonus = pop_bonus }
					} else = { set_variable = { PRO_politica_power_ban_extremism_bonus = 0 } }
					if = {
						limit = { has_idea_with_trait = party_popularity_army_org_bonus }
						set_variable = { PRO_organization_codes_of_conduct_bonus = pop_bonus }
					} else = { set_variable = { PRO_organization_codes_of_conduct_bonus = 0 } }
					if = {
						limit = { has_idea_with_trait = party_popularity_legitimacy_bonus }
						set_variable = { legitimacy_popularity_bonus = pop_bonus }
					} else = { set_variable = { legitimacy_popularity_bonus = 0 } }
				}
				### WORLD STAGE TIMER UPDATE
				world_stage_get_timer_frame_daily = yes
			}
		}
	}
	
	on_daily_IMS = {
		effect = {
			if = {
				limit = {
					check_variable = {
						IMS.chu_isles_crisis_power > 50
					}
					check_variable = {
						IMS.chu_isles_crisis_power > IMS.shi_isles_crisis_power
					}
				}
					IMS = { 
						clr_country_flag = ims_isles_crisis
						set_country_flag = chugoku_win
					}
			}
			if = {
				limit = {
					check_variable = {
						IMS.shi_isles_crisis_power > 50
					}
					check_variable = {
						IMS.shi_isles_crisis_power > IMS.chu_isles_crisis_power
					}
				}
					IMS = { 
						clr_country_flag = ims_isles_crisis
						set_country_flag = shigoku_win
					}
			}
			if = {
				limit = {
					check_variable = {
						IMS.ims_isles_crisis_power > 100
					}
					check_variable = {
						IMS.ims_isles_crisis_power > IMS.chu_isles_crisis_power
						IMS.ims_isles_crisis_power > IMS.shi_isles_crisis_power
					}
				}
					IMS = { 
						clr_country_flag = ims_isles_crisis
						set_country_flag = ims_win
					}
			}
		}
	}
	
	on_daily_CHU = {
		effect = {
			if = {
				limit = {
					check_variable = {
						CHU.chu_democracy_revolt_power_shi > 50
					}
					check_variable = {
						CHU.chu_democracy_revolt_power_shi > CHU.shi_democracy_revolt_power
					}
				}
					SHI = { 
					clr_country_flag = chugoku_democracy_revolt 
					country_event = { id = chugoku.25 } 
					}
					CHU = { 
					set_country_flag = chugoku_democracy_revolt_civil_war_SHI 
					country_event = { id = chugoku.25 } 
					}
			}
			if = {
				limit = {
					check_variable = {
						CHU.chu_democracy_revolt_power_kyu > 50
					}
					check_variable = {
						CHU.chu_democracy_revolt_power_kyu > CHU.kyu_democracy_revolt_power
					}
				}
					KYU = { 
					clr_country_flag = chugoku_democracy_revolt 
					country_event = { id = chugoku.27 } 
					}
					CHU = { 
					set_country_flag = chugoku_democracy_revolt_civil_war_kyu 
					country_event = { id = chugoku.27 } 
					}
			}
			if = {
				limit = {
					check_variable = {
						CHU.kyu_democracy_revolt_power > 50
					}
					check_variable = {
						CHU.kyu_democracy_revolt_power > CHU.chu_democracy_revolt_power_kyu
					}
				}
					KYU = { 
					clr_country_flag = chugoku_democracy_revolt 
					country_event = { id = chugoku.28 }
					}
					CHU = { 
					clr_country_flag = chugoku_democracy_revolt 
					country_event = { id = chugoku.28 }
					}
			}
			if = {
				limit = {
					check_variable = {
						CHU.shi_democracy_revolt_power > 50
					}
					check_variable = {
						CHU.shi_democracy_revolt_power > CHU.chu_democracy_revolt_power_shi
					}
				}
					SHI = { 
					clr_country_flag = chugoku_democracy_revolt 
					country_event = { id = chugoku.26 }
					}
					CHU = { 
					clr_country_flag = chugoku_democracy_revolt 
					country_event = { id = chugoku.26 }
					}
			}
			if = {
				limit = {
					check_variable = {
						CHU.chu_democracy_revolt_power_shi > 50
					}
					check_variable = {
						CHU.chu_democracy_revolt_power_shi > CHU.shi_democracy_revolt_power
					}
				}
					SHI = { clr_country_flag = chugoku_democracy_revolt }
					CHU = { clr_country_flag = chugoku_democracy_revolt }
			}
			if = {
				limit = {
					check_variable = {
						CHU.chu_democracy_revolt_power_kyu > 50
					}
					check_variable = {
						CHU.chu_democracy_revolt_power_kyu > CHU.kyu_democracy_revolt_power
					}
				}
					KYU = { clr_country_flag = chugoku_democracy_revolt }
					CHU = { clr_country_flag = chugoku_democracy_revolt }
			}
		}
	}
	
	on_monthly = {
		effect = {
		### TRADE CITIES 2.0	###
			every_country = {
				check_trade_cities = yes
			}
		}
		effect = {
		### RELIGION 2.0 ###
			every_controlled_state = {
				state_drift_religion = yes
			}
		}
		### PLANNED ECONOMY ###
		effect = {
			if = {
				limit = { is_ai = yes }	### AI MONTHLY EFFECTS (THESE ARE WEEKLY FOR PLAYERS)
				if = {
					limit = { has_government = communism }
					if = {
						limit = { NOT = { has_dynamic_modifier = { modifier = planned_economy_modifier } } }
						add_dynamic_modifier = { modifier = planned_economy_modifier }
					}
					set_variable = { planned_economy_minimum_goods = 0.3 }
					set_variable = { war_support_goods_modifier = 0 }
					if = {
						limit = {
							has_war = yes
							has_war_support > 0.5
						}
						set_variable = { war_support_goods_modifier = has_war_support }
						multiply_variable = { war_support_goods_modifier = 0.2 }
						subtract_from_variable = { planned_economy_minimum_goods = war_support_goods_modifier }
					}
					set_variable = { planned_economy_political_power = modifier@consumer_goods_factor }
					subtract_from_variable = { planned_economy_political_power = planned_economy_minimum_goods }
					multiply_variable = { planned_economy_political_power = 2 }
					set_variable = { planned_economy_party_popularity = modifier@consumer_goods_factor }
					subtract_from_variable = { planned_economy_party_popularity = planned_economy_minimum_goods }
				} else = {
					if = {
						limit = { has_dynamic_modifier = { modifier = planned_economy_modifier } }
						remove_dynamic_modifier = { modifier = planned_economy_modifier }
					}
				}
			}
		}
		### WORLD STAGE ###
		effect = {
			if = {
				limit = { controls_state = 1 }
				### update generic doctrines
				random_list = {
					1 = { add_to_variable = { global.generic_doctrine_bonus_land = 0.1 } }		# updates land doctrine
					17 = {	}																	# nothing happens
				}
				random_list = {
					1 = { add_to_variable = { global.generic_doctrine_bonus_navy = 0.1 } }		# updates navy doctrine
					17 = {	}																	# nothing happens
				}
				random_list = {
					1 = {
						add_to_variable = { global.generic_doctrine_bonus_land = 0.05 }			# updates "air" doctrine
						add_to_variable = { global.generic_doctrine_bonus_navy = 0.05 }
					}
					17 = {	}																	# nothing happens
				}
				clamp_variable = { var = global.generic_doctrine_bonus_land min = 0 max = 1 }
				clamp_variable = { var = global.generic_doctrine_bonus_land min = 0 max = 1 }
			}
		}
	}
	
	on_war = {
		effect = {
			### PLANNED ECONOMY ###
			if = {
				limit = { has_government = communism }
				planned_economy_update = yes
			}
		}
	}
	
	on_peace = {
		effect = {
			### PLANNED ECONOMY ###
			if = {
				limit = { has_government = communism }
				planned_economy_update = yes
			}
		}
	}
	
	on_ruling_party_change = {	
		effect = {
			### SET OR RESET 1929 CRASH ###
			if = {
				limit = { has_global_flag = crash_1929_global_enabled }
				if = {
					limit = { has_government = communism }
					remove_dynamic_modifier = { modifier = crash_1929_national_spirit }
					if = {
						limit = { has_active_mission = automatic_economic_recovery }
						remove_mission = automatic_economic_recovery
					}
				} else = {
					crash_1929_calculate_effect = yes
					add_dynamic_modifier = {
						modifier = crash_1929_national_spirit
					}
				}
			}
			### PLANNED ECONOMY ###
			if = {
				limit = { has_government = communism }
				planned_economy_set_up = yes
			} else = { planned_economy_remove = yes }
		}
	}
}
