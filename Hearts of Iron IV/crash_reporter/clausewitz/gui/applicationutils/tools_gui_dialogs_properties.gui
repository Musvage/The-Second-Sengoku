template dialog_property_size {
	size = { 192 24 }
}

types ToolsProperyTypes
{
	type dialog_property = hbox {
		tooltipwidget = {
			using = dockable_tooltip
		}
		
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = preferred

		tooltip = "[ToolProperty.GetTooltip]"
		tooltip_widgetanchor = bottom|left

		spacing = 16
		
		editor_textbox = {
			text = "[ToolProperty.GetLabel]"
			autoresize = yes
			elide = right
			fontcolor = "[ToolProperty.GetColor]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = preferred
		}

		block "content"
		{
		}
	}
	
	type dialog_property_bool = dialog_property {
		blockoverride "content"
		{
			checkbutton = {
				gfxtype = checkbuttongfx
				shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
				texture = "gfx/editor_gui/editor_checkbox.dds"
				framesize = { 16 16 }
				checked = "[ToolPropertyBool.IsEnabled]"
				onclick = "[ToolPropertyBool.SetEnabled(Not(ToolPropertyBool.IsEnabled))]"
			}
		}
	}

	type dialog_property_string = dialog_property {
		blockoverride "content"
		{
			editor_textinput = {
				using = dialog_property_size
				text = "[ToolPropertyString.GetString]"
				oneditingfinished = "[ToolPropertyString.SetString]"
				#onreturnpressed = "[ToolInputDialog.Confirm]"
			}
		}
	}

	type dialog_property_cstring = dialog_property {
		blockoverride "content"
		{
			editor_textinput = {
				using = dialog_property_size
				text = "[ToolPropertyCString.GetString]"
				oneditingfinished = "[ToolPropertyCString.SetString]"
			}
		}
	}
	
	type dialog_property_float = dialog_property {
		blockoverride "content"
		{
			editor_textinput = {
				using = dialog_property_size
				text = "[ToolPropertyFloat.GetFloat]"
				oneditingfinished = "[ToolPropertyFloat.SetFloat]"
				#onreturnpressed = "[ToolInputDialog.Confirm]"
			}
		}
	}
	
	type dialog_property_int = dialog_property {
		blockoverride "content"
		{
			editor_textinput = {
				using = dialog_property_size
				text = "[ToolPropertyInt.GetInt]"
				oneditingfinished = "[ToolPropertyInt.SetInt]"
				#onreturnpressed = "[ToolInputDialog.Confirm]"
			}
		}
	}
	
	type dialog_property_uint = dialog_property {
		blockoverride "content"
		{
			editor_textinput = {
				using = dialog_property_size
				text = "[ToolPropertyUint.GetUint]"
				oneditingfinished = "[ToolPropertyUint.SetUint]"
				#onreturnpressed = "[ToolInputDialog.Confirm]"
			}
		}
	}
	
	type dialog_property_color = dialog_property {
		blockoverride "content"
		{
			colorpicker = {
				color = "[ToolPropertyColor.GetColor]"
				#oncoloredited = "[ToolPropertyColor.SetColor]"
				oneditingfinished = "[ToolPropertyColor.SetColor]"
			}
		}
	}
	
	type dialog_property_ccolor = dialog_property {
		blockoverride "content"
		{
			colorpicker = {
				color = "[ToolPropertyCColor.GetCColor]"
				#oncoloredited = "[ToolPropertyCColor.SetColor]"
				oneditingfinished = "[ToolPropertyCColor.SetCColor]"
			}
		}
	}
	
	type dialog_property_vec3f = dialog_property {
		blockoverride "content"
		{
			flowcontainer = {
				spacing = 8

				editor_textinput = {
					size = { 58 24 }
					text = "[ToolPropertyVec3f.GetX]"
					oneditingfinished = "[ToolPropertyVec3f.SetX]"
					#onreturnpressed = "[ToolInputDialog.Confirm]"
				}
				
				editor_textinput = {
					size = { 58 24 }
					text = "[ToolPropertyVec3f.GetY]"
					oneditingfinished = "[ToolPropertyVec3f.SetY]"
					#onreturnpressed = "[ToolInputDialog.Confirm]"
				}
				
				editor_textinput = {
					size = { 58 24 }
					text = "[ToolPropertyVec3f.GetZ]"
					oneditingfinished = "[ToolPropertyVec3f.SetZ]"
					#onreturnpressed = "[ToolInputDialog.Confirm]"
				}
			}
		}
	}
	
	type dialog_property_vec2f = dialog_property {
		blockoverride "content"
		{
			flowcontainer = {
				spacing = 8

				editor_textinput = {
					size = { 92 24 }
					text = "[ToolPropertyVec2f.GetX]"
					oneditingfinished = "[ToolPropertyVec2f.SetX]"
					#onreturnpressed = "[ToolInputDialog.Confirm]"
				}
				
				editor_textinput = {
					size = { 92 24 }
					text = "[ToolPropertyVec2f.GetY]"
					oneditingfinished = "[ToolPropertyVec2f.SetY]"
					#onreturnpressed = "[ToolInputDialog.Confirm]"
				}
			}
		}
	}

	type dialog_property_vec2i = dialog_property {
		blockoverride "content"
		{
			flowcontainer = {
				spacing = 8

				editor_textinput = {
					size = { 92 24 }
					text = "[ToolPropertyVec2i.GetX]"
					oneditingfinished = "[ToolPropertyVec2i.SetX]"
				}
				
				editor_textinput = {
					size = { 92 24 }
					text = "[ToolPropertyVec2i.GetY]"
					oneditingfinished = "[ToolPropertyVec2i.SetY]"
				}
			}
		}
	}

	type dialog_property_percentvalue = dialog_property {
		blockoverride "content"
		{
			flowcontainer = {
				spacing = 8

				editor_textinput = {
					size = { 92 24 }
					text = "[ToolPropertyVec2fPercent.GetX]"
					oneditingfinished = "[ToolPropertyVec2fPercent.SetX]"
				}
				
				editor_textinput = {
					size = { 92 24 }
					text = "[ToolPropertyVec2fPercent.GetY]"
					oneditingfinished = "[ToolPropertyVec2fPercent.SetY]"
				}
			}
		}
	}
	
	type dialog_property_searchlist = dialog_property {
		blockoverride "content"
		{
			editor_toolbar_button = {
				using = dialog_property_size
				text = "[ToolPropertySearchList.GetSelectedText]"
				onclick = "[ToolPropertySearchList.OpenSearchList]"
			}
		}
	}
	
	type dialog_property_categories = vbox {
		layoutpolicy_horizontal = preferred
		layoutpolicy_vertical = preferred
		
		checkbutton = {
			checked = "[ToolPropertyList.IsExpanded]"
			onclick = "[ToolPropertyList.SetExpanded(Not(ToolPropertyList.IsExpanded))]"
			texture = "gfx/editor_gui/editor_frame.dds"
			layoutpolicy_horizontal = preferred
			
			size = { 0 24 }

			spriteborder = { 5 5 }
			spriteType = CorneredStretched
			framesize = { 16 16 }
			
			hbox = {
				margin_left = 8
				margin_bottom = 4
				margin_right = 8
				
				editor_textbox = {
					#text = "#BOLD;COLOR:{0.72,0.72,0.15} [ToolPropertyList.GetLabel] #!"
					text = "#BOLD; [ToolPropertyList.GetLabel] #!"
					fontcolor = "[ToolPropertyList.GetColor]"
					autoresize = yes
				}
				
				widget = {
					layoutpolicy_horizontal = preferred
				}
				
				checkbutton = {
					gfxtype = checkbuttongfx
					shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
					texture = "gfx/editor_gui/editor_expand_checkbox.dds"
					framesize = { 16 16 }
					size = { 8 8 }
					checked = "[ToolPropertyList.IsExpanded]"
					onclick = "[ToolPropertyList.SetExpanded(Not(ToolPropertyList.IsExpanded))]"
				}
			}
		}
		
		vbox = {
			name = "list"
			margin_top = 2
			spacing = 4
			layoutpolicy_horizontal = preferred
			layoutpolicy_vertical = preferred
			visible = "[ToolPropertyList.IsExpanded]"
		}
	}
}
